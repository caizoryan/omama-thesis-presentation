{
  "version": 3,
  "sources": ["../node_modules/qr-scanner/node_modules/jsqr-es6/src/BitMatrix.ts", "../node_modules/qr-scanner/node_modules/jsqr-es6/src/binarizer/index.ts", "../node_modules/qr-scanner/node_modules/jsqr-es6/src/decoder/decodeData/BitStream.ts", "../node_modules/qr-scanner/node_modules/jsqr-es6/src/decoder/decodeData/index.ts", "../node_modules/qr-scanner/node_modules/jsqr-es6/src/decoder/reedsolomon/GenericGFPoly.ts", "../node_modules/qr-scanner/node_modules/jsqr-es6/src/decoder/reedsolomon/GenericGF.ts", "../node_modules/qr-scanner/node_modules/jsqr-es6/src/decoder/reedsolomon/index.ts", "../node_modules/qr-scanner/node_modules/jsqr-es6/src/decoder/version.ts", "../node_modules/qr-scanner/node_modules/jsqr-es6/src/decoder/decoder.ts", "../node_modules/qr-scanner/node_modules/jsqr-es6/src/extractor/index.ts", "../node_modules/qr-scanner/node_modules/jsqr-es6/src/locator/index.ts", "../node_modules/qr-scanner/node_modules/jsqr-es6/src/index.ts", "../node_modules/qr-scanner/src/worker.ts", "../node_modules/qr-scanner/src/qr-scanner.ts", "../q5/q5.js", "../script.ts"],
  "sourcesContent": ["export class BitMatrix {\n  public static createEmpty(width: number, height: number) {\n    return new BitMatrix(new Uint8ClampedArray(width * height), width);\n  }\n\n  public width: number;\n  public height: number;\n  private data: Uint8ClampedArray;\n\n  constructor(data: Uint8ClampedArray, width: number) {\n    this.width = width;\n    this.height = data.length / width;\n    this.data = data;\n  }\n\n  public get(x: number, y: number): boolean {\n    if (x < 0 || x >= this.width || y < 0 || y >= this.height) {\n      return false;\n    }\n    return !!this.data[y * this.width + x];\n  }\n\n  public set(x: number, y: number, v: boolean) {\n    this.data[y * this.width + x] = v ? 1 : 0;\n  }\n\n  public setRegion(left: number, top: number, width: number, height: number, v: boolean) {\n    for (let y = top; y < top + height; y++) {\n      for (let x = left; x < left + width; x++) {\n        this.set(x, y, !!v);\n      }\n    }\n  }\n}\n", "import {BitMatrix} from \"../BitMatrix\";\nimport {GreyscaleWeights} from \"../index\";\n\nconst REGION_SIZE = 8;\nconst MIN_DYNAMIC_RANGE = 24;\n\nfunction numBetween(value: number, min: number, max: number): number {\n  return value < min ? min : value > max ? max : value;\n}\n\n// Like BitMatrix but accepts arbitry Uint8 values\nclass Matrix {\n  private data: Uint8ClampedArray;\n  private width: number;\n  constructor(width: number, height: number, buffer?: Uint8ClampedArray) {\n    this.width = width;\n    const bufferSize = width * height;\n    if (buffer && buffer.length !== bufferSize) {\n      throw new Error(\"Wrong buffer size\");\n    }\n    this.data = buffer || new Uint8ClampedArray(bufferSize);\n  }\n  public get(x: number, y: number) {\n    return this.data[y * this.width + x];\n  }\n  public set(x: number, y: number, value: number) {\n    this.data[y * this.width + x] = value;\n  }\n}\n\nexport function binarize(data: Uint8ClampedArray, width: number, height: number, returnInverted: boolean,\n                         greyscaleWeights: GreyscaleWeights, canOverwriteImage: boolean) {\n  const pixelCount = width * height;\n  if (data.length !== pixelCount * 4) {\n    throw new Error(\"Malformed data passed to binarizer.\");\n  }\n  // assign the greyscale and binary image within the rgba buffer as the rgba image will not be needed after conversion\n  let bufferOffset = 0;\n  // Convert image to greyscale\n  let greyscaleBuffer: Uint8ClampedArray;\n  if (canOverwriteImage) {\n    greyscaleBuffer = new Uint8ClampedArray(data.buffer, bufferOffset, pixelCount);\n    bufferOffset += pixelCount;\n  }\n  const greyscalePixels = new Matrix(width, height, greyscaleBuffer);\n  if (greyscaleWeights.useIntegerApproximation) {\n    for (let y = 0; y < height; y++) {\n      for (let x = 0; x < width; x++) {\n        const pixelPosition = (y * width + x) * 4;\n        const r = data[pixelPosition];\n        const g = data[pixelPosition + 1];\n        const b = data[pixelPosition + 2];\n        greyscalePixels.set(x, y,\n          // tslint:disable-next-line no-bitwise\n          (greyscaleWeights.red * r + greyscaleWeights.green * g + greyscaleWeights.blue * b + 128) >> 8);\n      }\n    }\n  } else {\n    for (let y = 0; y < height; y++) {\n      for (let x = 0; x < width; x++) {\n        const pixelPosition = (y * width + x) * 4;\n        const r = data[pixelPosition];\n        const g = data[pixelPosition + 1];\n        const b = data[pixelPosition + 2];\n        greyscalePixels.set(x, y,\n          greyscaleWeights.red * r + greyscaleWeights.green * g + greyscaleWeights.blue * b);\n      }\n    }\n  }\n  const horizontalRegionCount = Math.ceil(width / REGION_SIZE);\n  const verticalRegionCount = Math.ceil(height / REGION_SIZE);\n  const blackPointsCount = horizontalRegionCount * verticalRegionCount;\n\n  let blackPointsBuffer: Uint8ClampedArray;\n  if (canOverwriteImage) {\n    blackPointsBuffer = new Uint8ClampedArray(data.buffer, bufferOffset, blackPointsCount);\n    bufferOffset += blackPointsCount;\n  }\n  const blackPoints = new Matrix(horizontalRegionCount, verticalRegionCount, blackPointsBuffer);\n  for (let verticalRegion = 0; verticalRegion < verticalRegionCount; verticalRegion++) {\n    for (let hortizontalRegion = 0; hortizontalRegion < horizontalRegionCount; hortizontalRegion++) {\n      let min = Infinity;\n      let max = 0;\n      for (let y = 0; y < REGION_SIZE; y++) {\n        for (let x = 0; x < REGION_SIZE; x++) {\n          const pixelLumosity =\n            greyscalePixels.get(hortizontalRegion * REGION_SIZE + x, verticalRegion * REGION_SIZE + y);\n          min = Math.min(min, pixelLumosity);\n          max = Math.max(max, pixelLumosity);\n        }\n      }\n      // We could also compute the real average of all pixels but following the assumption that the qr code consists\n      // of bright and dark pixels and essentially not much in between, by (min + max)/2 we make the cut really between\n      // those two classes. If using the average over all pixel in a block of mostly bright pixels and few dark pixels,\n      // the avg would tend to the bright side and darker bright pixels could be interpreted as dark.\n      let average = (min + max) / 2;\n      // Small bias towards black by moving the threshold up. We do this, as in the finder patterns white holes tend\n      // to appear which makes them undetectable.\n      const blackBias = 1.11;\n      average = Math.min(255, average * blackBias);\n      if (max - min <= MIN_DYNAMIC_RANGE) {\n        // If variation within the block is low, assume this is a block with only light or only\n        // dark pixels. In that case we do not want to use the average, as it would divide this\n        // low contrast area into black and white pixels, essentially creating data out of noise.\n        //\n        // Default the blackpoint for these blocks to be half the min - effectively white them out\n        average = min / 2;\n\n        if (verticalRegion > 0 && hortizontalRegion > 0) {\n          // Correct the \"white background\" assumption for blocks that have neighbors by comparing\n          // the pixels in this block to the previously calculated black points. This is based on\n          // the fact that dark barcode symbology is always surrounded by some amount of light\n          // background for which reasonable black point estimates were made. The bp estimated at\n          // the boundaries is used for the interior.\n\n          // The (min < bp) is arbitrary but works better than other heuristics that were tried.\n          const averageNeighborBlackPoint = (\n            blackPoints.get(hortizontalRegion, verticalRegion - 1) +\n            (2 * blackPoints.get(hortizontalRegion - 1, verticalRegion)) +\n            blackPoints.get(hortizontalRegion - 1, verticalRegion - 1)\n          ) / 4;\n          if (min < averageNeighborBlackPoint) {\n            average = averageNeighborBlackPoint; // no need to apply black bias as already applied to neighbors\n          }\n        }\n      }\n      blackPoints.set(hortizontalRegion, verticalRegion, average);\n    }\n  }\n\n  let binarized: BitMatrix;\n  if (canOverwriteImage) {\n    const binarizedBuffer = new Uint8ClampedArray(data.buffer, bufferOffset, pixelCount);\n    bufferOffset += pixelCount;\n    binarized = new BitMatrix(binarizedBuffer, width);\n  } else {\n    binarized = BitMatrix.createEmpty(width, height);\n  }\n\n  let inverted: BitMatrix = null;\n  if (returnInverted) {\n    if (canOverwriteImage) {\n      const invertedBuffer = new Uint8ClampedArray(data.buffer, bufferOffset, pixelCount);\n      inverted = new BitMatrix(invertedBuffer, width);\n    } else {\n      inverted = BitMatrix.createEmpty(width, height);\n    }\n  }\n\n  for (let verticalRegion = 0; verticalRegion < verticalRegionCount; verticalRegion++) {\n    for (let hortizontalRegion = 0; hortizontalRegion < horizontalRegionCount; hortizontalRegion++) {\n      const left = numBetween(hortizontalRegion, 2, horizontalRegionCount - 3);\n      const top = numBetween(verticalRegion, 2, verticalRegionCount - 3);\n      let sum = 0;\n      for (let xRegion = -2; xRegion <= 2; xRegion++) {\n        for (let yRegion = -2; yRegion <= 2; yRegion++) {\n          sum += blackPoints.get(left + xRegion, top + yRegion);\n        }\n      }\n      const threshold = sum / 25;\n      for (let xRegion = 0; xRegion < REGION_SIZE; xRegion++) {\n        for (let yRegion = 0; yRegion < REGION_SIZE; yRegion++) {\n          const x = hortizontalRegion * REGION_SIZE + xRegion;\n          const y = verticalRegion * REGION_SIZE + yRegion;\n          const lum = greyscalePixels.get(x, y);\n          binarized.set(x, y, lum <= threshold);\n          if (returnInverted) {\n            inverted.set(x, y, !(lum <= threshold));\n          }\n        }\n      }\n    }\n  }\n  if (returnInverted) {\n    return { binarized, inverted };\n  }\n  return { binarized };\n}\n", "// tslint:disable:no-bitwise\n\nexport class BitStream {\n  private bytes: Uint8ClampedArray;\n  private byteOffset: number = 0;\n  private bitOffset: number = 0;\n\n  constructor(bytes: Uint8ClampedArray) {\n    this.bytes = bytes;\n  }\n\n  public readBits(numBits: number): number {\n    if (numBits < 1 || numBits > 32 || numBits > this.available()) {\n      throw new Error(\"Cannot read \" + numBits.toString() + \" bits\");\n    }\n\n    let result = 0;\n    // First, read remainder from current byte\n    if (this.bitOffset > 0) {\n      const bitsLeft = 8 - this.bitOffset;\n      const toRead = numBits < bitsLeft ? numBits : bitsLeft;\n      const bitsToNotRead = bitsLeft - toRead;\n      const mask = (0xFF >> (8 - toRead)) << bitsToNotRead;\n      result = (this.bytes[this.byteOffset] & mask) >> bitsToNotRead;\n      numBits -= toRead;\n      this.bitOffset += toRead;\n      if (this.bitOffset === 8) {\n        this.bitOffset = 0;\n        this.byteOffset++;\n      }\n    }\n\n    // Next read whole bytes\n    if (numBits > 0) {\n      while (numBits >= 8) {\n        result = (result << 8) | (this.bytes[this.byteOffset] & 0xFF);\n        this.byteOffset++;\n        numBits -= 8;\n      }\n\n      // Finally read a partial byte\n      if (numBits > 0) {\n        const bitsToNotRead = 8 - numBits;\n        const mask = (0xFF >> bitsToNotRead) << bitsToNotRead;\n        result = (result << numBits) | ((this.bytes[this.byteOffset] & mask) >> bitsToNotRead);\n        this.bitOffset += numBits;\n      }\n    }\n    return result;\n  }\n\n  public available(): number {\n    return 8 * (this.bytes.length - this.byteOffset) - this.bitOffset;\n  }\n}\n", "// tslint:disable:no-bitwise\nimport { BitStream } from \"./BitStream\";\n\nexport interface Chunk {\n  type: Mode;\n  text: string;\n}\n\nexport interface ByteChunk {\n  type: Mode.Byte | Mode.Kanji;\n  bytes: number[];\n}\n\nexport interface ECIChunk {\n  type: Mode.ECI;\n  assignmentNumber: number;\n}\n\nexport interface StructuredAppend {\n  type: Mode.StructuredAppend;\n  currentSequence: number;\n  totalSequence: number;\n  parity: number;\n}\n\nexport type Chunks = Array<Chunk | ByteChunk | ECIChunk | StructuredAppend>;\n\nexport interface DecodedQR {\n  text: string;\n  bytes: number[];\n  chunks: Chunks;\n  version: number;\n}\n\nexport enum Mode {\n  Numeric = \"numeric\",\n  Alphanumeric = \"alphanumeric\",\n  Byte = \"byte\",\n  Kanji = \"kanji\",\n  ECI = \"eci\",\n  StructuredAppend = \"structuredappend\",\n}\n\nenum ModeByte {\n  Terminator = 0x0,\n  Numeric = 0x1,\n  Alphanumeric = 0x2,\n  Byte = 0x4,\n  Kanji = 0x8,\n  ECI = 0x7,\n  StructuredAppend = 0x3,\n  // FNC1FirstPosition = 0x5,\n  // FNC1SecondPosition = 0x9,\n}\n\nfunction decodeNumeric(stream: BitStream, size: number) {\n  const bytes: number[] = [];\n  let text = \"\";\n\n  const characterCountSize = [10, 12, 14][size];\n  let length = stream.readBits(characterCountSize);\n  // Read digits in groups of 3\n  while (length >= 3) {\n    const num = stream.readBits(10);\n    if (num >= 1000) {\n      throw new Error(\"Invalid numeric value above 999\");\n    }\n\n    const a = Math.floor(num / 100);\n    const b = Math.floor(num / 10) % 10;\n    const c = num % 10;\n\n    bytes.push(48 + a, 48 + b, 48 + c);\n    text += a.toString() + b.toString() + c.toString();\n    length -= 3;\n  }\n\n  // If the number of digits aren't a multiple of 3, the remaining digits are special cased.\n  if (length === 2) {\n    const num = stream.readBits(7);\n    if (num >= 100) {\n      throw new Error(\"Invalid numeric value above 99\");\n    }\n\n    const a = Math.floor(num / 10);\n    const b = num % 10;\n\n    bytes.push(48 + a, 48 + b);\n    text += a.toString() + b.toString();\n  } else if (length === 1) {\n    const num = stream.readBits(4);\n    if (num >= 10) {\n      throw new Error(\"Invalid numeric value above 9\");\n    }\n\n    bytes.push(48 + num);\n    text += num.toString();\n  }\n\n  return { bytes, text };\n}\n\nconst AlphanumericCharacterCodes = [\n  \"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\",\n  \"9\", \"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\",\n  \"I\", \"J\", \"K\", \"L\", \"M\", \"N\", \"O\", \"P\", \"Q\",\n  \"R\", \"S\", \"T\", \"U\", \"V\", \"W\", \"X\", \"Y\", \"Z\",\n  \" \", \"$\", \"%\", \"*\", \"+\", \"-\", \".\", \"/\", \":\",\n];\n\nfunction decodeAlphanumeric(stream: BitStream, size: number) {\n  const bytes: number[] = [];\n  let text = \"\";\n\n  const characterCountSize = [9, 11, 13][size];\n  let length = stream.readBits(characterCountSize);\n  while (length >= 2) {\n    const v = stream.readBits(11);\n\n    const a = Math.floor(v / 45);\n    const b = v % 45;\n\n    bytes.push(AlphanumericCharacterCodes[a].charCodeAt(0), AlphanumericCharacterCodes[b].charCodeAt(0));\n    text += AlphanumericCharacterCodes[a] + AlphanumericCharacterCodes[b];\n    length -= 2;\n  }\n\n  if (length === 1) {\n    const a = stream.readBits(6);\n    bytes.push(AlphanumericCharacterCodes[a].charCodeAt(0));\n    text += AlphanumericCharacterCodes[a];\n  }\n\n  return { bytes, text };\n}\n\nfunction decodeByte(stream: BitStream, size: number) {\n  const bytes: number[] = [];\n  let text = \"\";\n\n  const characterCountSize = [8, 16, 16][size];\n  const length = stream.readBits(characterCountSize);\n  for (let i = 0; i < length; i++) {\n    const b = stream.readBits(8);\n    bytes.push(b);\n  }\n  try {\n    text += decodeURIComponent(bytes.map(b => `%${(\"0\" + b.toString(16)).substr(-2)}`).join(\"\"));\n  } catch {\n    // failed to decode\n  }\n\n  return { bytes, text };\n}\n\nfunction decodeKanji(stream: BitStream, size: number) {\n  const bytes: number[] = [];\n\n  const characterCountSize = [8, 10, 12][size];\n  const length = stream.readBits(characterCountSize);\n  for (let i = 0; i < length; i++) {\n    const k = stream.readBits(13);\n\n    let c = (Math.floor(k / 0xC0) << 8) | (k % 0xC0);\n    if (c < 0x1F00) {\n      c += 0x8140;\n    } else {\n      c += 0xC140;\n    }\n\n    bytes.push(c >> 8, c & 0xFF);\n  }\n\n  const text = new TextDecoder(\"shift-jis\").decode(Uint8Array.from(bytes));\n  return { bytes, text };\n}\n\nexport function decode(data: Uint8ClampedArray, version: number): DecodedQR {\n  const stream = new BitStream(data);\n\n  // There are 3 'sizes' based on the version. 1-9 is small (0), 10-26 is medium (1) and 27-40 is large (2).\n  const size = version <= 9 ? 0 : version <= 26 ? 1 : 2;\n\n  const result: DecodedQR = {\n    text: \"\",\n    bytes: [],\n    chunks: [],\n    version,\n  };\n\n  while (stream.available() >= 4) {\n    const mode = stream.readBits(4);\n    if (mode === ModeByte.Terminator) {\n      return result;\n    } else if (mode === ModeByte.ECI) {\n      if (stream.readBits(1) === 0) {\n        result.chunks.push({\n          type: Mode.ECI,\n          assignmentNumber: stream.readBits(7),\n        });\n      } else if (stream.readBits(1) === 0) {\n        result.chunks.push({\n          type: Mode.ECI,\n          assignmentNumber: stream.readBits(14),\n        });\n      } else if (stream.readBits(1) === 0) {\n        result.chunks.push({\n          type: Mode.ECI,\n          assignmentNumber: stream.readBits(21),\n        });\n      } else {\n        // ECI data seems corrupted\n        result.chunks.push({\n          type: Mode.ECI,\n          assignmentNumber: -1,\n        });\n      }\n    } else if (mode === ModeByte.Numeric) {\n      const numericResult = decodeNumeric(stream, size);\n      result.text += numericResult.text;\n      result.bytes.push(...numericResult.bytes);\n      result.chunks.push({\n        type: Mode.Numeric,\n        text: numericResult.text,\n      });\n    } else if (mode === ModeByte.Alphanumeric) {\n      const alphanumericResult = decodeAlphanumeric(stream, size);\n      result.text += alphanumericResult.text;\n      result.bytes.push(...alphanumericResult.bytes);\n      result.chunks.push({\n        type: Mode.Alphanumeric,\n        text: alphanumericResult.text,\n      });\n    } else if (mode === ModeByte.Byte) {\n      const byteResult = decodeByte(stream, size);\n      result.text += byteResult.text;\n      result.bytes.push(...byteResult.bytes);\n      result.chunks.push({\n        type: Mode.Byte,\n        bytes: byteResult.bytes,\n        text: byteResult.text,\n      });\n    } else if (mode === ModeByte.Kanji) {\n      const kanjiResult = decodeKanji(stream, size);\n      result.text += kanjiResult.text;\n      result.bytes.push(...kanjiResult.bytes);\n      result.chunks.push({\n        type: Mode.Kanji,\n        bytes: kanjiResult.bytes,\n        text: kanjiResult.text,\n      });\n    } else if (mode === ModeByte.StructuredAppend) {\n      result.chunks.push({\n        type: Mode.StructuredAppend,\n        currentSequence: stream.readBits(4),\n        totalSequence: stream.readBits(4),\n        parity: stream.readBits(8),\n      });\n    }\n  }\n\n  // If there is no data left, or the remaining bits are all 0, then that counts as a termination marker\n  if (stream.available() === 0 || stream.readBits(stream.available()) === 0) {\n    return result;\n  }\n}\n", "import GenericGF, { addOrSubtractGF } from \"./GenericGF\";\n\nexport default class GenericGFPoly {\n  private field: GenericGF;\n  private coefficients: Uint8ClampedArray;\n\n  constructor(field: GenericGF, coefficients: Uint8ClampedArray) {\n    if (coefficients.length === 0) {\n      throw new Error(\"No coefficients.\");\n    }\n    this.field = field;\n    const coefficientsLength = coefficients.length;\n    if (coefficientsLength > 1 && coefficients[0] === 0) {\n      // Leading term must be non-zero for anything except the constant polynomial \"0\"\n      let firstNonZero = 1;\n      while (firstNonZero < coefficientsLength && coefficients[firstNonZero] === 0) {\n        firstNonZero++;\n      }\n      if (firstNonZero === coefficientsLength) {\n        this.coefficients = field.zero.coefficients;\n      } else {\n        this.coefficients = new Uint8ClampedArray(coefficientsLength - firstNonZero);\n        for (let i = 0; i < this.coefficients.length; i++) {\n          this.coefficients[i] = coefficients[firstNonZero + i];\n        }\n      }\n    } else {\n      this.coefficients = coefficients;\n    }\n  }\n\n  public degree() {\n    return this.coefficients.length - 1;\n  }\n\n  public isZero() {\n    return this.coefficients[0] === 0;\n  }\n\n  public getCoefficient(degree: number) {\n    return this.coefficients[this.coefficients.length - 1 - degree];\n  }\n\n  public addOrSubtract(other: GenericGFPoly) {\n    if (this.isZero()) {\n      return other;\n    }\n    if (other.isZero()) {\n      return this;\n    }\n\n    let smallerCoefficients = this.coefficients;\n    let largerCoefficients = other.coefficients;\n    if (smallerCoefficients.length > largerCoefficients.length) {\n      [smallerCoefficients, largerCoefficients] = [largerCoefficients, smallerCoefficients];\n    }\n    const sumDiff = new Uint8ClampedArray(largerCoefficients.length);\n    const lengthDiff = largerCoefficients.length - smallerCoefficients.length;\n    for (let i = 0; i < lengthDiff; i++) {\n      sumDiff[i] = largerCoefficients[i];\n    }\n\n    for (let i = lengthDiff; i < largerCoefficients.length; i++) {\n      sumDiff[i] = addOrSubtractGF(smallerCoefficients[i - lengthDiff], largerCoefficients[i]);\n    }\n\n    return new GenericGFPoly(this.field, sumDiff);\n  }\n\n  public multiply(scalar: number) {\n    if (scalar === 0) {\n      return this.field.zero;\n    }\n    if (scalar === 1) {\n      return this;\n    }\n    const size = this.coefficients.length;\n    const product = new Uint8ClampedArray(size);\n    for (let i = 0; i < size; i++) {\n      product[i] = this.field.multiply(this.coefficients[i], scalar);\n    }\n\n    return new GenericGFPoly(this.field, product);\n  }\n\n  public multiplyPoly(other: GenericGFPoly): GenericGFPoly {\n    if (this.isZero() || other.isZero()) {\n      return this.field.zero;\n    }\n    const aCoefficients = this.coefficients;\n    const aLength = aCoefficients.length;\n    const bCoefficients = other.coefficients;\n    const bLength = bCoefficients.length;\n    const product = new Uint8ClampedArray(aLength + bLength - 1);\n    for (let i = 0; i < aLength; i++) {\n      const aCoeff = aCoefficients[i];\n      for (let j = 0; j < bLength; j++) {\n        product[i + j] = addOrSubtractGF(product[i + j],\n          this.field.multiply(aCoeff, bCoefficients[j]));\n      }\n    }\n    return new GenericGFPoly(this.field, product);\n  }\n\n  public multiplyByMonomial(degree: number, coefficient: number) {\n    if (degree < 0) {\n      throw new Error(\"Invalid degree less than 0\");\n    }\n    if (coefficient === 0) {\n      return this.field.zero;\n    }\n    const size = this.coefficients.length;\n    const product = new Uint8ClampedArray(size + degree);\n    for (let i = 0; i < size; i++) {\n      product[i] = this.field.multiply(this.coefficients[i], coefficient);\n    }\n    return new GenericGFPoly(this.field, product);\n  }\n\n  public evaluateAt(a: number) {\n    let result = 0;\n    if (a === 0) {\n      // Just return the x^0 coefficient\n      return this.getCoefficient(0);\n    }\n    const size = this.coefficients.length;\n    if (a === 1) {\n      // Just the sum of the coefficients\n      this.coefficients.forEach((coefficient) => {\n        result = addOrSubtractGF(result, coefficient);\n      });\n      return result;\n    }\n    result = this.coefficients[0];\n    for (let i = 1; i < size; i++) {\n      result = addOrSubtractGF(this.field.multiply(a, result), this.coefficients[i]);\n    }\n    return result;\n  }\n}\n", "import GenericGFPoly from \"./GenericGFPoly\";\n\nexport function addOrSubtractGF(a: number, b: number) {\n  return a ^ b; // tslint:disable-line:no-bitwise\n}\n\nexport default class GenericGF {\n  public primitive: number;\n  public size: number;\n  public generatorBase: number;\n  public zero: GenericGFPoly;\n  public one: GenericGFPoly;\n\n  private expTable: number[];\n  private logTable: number[];\n\n  constructor(primitive: number, size: number, genBase: number) {\n    this.primitive = primitive;\n    this.size = size;\n    this.generatorBase = genBase;\n    this.expTable = new Array(this.size);\n    this.logTable = new Array(this.size);\n\n    let x = 1;\n    for (let i = 0; i < this.size; i++) {\n      this.expTable[i] = x;\n      x = x * 2;\n      if (x >= this.size) {\n        x = (x ^ this.primitive) & (this.size - 1); // tslint:disable-line:no-bitwise\n      }\n    }\n\n    for (let i = 0; i < this.size - 1; i++) {\n      this.logTable[this.expTable[i]] = i;\n    }\n    this.zero = new GenericGFPoly(this, Uint8ClampedArray.from([0]));\n    this.one = new GenericGFPoly(this, Uint8ClampedArray.from([1]));\n  }\n\n  public multiply(a: number, b: number) {\n    if (a === 0 || b === 0) {\n      return 0;\n    }\n    return this.expTable[(this.logTable[a] + this.logTable[b]) % (this.size - 1)];\n  }\n\n  public inverse(a: number) {\n    if (a === 0) {\n      throw new Error(\"Can't invert 0\");\n    }\n    return this.expTable[this.size - this.logTable[a] - 1];\n  }\n\n  public buildMonomial(degree: number, coefficient: number): GenericGFPoly {\n    if (degree < 0) {\n      throw new Error(\"Invalid monomial degree less than 0\");\n    }\n    if (coefficient === 0) {\n      return this.zero;\n    }\n    const coefficients = new Uint8ClampedArray(degree + 1);\n    coefficients[0] = coefficient;\n    return new GenericGFPoly(this, coefficients);\n  }\n\n  public log(a: number) {\n    if (a === 0) {\n      throw new Error(\"Can't take log(0)\");\n    }\n    return this.logTable[a];\n  }\n\n  public exp(a: number) {\n    return this.expTable[a];\n  }\n}\n", "import GenericGF, { addOrSubtractGF } from \"./GenericGF\";\nimport GenericGFPoly from \"./GenericGFPoly\";\n\nfunction runEuclideanAlgorithm(field: GenericGF, a: GenericGFPoly, b: GenericGFPoly, R: number): GenericGFPoly[] {\n  // Assume a's degree is >= b's\n  if (a.degree() < b.degree()) {\n    [a, b] = [b, a];\n  }\n\n  let rLast = a;\n  let r = b;\n  let tLast = field.zero;\n  let t = field.one;\n\n  // Run Euclidean algorithm until r's degree is less than R/2\n  while (r.degree() >= R / 2) {\n    const rLastLast = rLast;\n    const tLastLast = tLast;\n    rLast = r;\n    tLast = t;\n\n    // Divide rLastLast by rLast, with quotient in q and remainder in r\n    if (rLast.isZero()) {\n      // Euclidean algorithm already terminated?\n      return null;\n    }\n    r = rLastLast;\n    let q = field.zero;\n    const denominatorLeadingTerm = rLast.getCoefficient(rLast.degree());\n    const dltInverse = field.inverse(denominatorLeadingTerm);\n    while (r.degree() >= rLast.degree() && !r.isZero()) {\n      const degreeDiff = r.degree() - rLast.degree();\n      const scale = field.multiply(r.getCoefficient(r.degree()), dltInverse);\n      q = q.addOrSubtract(field.buildMonomial(degreeDiff, scale));\n      r = r.addOrSubtract(rLast.multiplyByMonomial(degreeDiff, scale));\n    }\n\n    t = q.multiplyPoly(tLast).addOrSubtract(tLastLast);\n\n    if (r.degree() >= rLast.degree()) {\n      return null;\n    }\n  }\n\n  const sigmaTildeAtZero = t.getCoefficient(0);\n  if (sigmaTildeAtZero === 0) {\n    return null;\n  }\n\n  const inverse = field.inverse(sigmaTildeAtZero);\n  return [t.multiply(inverse), r.multiply(inverse)];\n}\n\nfunction findErrorLocations(field: GenericGF, errorLocator: GenericGFPoly): number[] {\n  // This is a direct application of Chien's search\n  const numErrors = errorLocator.degree();\n  if (numErrors === 1) {\n    return [errorLocator.getCoefficient(1)];\n  }\n  const result: number[] = new Array(numErrors);\n  let errorCount = 0;\n  for (let i = 1; i < field.size && errorCount < numErrors; i++) {\n    if (errorLocator.evaluateAt(i) === 0) {\n      result[errorCount] = field.inverse(i);\n      errorCount++;\n    }\n  }\n  if (errorCount !== numErrors) {\n    return null;\n  }\n  return result;\n}\n\nfunction findErrorMagnitudes(field: GenericGF, errorEvaluator: GenericGFPoly, errorLocations: number[]): number[] {\n  // This is directly applying Forney's Formula\n  const s = errorLocations.length;\n  const result: number[] = new Array(s);\n  for (let i = 0; i < s; i++) {\n    const xiInverse = field.inverse(errorLocations[i]);\n    let denominator = 1;\n    for (let j = 0; j < s; j++) {\n      if (i !== j) {\n        denominator = field.multiply(denominator, addOrSubtractGF(1, field.multiply(errorLocations[j], xiInverse)));\n      }\n    }\n    result[i] = field.multiply(errorEvaluator.evaluateAt(xiInverse), field.inverse(denominator));\n    if (field.generatorBase !== 0) {\n      result[i] = field.multiply(result[i], xiInverse);\n    }\n  }\n  return result;\n}\n\nexport function decode(bytes: number[], twoS: number) {\n  const outputBytes = new Uint8ClampedArray(bytes.length);\n  outputBytes.set(bytes);\n\n  const field = new GenericGF(0x011D, 256, 0); // x^8 + x^4 + x^3 + x^2 + 1\n  const poly = new GenericGFPoly(field, outputBytes);\n\n  const syndromeCoefficients = new Uint8ClampedArray(twoS);\n  let error = false;\n  for (let s = 0; s < twoS; s++) {\n    const evaluation = poly.evaluateAt(field.exp(s + field.generatorBase));\n    syndromeCoefficients[syndromeCoefficients.length - 1 - s] = evaluation;\n    if (evaluation !== 0) {\n      error = true;\n    }\n  }\n  if (!error) {\n    return outputBytes;\n  }\n\n  const syndrome = new GenericGFPoly(field, syndromeCoefficients);\n\n  const sigmaOmega = runEuclideanAlgorithm(field, field.buildMonomial(twoS, 1), syndrome, twoS);\n  if (sigmaOmega === null) {\n    return null;\n  }\n\n  const errorLocations = findErrorLocations(field, sigmaOmega[0]);\n  if (errorLocations == null) {\n    return null;\n  }\n\n  const errorMagnitudes = findErrorMagnitudes(field, sigmaOmega[1], errorLocations);\n  for (let i = 0; i < errorLocations.length; i++) {\n    const position = outputBytes.length - 1 - field.log(errorLocations[i]);\n    if (position < 0) {\n      return null;\n    }\n    outputBytes[position] = addOrSubtractGF(outputBytes[position], errorMagnitudes[i]);\n  }\n\n  return outputBytes;\n}\n", "export interface Version {\n  infoBits: number;\n  versionNumber: number;\n  alignmentPatternCenters: number[];\n  errorCorrectionLevels: Array<{\n    ecCodewordsPerBlock: number;\n    ecBlocks: Array<{\n      numBlocks: number;\n      dataCodewordsPerBlock: number;\n    }>\n  }>;\n}\n\nexport const VERSIONS: Version[] = [\n  {\n    infoBits: null,\n    versionNumber: 1,\n    alignmentPatternCenters: [],\n    errorCorrectionLevels: [\n      {\n        ecCodewordsPerBlock: 7,\n        ecBlocks: [{ numBlocks: 1, dataCodewordsPerBlock: 19 }],\n      },\n      {\n        ecCodewordsPerBlock: 10,\n        ecBlocks: [{ numBlocks: 1, dataCodewordsPerBlock: 16 }],\n      },\n      {\n        ecCodewordsPerBlock: 13,\n        ecBlocks: [{ numBlocks: 1, dataCodewordsPerBlock: 13 }],\n      },\n      {\n        ecCodewordsPerBlock: 17,\n        ecBlocks: [{ numBlocks: 1, dataCodewordsPerBlock: 9 }],\n      },\n    ],\n  },\n  {\n    infoBits: null,\n    versionNumber: 2,\n    alignmentPatternCenters: [6, 18],\n    errorCorrectionLevels: [\n      {\n        ecCodewordsPerBlock: 10,\n        ecBlocks: [{ numBlocks: 1, dataCodewordsPerBlock: 34 }],\n      },\n      {\n        ecCodewordsPerBlock: 16,\n        ecBlocks: [{ numBlocks: 1, dataCodewordsPerBlock: 28 }],\n      },\n      {\n        ecCodewordsPerBlock: 22,\n        ecBlocks: [{ numBlocks: 1, dataCodewordsPerBlock: 22 }],\n      },\n      {\n        ecCodewordsPerBlock: 28,\n        ecBlocks: [{ numBlocks: 1, dataCodewordsPerBlock: 16 }],\n      },\n    ],\n  },\n  {\n    infoBits: null,\n    versionNumber: 3,\n    alignmentPatternCenters: [6, 22],\n    errorCorrectionLevels: [\n      {\n        ecCodewordsPerBlock: 15,\n        ecBlocks: [{ numBlocks: 1, dataCodewordsPerBlock: 55 }],\n      },\n      {\n        ecCodewordsPerBlock: 26,\n        ecBlocks: [{ numBlocks: 1, dataCodewordsPerBlock: 44 }],\n      },\n      {\n        ecCodewordsPerBlock: 18,\n        ecBlocks: [{ numBlocks: 2, dataCodewordsPerBlock: 17 }],\n      },\n      {\n        ecCodewordsPerBlock: 22,\n        ecBlocks: [{ numBlocks: 2, dataCodewordsPerBlock: 13 }],\n      },\n    ],\n  },\n  {\n    infoBits: null,\n    versionNumber: 4,\n    alignmentPatternCenters: [6, 26],\n    errorCorrectionLevels: [\n      {\n        ecCodewordsPerBlock: 20,\n        ecBlocks: [{ numBlocks: 1, dataCodewordsPerBlock: 80 }],\n      },\n      {\n        ecCodewordsPerBlock: 18,\n        ecBlocks: [{ numBlocks: 2, dataCodewordsPerBlock: 32 }],\n      },\n      {\n        ecCodewordsPerBlock: 26,\n        ecBlocks: [{ numBlocks: 2, dataCodewordsPerBlock: 24 }],\n      },\n      {\n        ecCodewordsPerBlock: 16,\n        ecBlocks: [{ numBlocks: 4, dataCodewordsPerBlock: 9 }],\n      },\n    ],\n  },\n  {\n    infoBits: null,\n    versionNumber: 5,\n    alignmentPatternCenters: [6, 30],\n    errorCorrectionLevels: [\n      {\n        ecCodewordsPerBlock: 26,\n        ecBlocks: [{ numBlocks: 1, dataCodewordsPerBlock: 108 }],\n      },\n      {\n        ecCodewordsPerBlock: 24,\n        ecBlocks: [{ numBlocks: 2, dataCodewordsPerBlock: 43 }],\n      },\n      {\n        ecCodewordsPerBlock: 18,\n        ecBlocks: [\n          { numBlocks: 2, dataCodewordsPerBlock: 15 },\n          { numBlocks: 2, dataCodewordsPerBlock: 16 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 22,\n        ecBlocks: [\n          { numBlocks: 2, dataCodewordsPerBlock: 11 },\n          { numBlocks: 2, dataCodewordsPerBlock: 12 },\n        ],\n      },\n    ],\n  },\n  {\n    infoBits: null,\n    versionNumber: 6,\n    alignmentPatternCenters: [6, 34],\n    errorCorrectionLevels: [\n      {\n        ecCodewordsPerBlock: 18,\n        ecBlocks: [{ numBlocks: 2, dataCodewordsPerBlock: 68 }],\n      },\n      {\n        ecCodewordsPerBlock: 16,\n        ecBlocks: [{ numBlocks: 4, dataCodewordsPerBlock: 27 }],\n      },\n      {\n        ecCodewordsPerBlock: 24,\n        ecBlocks: [{ numBlocks: 4, dataCodewordsPerBlock: 19 }],\n      },\n      {\n        ecCodewordsPerBlock: 28,\n        ecBlocks: [{ numBlocks: 4, dataCodewordsPerBlock: 15 }],\n      },\n    ],\n  },\n  {\n    infoBits: 0x07C94,\n    versionNumber: 7,\n    alignmentPatternCenters: [6, 22, 38],\n    errorCorrectionLevels: [\n      {\n        ecCodewordsPerBlock: 20,\n        ecBlocks: [{ numBlocks: 2, dataCodewordsPerBlock: 78 }],\n      },\n      {\n        ecCodewordsPerBlock: 18,\n        ecBlocks: [{ numBlocks: 4, dataCodewordsPerBlock: 31 }],\n      },\n      {\n        ecCodewordsPerBlock: 18,\n        ecBlocks: [\n          { numBlocks: 2, dataCodewordsPerBlock: 14 },\n          { numBlocks: 4, dataCodewordsPerBlock: 15 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 26,\n        ecBlocks: [\n          { numBlocks: 4, dataCodewordsPerBlock: 13 },\n          { numBlocks: 1, dataCodewordsPerBlock: 14 },\n        ],\n      },\n    ],\n  },\n  {\n    infoBits: 0x085BC,\n    versionNumber: 8,\n    alignmentPatternCenters: [6, 24, 42],\n    errorCorrectionLevels: [\n      {\n        ecCodewordsPerBlock: 24,\n        ecBlocks: [{ numBlocks: 2, dataCodewordsPerBlock: 97 }],\n      },\n      {\n        ecCodewordsPerBlock: 22,\n        ecBlocks: [\n          { numBlocks: 2, dataCodewordsPerBlock: 38 },\n          { numBlocks: 2, dataCodewordsPerBlock: 39 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 22,\n        ecBlocks: [\n          { numBlocks: 4, dataCodewordsPerBlock: 18 },\n          { numBlocks: 2, dataCodewordsPerBlock: 19 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 26,\n        ecBlocks: [\n          { numBlocks: 4, dataCodewordsPerBlock: 14 },\n          { numBlocks: 2, dataCodewordsPerBlock: 15 },\n        ],\n      },\n    ],\n  },\n  {\n    infoBits: 0x09A99,\n    versionNumber: 9,\n    alignmentPatternCenters: [6, 26, 46],\n    errorCorrectionLevels: [\n      {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [{ numBlocks: 2, dataCodewordsPerBlock: 116 }],\n      },\n      {\n        ecCodewordsPerBlock: 22,\n        ecBlocks: [\n          { numBlocks: 3, dataCodewordsPerBlock: 36 },\n          { numBlocks: 2, dataCodewordsPerBlock: 37 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 20,\n        ecBlocks: [\n          { numBlocks: 4, dataCodewordsPerBlock: 16 },\n          { numBlocks: 4, dataCodewordsPerBlock: 17 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 24,\n        ecBlocks: [\n          { numBlocks: 4, dataCodewordsPerBlock: 12 },\n          { numBlocks: 4, dataCodewordsPerBlock: 13 },\n        ],\n      },\n    ],\n  },\n  {\n    infoBits: 0x0A4D3,\n    versionNumber: 10,\n    alignmentPatternCenters: [6, 28, 50],\n    errorCorrectionLevels: [\n      {\n        ecCodewordsPerBlock: 18,\n        ecBlocks: [\n          { numBlocks: 2, dataCodewordsPerBlock: 68 },\n          { numBlocks: 2, dataCodewordsPerBlock: 69 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 26,\n        ecBlocks: [\n          { numBlocks: 4, dataCodewordsPerBlock: 43 },\n          { numBlocks: 1, dataCodewordsPerBlock: 44 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 24,\n        ecBlocks: [\n          { numBlocks: 6, dataCodewordsPerBlock: 19 },\n          { numBlocks: 2, dataCodewordsPerBlock: 20 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 28,\n        ecBlocks: [\n          { numBlocks: 6, dataCodewordsPerBlock: 15 },\n          { numBlocks: 2, dataCodewordsPerBlock: 16 },\n        ],\n      },\n    ],\n  },\n  {\n    infoBits: 0x0BBF6,\n    versionNumber: 11,\n    alignmentPatternCenters: [6, 30, 54],\n    errorCorrectionLevels: [\n      {\n        ecCodewordsPerBlock: 20,\n        ecBlocks: [{ numBlocks: 4, dataCodewordsPerBlock: 81 }],\n      },\n      {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [\n          { numBlocks: 1, dataCodewordsPerBlock: 50 },\n          { numBlocks: 4, dataCodewordsPerBlock: 51 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 28,\n        ecBlocks: [\n          { numBlocks: 4, dataCodewordsPerBlock: 22 },\n          { numBlocks: 4, dataCodewordsPerBlock: 23 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 24,\n        ecBlocks: [\n          { numBlocks: 3, dataCodewordsPerBlock: 12 },\n          { numBlocks: 8, dataCodewordsPerBlock: 13 },\n        ],\n      },\n    ],\n  },\n  {\n    infoBits: 0x0C762,\n    versionNumber: 12,\n    alignmentPatternCenters: [6, 32, 58],\n    errorCorrectionLevels: [\n      {\n        ecCodewordsPerBlock: 24,\n        ecBlocks: [\n          { numBlocks: 2, dataCodewordsPerBlock: 92 },\n          { numBlocks: 2, dataCodewordsPerBlock: 93 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 22,\n        ecBlocks: [\n          { numBlocks: 6, dataCodewordsPerBlock: 36 },\n          { numBlocks: 2, dataCodewordsPerBlock: 37 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 26,\n        ecBlocks: [\n          { numBlocks: 4, dataCodewordsPerBlock: 20 },\n          { numBlocks: 6, dataCodewordsPerBlock: 21 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 28,\n        ecBlocks: [\n          { numBlocks: 7, dataCodewordsPerBlock: 14 },\n          { numBlocks: 4, dataCodewordsPerBlock: 15 },\n        ],\n      },\n    ],\n  },\n  {\n    infoBits: 0x0D847,\n    versionNumber: 13,\n    alignmentPatternCenters: [6, 34, 62],\n    errorCorrectionLevels: [\n      {\n        ecCodewordsPerBlock: 26,\n        ecBlocks: [{ numBlocks: 4, dataCodewordsPerBlock: 107 }],\n      },\n      {\n        ecCodewordsPerBlock: 22,\n        ecBlocks: [\n          { numBlocks: 8, dataCodewordsPerBlock: 37 },\n          { numBlocks: 1, dataCodewordsPerBlock: 38 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 24,\n        ecBlocks: [\n          { numBlocks: 8, dataCodewordsPerBlock: 20 },\n          { numBlocks: 4, dataCodewordsPerBlock: 21 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 22,\n        ecBlocks: [\n          { numBlocks: 12, dataCodewordsPerBlock: 11 },\n          { numBlocks: 4, dataCodewordsPerBlock: 12 },\n        ],\n      },\n    ],\n  },\n  {\n    infoBits: 0x0E60D,\n    versionNumber: 14,\n    alignmentPatternCenters: [6, 26, 46, 66],\n    errorCorrectionLevels: [\n      {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [\n          { numBlocks: 3, dataCodewordsPerBlock: 115 },\n          { numBlocks: 1, dataCodewordsPerBlock: 116 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 24,\n        ecBlocks: [\n          { numBlocks: 4, dataCodewordsPerBlock: 40 },\n          { numBlocks: 5, dataCodewordsPerBlock: 41 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 20,\n        ecBlocks: [\n          { numBlocks: 11, dataCodewordsPerBlock: 16 },\n          { numBlocks: 5, dataCodewordsPerBlock: 17 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 24,\n        ecBlocks: [\n          { numBlocks: 11, dataCodewordsPerBlock: 12 },\n          { numBlocks: 5, dataCodewordsPerBlock: 13 },\n        ],\n      },\n    ],\n  },\n  {\n    infoBits: 0x0F928,\n    versionNumber: 15,\n    alignmentPatternCenters: [6, 26, 48, 70],\n    errorCorrectionLevels: [\n      {\n        ecCodewordsPerBlock: 22,\n        ecBlocks: [\n          { numBlocks: 5, dataCodewordsPerBlock: 87 },\n          { numBlocks: 1, dataCodewordsPerBlock: 88 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 24,\n        ecBlocks: [\n          { numBlocks: 5, dataCodewordsPerBlock: 41 },\n          { numBlocks: 5, dataCodewordsPerBlock: 42 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [\n          { numBlocks: 5, dataCodewordsPerBlock: 24 },\n          { numBlocks: 7, dataCodewordsPerBlock: 25 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 24,\n        ecBlocks: [\n          { numBlocks: 11, dataCodewordsPerBlock: 12 },\n          { numBlocks: 7, dataCodewordsPerBlock: 13 },\n        ],\n      },\n    ],\n  },\n  {\n    infoBits: 0x10B78,\n    versionNumber: 16,\n    alignmentPatternCenters: [6, 26, 50, 74],\n    errorCorrectionLevels: [\n      {\n        ecCodewordsPerBlock: 24,\n        ecBlocks: [\n          { numBlocks: 5, dataCodewordsPerBlock: 98 },\n          { numBlocks: 1, dataCodewordsPerBlock: 99 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 28,\n        ecBlocks: [\n          { numBlocks: 7, dataCodewordsPerBlock: 45 },\n          { numBlocks: 3, dataCodewordsPerBlock: 46 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 24,\n        ecBlocks: [\n          { numBlocks: 15, dataCodewordsPerBlock: 19 },\n          { numBlocks: 2, dataCodewordsPerBlock: 20 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [\n          { numBlocks: 3, dataCodewordsPerBlock: 15 },\n          { numBlocks: 13, dataCodewordsPerBlock: 16 },\n        ],\n      },\n    ],\n  },\n  {\n    infoBits: 0x1145D,\n    versionNumber: 17,\n    alignmentPatternCenters: [6, 30, 54, 78],\n    errorCorrectionLevels: [\n      {\n        ecCodewordsPerBlock: 28,\n        ecBlocks: [\n          { numBlocks: 1, dataCodewordsPerBlock: 107 },\n          { numBlocks: 5, dataCodewordsPerBlock: 108 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 28,\n        ecBlocks: [\n          { numBlocks: 10, dataCodewordsPerBlock: 46 },\n          { numBlocks: 1, dataCodewordsPerBlock: 47 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 28,\n        ecBlocks: [\n          { numBlocks: 1, dataCodewordsPerBlock: 22 },\n          { numBlocks: 15, dataCodewordsPerBlock: 23 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 28,\n        ecBlocks: [\n          { numBlocks: 2, dataCodewordsPerBlock: 14 },\n          { numBlocks: 17, dataCodewordsPerBlock: 15 },\n        ],\n      },\n    ],\n  },\n  {\n    infoBits: 0x12A17,\n    versionNumber: 18,\n    alignmentPatternCenters: [6, 30, 56, 82],\n    errorCorrectionLevels: [\n      {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [\n          { numBlocks: 5, dataCodewordsPerBlock: 120 },\n          { numBlocks: 1, dataCodewordsPerBlock: 121 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 26,\n        ecBlocks: [\n          { numBlocks: 9, dataCodewordsPerBlock: 43 },\n          { numBlocks: 4, dataCodewordsPerBlock: 44 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 28,\n        ecBlocks: [\n          { numBlocks: 17, dataCodewordsPerBlock: 22 },\n          { numBlocks: 1, dataCodewordsPerBlock: 23 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 28,\n        ecBlocks: [\n          { numBlocks: 2, dataCodewordsPerBlock: 14 },\n          { numBlocks: 19, dataCodewordsPerBlock: 15 },\n        ],\n      },\n    ],\n  },\n  {\n    infoBits: 0x13532,\n    versionNumber: 19,\n    alignmentPatternCenters: [6, 30, 58, 86],\n    errorCorrectionLevels: [\n      {\n        ecCodewordsPerBlock: 28,\n        ecBlocks: [\n          { numBlocks: 3, dataCodewordsPerBlock: 113 },\n          { numBlocks: 4, dataCodewordsPerBlock: 114 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 26,\n        ecBlocks: [\n          { numBlocks: 3, dataCodewordsPerBlock: 44 },\n          { numBlocks: 11, dataCodewordsPerBlock: 45 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 26,\n        ecBlocks: [\n          { numBlocks: 17, dataCodewordsPerBlock: 21 },\n          { numBlocks: 4, dataCodewordsPerBlock: 22 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 26,\n        ecBlocks: [\n          { numBlocks: 9, dataCodewordsPerBlock: 13 },\n          { numBlocks: 16, dataCodewordsPerBlock: 14 },\n        ],\n      },\n    ],\n  },\n  {\n    infoBits: 0x149A6,\n    versionNumber: 20,\n    alignmentPatternCenters: [6, 34, 62, 90],\n    errorCorrectionLevels: [\n      {\n        ecCodewordsPerBlock: 28,\n        ecBlocks: [\n          { numBlocks: 3, dataCodewordsPerBlock: 107 },\n          { numBlocks: 5, dataCodewordsPerBlock: 108 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 26,\n        ecBlocks: [\n          { numBlocks: 3, dataCodewordsPerBlock: 41 },\n          { numBlocks: 13, dataCodewordsPerBlock: 42 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [\n          { numBlocks: 15, dataCodewordsPerBlock: 24 },\n          { numBlocks: 5, dataCodewordsPerBlock: 25 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 28,\n        ecBlocks: [\n          { numBlocks: 15, dataCodewordsPerBlock: 15 },\n          { numBlocks: 10, dataCodewordsPerBlock: 16 },\n        ],\n      },\n    ],\n  },\n  {\n    infoBits: 0x15683,\n    versionNumber: 21,\n    alignmentPatternCenters: [6, 28, 50, 72, 94],\n    errorCorrectionLevels: [\n      {\n        ecCodewordsPerBlock: 28,\n        ecBlocks: [\n          { numBlocks: 4, dataCodewordsPerBlock: 116 },\n          { numBlocks: 4, dataCodewordsPerBlock: 117 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 26,\n        ecBlocks: [{ numBlocks: 17, dataCodewordsPerBlock: 42 }],\n      },\n      {\n        ecCodewordsPerBlock: 28,\n        ecBlocks: [\n          { numBlocks: 17, dataCodewordsPerBlock: 22 },\n          { numBlocks: 6, dataCodewordsPerBlock: 23 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [\n          { numBlocks: 19, dataCodewordsPerBlock: 16 },\n          { numBlocks: 6, dataCodewordsPerBlock: 17 },\n        ],\n      },\n    ],\n  },\n  {\n    infoBits: 0x168C9,\n    versionNumber: 22,\n    alignmentPatternCenters: [6, 26, 50, 74, 98],\n    errorCorrectionLevels: [\n      {\n        ecCodewordsPerBlock: 28,\n        ecBlocks: [\n          { numBlocks: 2, dataCodewordsPerBlock: 111 },\n          { numBlocks: 7, dataCodewordsPerBlock: 112 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 28,\n        ecBlocks: [{ numBlocks: 17, dataCodewordsPerBlock: 46 }],\n      },\n      {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [\n          { numBlocks: 7, dataCodewordsPerBlock: 24 },\n          { numBlocks: 16, dataCodewordsPerBlock: 25 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 24,\n        ecBlocks: [{ numBlocks: 34, dataCodewordsPerBlock: 13 }],\n      },\n    ],\n  },\n  {\n    infoBits: 0x177EC,\n    versionNumber: 23,\n    alignmentPatternCenters: [6, 30, 54, 74, 102],\n    errorCorrectionLevels: [\n      {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [\n          { numBlocks: 4, dataCodewordsPerBlock: 121 },\n          { numBlocks: 5, dataCodewordsPerBlock: 122 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 28,\n        ecBlocks: [\n          { numBlocks: 4, dataCodewordsPerBlock: 47 },\n          { numBlocks: 14, dataCodewordsPerBlock: 48 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [\n          { numBlocks: 11, dataCodewordsPerBlock: 24 },\n          { numBlocks: 14, dataCodewordsPerBlock: 25 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [\n          { numBlocks: 16, dataCodewordsPerBlock: 15 },\n          { numBlocks: 14, dataCodewordsPerBlock: 16 },\n        ],\n      },\n    ],\n  },\n  {\n    infoBits: 0x18EC4,\n    versionNumber: 24,\n    alignmentPatternCenters: [6, 28, 54, 80, 106],\n    errorCorrectionLevels: [\n      {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [\n          { numBlocks: 6, dataCodewordsPerBlock: 117 },\n          { numBlocks: 4, dataCodewordsPerBlock: 118 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 28,\n        ecBlocks: [\n          { numBlocks: 6, dataCodewordsPerBlock: 45 },\n          { numBlocks: 14, dataCodewordsPerBlock: 46 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [\n          { numBlocks: 11, dataCodewordsPerBlock: 24 },\n          { numBlocks: 16, dataCodewordsPerBlock: 25 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [\n          { numBlocks: 30, dataCodewordsPerBlock: 16 },\n          { numBlocks: 2, dataCodewordsPerBlock: 17 },\n        ],\n      },\n    ],\n  },\n  {\n    infoBits: 0x191E1,\n    versionNumber: 25,\n    alignmentPatternCenters: [6, 32, 58, 84, 110],\n    errorCorrectionLevels: [\n      {\n        ecCodewordsPerBlock: 26,\n        ecBlocks: [\n          { numBlocks: 8, dataCodewordsPerBlock: 106 },\n          { numBlocks: 4, dataCodewordsPerBlock: 107 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 28,\n        ecBlocks: [\n          { numBlocks: 8, dataCodewordsPerBlock: 47 },\n          { numBlocks: 13, dataCodewordsPerBlock: 48 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [\n          { numBlocks: 7, dataCodewordsPerBlock: 24 },\n          { numBlocks: 22, dataCodewordsPerBlock: 25 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [\n          { numBlocks: 22, dataCodewordsPerBlock: 15 },\n          { numBlocks: 13, dataCodewordsPerBlock: 16 },\n        ],\n      },\n    ],\n  },\n  {\n    infoBits: 0x1AFAB,\n    versionNumber: 26,\n    alignmentPatternCenters: [6, 30, 58, 86, 114],\n    errorCorrectionLevels: [\n      {\n        ecCodewordsPerBlock: 28,\n        ecBlocks: [\n          { numBlocks: 10, dataCodewordsPerBlock: 114 },\n          { numBlocks: 2, dataCodewordsPerBlock: 115 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 28,\n        ecBlocks: [\n          { numBlocks: 19, dataCodewordsPerBlock: 46 },\n          { numBlocks: 4, dataCodewordsPerBlock: 47 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 28,\n        ecBlocks: [\n          { numBlocks: 28, dataCodewordsPerBlock: 22 },\n          { numBlocks: 6, dataCodewordsPerBlock: 23 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [\n          { numBlocks: 33, dataCodewordsPerBlock: 16 },\n          { numBlocks: 4, dataCodewordsPerBlock: 17 },\n        ],\n      },\n    ],\n  },\n  {\n    infoBits: 0x1B08E,\n    versionNumber: 27,\n    alignmentPatternCenters: [6, 34, 62, 90, 118],\n    errorCorrectionLevels: [\n      {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [\n          { numBlocks: 8, dataCodewordsPerBlock: 122 },\n          { numBlocks: 4, dataCodewordsPerBlock: 123 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 28,\n        ecBlocks: [\n          { numBlocks: 22, dataCodewordsPerBlock: 45 },\n          { numBlocks: 3, dataCodewordsPerBlock: 46 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [\n          { numBlocks: 8, dataCodewordsPerBlock: 23 },\n          { numBlocks: 26, dataCodewordsPerBlock: 24 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [\n          { numBlocks: 12, dataCodewordsPerBlock: 15 },\n          { numBlocks: 28, dataCodewordsPerBlock: 16 },\n        ],\n      },\n    ],\n  },\n  {\n    infoBits: 0x1CC1A,\n    versionNumber: 28,\n    alignmentPatternCenters: [6, 26, 50, 74, 98, 122],\n    errorCorrectionLevels: [\n      {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [\n          { numBlocks: 3, dataCodewordsPerBlock: 117 },\n          { numBlocks: 10, dataCodewordsPerBlock: 118 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 28,\n        ecBlocks: [\n          { numBlocks: 3, dataCodewordsPerBlock: 45 },\n          { numBlocks: 23, dataCodewordsPerBlock: 46 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [\n          { numBlocks: 4, dataCodewordsPerBlock: 24 },\n          { numBlocks: 31, dataCodewordsPerBlock: 25 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [\n          { numBlocks: 11, dataCodewordsPerBlock: 15 },\n          { numBlocks: 31, dataCodewordsPerBlock: 16 },\n        ],\n      },\n    ],\n  },\n  {\n    infoBits: 0x1D33F,\n    versionNumber: 29,\n    alignmentPatternCenters: [6, 30, 54, 78, 102, 126],\n    errorCorrectionLevels: [\n      {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [\n          { numBlocks: 7, dataCodewordsPerBlock: 116 },\n          { numBlocks: 7, dataCodewordsPerBlock: 117 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 28,\n        ecBlocks: [\n          { numBlocks: 21, dataCodewordsPerBlock: 45 },\n          { numBlocks: 7, dataCodewordsPerBlock: 46 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [\n          { numBlocks: 1, dataCodewordsPerBlock: 23 },\n          { numBlocks: 37, dataCodewordsPerBlock: 24 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [\n          { numBlocks: 19, dataCodewordsPerBlock: 15 },\n          { numBlocks: 26, dataCodewordsPerBlock: 16 },\n        ],\n      },\n    ],\n  },\n  {\n    infoBits: 0x1ED75,\n    versionNumber: 30,\n    alignmentPatternCenters: [6, 26, 52, 78, 104, 130],\n    errorCorrectionLevels: [\n      {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [\n          { numBlocks: 5, dataCodewordsPerBlock: 115 },\n          { numBlocks: 10, dataCodewordsPerBlock: 116 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 28,\n        ecBlocks: [\n          { numBlocks: 19, dataCodewordsPerBlock: 47 },\n          { numBlocks: 10, dataCodewordsPerBlock: 48 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [\n          { numBlocks: 15, dataCodewordsPerBlock: 24 },\n          { numBlocks: 25, dataCodewordsPerBlock: 25 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [\n          { numBlocks: 23, dataCodewordsPerBlock: 15 },\n          { numBlocks: 25, dataCodewordsPerBlock: 16 },\n        ],\n      },\n    ],\n  },\n  {\n    infoBits: 0x1F250,\n    versionNumber: 31,\n    alignmentPatternCenters: [6, 30, 56, 82, 108, 134],\n    errorCorrectionLevels: [\n      {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [\n          { numBlocks: 13, dataCodewordsPerBlock: 115 },\n          { numBlocks: 3, dataCodewordsPerBlock: 116 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 28,\n        ecBlocks: [\n          { numBlocks: 2, dataCodewordsPerBlock: 46 },\n          { numBlocks: 29, dataCodewordsPerBlock: 47 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [\n          { numBlocks: 42, dataCodewordsPerBlock: 24 },\n          { numBlocks: 1, dataCodewordsPerBlock: 25 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [\n          { numBlocks: 23, dataCodewordsPerBlock: 15 },\n          { numBlocks: 28, dataCodewordsPerBlock: 16 },\n        ],\n      },\n    ],\n  },\n  {\n    infoBits: 0x209D5,\n    versionNumber: 32,\n    alignmentPatternCenters: [6, 34, 60, 86, 112, 138],\n    errorCorrectionLevels: [\n      {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [{ numBlocks: 17, dataCodewordsPerBlock: 115 }],\n      },\n      {\n        ecCodewordsPerBlock: 28,\n        ecBlocks: [\n          { numBlocks: 10, dataCodewordsPerBlock: 46 },\n          { numBlocks: 23, dataCodewordsPerBlock: 47 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [\n          { numBlocks: 10, dataCodewordsPerBlock: 24 },\n          { numBlocks: 35, dataCodewordsPerBlock: 25 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [\n          { numBlocks: 19, dataCodewordsPerBlock: 15 },\n          { numBlocks: 35, dataCodewordsPerBlock: 16 },\n        ],\n      },\n    ],\n  },\n  {\n    infoBits: 0x216F0,\n    versionNumber: 33,\n    alignmentPatternCenters: [6, 30, 58, 86, 114, 142],\n    errorCorrectionLevels: [\n      {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [\n          { numBlocks: 17, dataCodewordsPerBlock: 115 },\n          { numBlocks: 1, dataCodewordsPerBlock: 116 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 28,\n        ecBlocks: [\n          { numBlocks: 14, dataCodewordsPerBlock: 46 },\n          { numBlocks: 21, dataCodewordsPerBlock: 47 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [\n          { numBlocks: 29, dataCodewordsPerBlock: 24 },\n          { numBlocks: 19, dataCodewordsPerBlock: 25 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [\n          { numBlocks: 11, dataCodewordsPerBlock: 15 },\n          { numBlocks: 46, dataCodewordsPerBlock: 16 },\n        ],\n      },\n    ],\n  },\n  {\n    infoBits: 0x228BA,\n    versionNumber: 34,\n    alignmentPatternCenters: [6, 34, 62, 90, 118, 146],\n    errorCorrectionLevels: [\n      {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [\n          { numBlocks: 13, dataCodewordsPerBlock: 115 },\n          { numBlocks: 6, dataCodewordsPerBlock: 116 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 28,\n        ecBlocks: [\n          { numBlocks: 14, dataCodewordsPerBlock: 46 },\n          { numBlocks: 23, dataCodewordsPerBlock: 47 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [\n          { numBlocks: 44, dataCodewordsPerBlock: 24 },\n          { numBlocks: 7, dataCodewordsPerBlock: 25 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [\n          { numBlocks: 59, dataCodewordsPerBlock: 16 },\n          { numBlocks: 1, dataCodewordsPerBlock: 17 },\n        ],\n      },\n    ],\n  },\n  {\n    infoBits: 0x2379F,\n    versionNumber: 35,\n    alignmentPatternCenters: [6, 30, 54, 78, 102, 126, 150],\n    errorCorrectionLevels: [\n      {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [\n          { numBlocks: 12, dataCodewordsPerBlock: 121 },\n          { numBlocks: 7, dataCodewordsPerBlock: 122 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 28,\n        ecBlocks: [\n          { numBlocks: 12, dataCodewordsPerBlock: 47 },\n          { numBlocks: 26, dataCodewordsPerBlock: 48 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [\n          { numBlocks: 39, dataCodewordsPerBlock: 24 },\n          { numBlocks: 14, dataCodewordsPerBlock: 25 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [\n          { numBlocks: 22, dataCodewordsPerBlock: 15 },\n          { numBlocks: 41, dataCodewordsPerBlock: 16 },\n        ],\n      },\n    ],\n  },\n  {\n    infoBits: 0x24B0B,\n    versionNumber: 36,\n    alignmentPatternCenters: [ 6, 24, 50, 76, 102, 128, 154 ],\n    errorCorrectionLevels: [\n      {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [\n          { numBlocks: 6, dataCodewordsPerBlock: 121 },\n          { numBlocks: 14, dataCodewordsPerBlock: 122 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 28,\n        ecBlocks: [\n          { numBlocks: 6, dataCodewordsPerBlock: 47 },\n          { numBlocks: 34, dataCodewordsPerBlock: 48 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [\n          { numBlocks: 46, dataCodewordsPerBlock: 24 },\n          { numBlocks: 10, dataCodewordsPerBlock: 25 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [\n          { numBlocks: 2, dataCodewordsPerBlock: 15 },\n          { numBlocks: 64, dataCodewordsPerBlock: 16 },\n        ],\n      },\n    ],\n  },\n  {\n    infoBits: 0x2542E,\n    versionNumber: 37,\n    alignmentPatternCenters: [ 6, 28, 54, 80, 106, 132, 158 ],\n    errorCorrectionLevels: [\n      {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [\n          { numBlocks: 17, dataCodewordsPerBlock: 122 },\n          { numBlocks: 4, dataCodewordsPerBlock: 123 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 28,\n        ecBlocks: [\n          { numBlocks: 29, dataCodewordsPerBlock: 46 },\n          { numBlocks: 14, dataCodewordsPerBlock: 47 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [\n          { numBlocks: 49, dataCodewordsPerBlock: 24 },\n          { numBlocks: 10, dataCodewordsPerBlock: 25 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [\n          { numBlocks: 24, dataCodewordsPerBlock: 15 },\n          { numBlocks: 46, dataCodewordsPerBlock: 16 },\n        ],\n      },\n    ],\n  },\n  {\n    infoBits: 0x26A64,\n    versionNumber: 38,\n    alignmentPatternCenters: [ 6, 32, 58, 84, 110, 136, 162 ],\n    errorCorrectionLevels: [\n      {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [\n          { numBlocks: 4, dataCodewordsPerBlock: 122 },\n          { numBlocks: 18, dataCodewordsPerBlock: 123 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 28,\n        ecBlocks: [\n          { numBlocks: 13, dataCodewordsPerBlock: 46 },\n          { numBlocks: 32, dataCodewordsPerBlock: 47 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [\n          { numBlocks: 48, dataCodewordsPerBlock: 24 },\n          { numBlocks: 14, dataCodewordsPerBlock: 25 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [\n          { numBlocks: 42, dataCodewordsPerBlock: 15 },\n          { numBlocks: 32, dataCodewordsPerBlock: 16 },\n        ],\n      },\n    ],\n  },\n  {\n    infoBits: 0x27541,\n    versionNumber: 39,\n    alignmentPatternCenters: [ 6, 26, 54, 82, 110, 138, 166 ],\n    errorCorrectionLevels: [\n      {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [\n          { numBlocks: 20, dataCodewordsPerBlock: 117 },\n          { numBlocks: 4, dataCodewordsPerBlock: 118 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 28,\n        ecBlocks: [\n          { numBlocks: 40, dataCodewordsPerBlock: 47 },\n          { numBlocks: 7, dataCodewordsPerBlock: 48 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [\n          { numBlocks: 43, dataCodewordsPerBlock: 24 },\n          { numBlocks: 22, dataCodewordsPerBlock: 25 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [\n          { numBlocks: 10, dataCodewordsPerBlock: 15 },\n          { numBlocks: 67, dataCodewordsPerBlock: 16 },\n        ],\n      },\n    ],\n  },\n  {\n    infoBits: 0x28C69,\n    versionNumber: 40,\n    alignmentPatternCenters: [ 6, 30, 58, 86, 114, 142, 170 ],\n    errorCorrectionLevels: [\n      {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [\n          { numBlocks: 19, dataCodewordsPerBlock: 118 },\n          { numBlocks: 6, dataCodewordsPerBlock: 119 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 28,\n        ecBlocks: [\n          { numBlocks: 18, dataCodewordsPerBlock: 47 },\n          { numBlocks: 31, dataCodewordsPerBlock: 48 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [\n          { numBlocks: 34, dataCodewordsPerBlock: 24 },\n          { numBlocks: 34, dataCodewordsPerBlock: 25 },\n        ],\n      },\n      {\n        ecCodewordsPerBlock: 30,\n        ecBlocks: [\n          { numBlocks: 20, dataCodewordsPerBlock: 15 },\n          { numBlocks: 61, dataCodewordsPerBlock: 16 },\n        ],\n      },\n    ],\n  },\n];\n", "import { BitMatrix } from \"../BitMatrix\";\nimport { Point } from \"../Point\";\nimport { decode as decodeData, DecodedQR } from \"./decodeData\";\nimport { decode as rsDecode } from \"./reedsolomon\";\nimport { Version, VERSIONS } from \"./version\";\n\n// tslint:disable:no-bitwise\nfunction numBitsDiffering(x: number, y: number) {\n  let z = x ^ y;\n  let bitCount = 0;\n  while (z) {\n    bitCount++;\n    z &= z - 1;\n  }\n  return bitCount;\n}\n\nfunction pushBit(bit: any, byte: number) {\n  return (byte << 1) | bit;\n}\n// tslint:enable:no-bitwise\n\nconst FORMAT_INFO_TABLE = [\n  { bits: 0x5412, formatInfo: { errorCorrectionLevel: 1, dataMask: 0 } },\n  { bits: 0x5125, formatInfo: { errorCorrectionLevel: 1, dataMask: 1 } },\n  { bits: 0x5E7C, formatInfo: { errorCorrectionLevel: 1, dataMask: 2 } },\n  { bits: 0x5B4B, formatInfo: { errorCorrectionLevel: 1, dataMask: 3 } },\n  { bits: 0x45F9, formatInfo: { errorCorrectionLevel: 1, dataMask: 4 } },\n  { bits: 0x40CE, formatInfo: { errorCorrectionLevel: 1, dataMask: 5 } },\n  { bits: 0x4F97, formatInfo: { errorCorrectionLevel: 1, dataMask: 6 } },\n  { bits: 0x4AA0, formatInfo: { errorCorrectionLevel: 1, dataMask: 7 } },\n  { bits: 0x77C4, formatInfo: { errorCorrectionLevel: 0, dataMask: 0 } },\n  { bits: 0x72F3, formatInfo: { errorCorrectionLevel: 0, dataMask: 1 } },\n  { bits: 0x7DAA, formatInfo: { errorCorrectionLevel: 0, dataMask: 2 } },\n  { bits: 0x789D, formatInfo: { errorCorrectionLevel: 0, dataMask: 3 } },\n  { bits: 0x662F, formatInfo: { errorCorrectionLevel: 0, dataMask: 4 } },\n  { bits: 0x6318, formatInfo: { errorCorrectionLevel: 0, dataMask: 5 } },\n  { bits: 0x6C41, formatInfo: { errorCorrectionLevel: 0, dataMask: 6 } },\n  { bits: 0x6976, formatInfo: { errorCorrectionLevel: 0, dataMask: 7 } },\n  { bits: 0x1689, formatInfo: { errorCorrectionLevel: 3, dataMask: 0 } },\n  { bits: 0x13BE, formatInfo: { errorCorrectionLevel: 3, dataMask: 1 } },\n  { bits: 0x1CE7, formatInfo: { errorCorrectionLevel: 3, dataMask: 2 } },\n  { bits: 0x19D0, formatInfo: { errorCorrectionLevel: 3, dataMask: 3 } },\n  { bits: 0x0762, formatInfo: { errorCorrectionLevel: 3, dataMask: 4 } },\n  { bits: 0x0255, formatInfo: { errorCorrectionLevel: 3, dataMask: 5 } },\n  { bits: 0x0D0C, formatInfo: { errorCorrectionLevel: 3, dataMask: 6 } },\n  { bits: 0x083B, formatInfo: { errorCorrectionLevel: 3, dataMask: 7 } },\n  { bits: 0x355F, formatInfo: { errorCorrectionLevel: 2, dataMask: 0 } },\n  { bits: 0x3068, formatInfo: { errorCorrectionLevel: 2, dataMask: 1 } },\n  { bits: 0x3F31, formatInfo: { errorCorrectionLevel: 2, dataMask: 2 } },\n  { bits: 0x3A06, formatInfo: { errorCorrectionLevel: 2, dataMask: 3 } },\n  { bits: 0x24B4, formatInfo: { errorCorrectionLevel: 2, dataMask: 4 } },\n  { bits: 0x2183, formatInfo: { errorCorrectionLevel: 2, dataMask: 5 } },\n  { bits: 0x2EDA, formatInfo: { errorCorrectionLevel: 2, dataMask: 6 } },\n  { bits: 0x2BED, formatInfo: { errorCorrectionLevel: 2, dataMask: 7 } },\n];\n\nconst DATA_MASKS = [\n  (p: Point) => ((p.y + p.x) % 2) === 0,\n  (p: Point) => (p.y % 2) === 0,\n  (p: Point) => p.x % 3 === 0,\n  (p: Point) => (p.y + p.x) % 3 === 0,\n  (p: Point) => (Math.floor(p.y / 2) + Math.floor(p.x / 3)) % 2 === 0,\n  (p: Point) => ((p.x * p.y) % 2) + ((p.x * p.y) % 3) === 0,\n  (p: Point) => ((((p.y * p.x) % 2) + (p.y * p.x) % 3) % 2) === 0,\n  (p: Point) => ((((p.y + p.x) % 2) + (p.y * p.x) % 3) % 2) === 0,\n];\n\ninterface FormatInformation {\n  errorCorrectionLevel: number;\n  dataMask: number;\n}\n\nfunction buildFunctionPatternMask(version: Version): BitMatrix {\n  const dimension = 17 + 4 * version.versionNumber;\n  const matrix = BitMatrix.createEmpty(dimension, dimension);\n\n  matrix.setRegion(0, 0, 9, 9, true); // Top left finder pattern + separator + format\n  matrix.setRegion(dimension - 8, 0, 8, 9, true); // Top right finder pattern + separator + format\n  matrix.setRegion(0, dimension - 8, 9, 8, true); // Bottom left finder pattern + separator + format\n\n  // Alignment patterns\n  for (const x of version.alignmentPatternCenters) {\n    for (const y of version.alignmentPatternCenters) {\n      if (!(x === 6 && y === 6 || x === 6 && y === dimension - 7 || x === dimension - 7 && y === 6)) {\n        matrix.setRegion(x - 2, y - 2, 5, 5, true);\n      }\n    }\n  }\n\n  matrix.setRegion(6, 9, 1, dimension - 17, true); // Vertical timing pattern\n  matrix.setRegion(9, 6, dimension - 17, 1, true); // Horizontal timing pattern\n\n  if (version.versionNumber > 6) {\n    matrix.setRegion(dimension - 11, 0, 3, 6, true); // Version info, top right\n    matrix.setRegion(0, dimension - 11, 6, 3, true); // Version info, bottom left\n  }\n\n  return matrix;\n}\n\nfunction readCodewords(matrix: BitMatrix, version: Version, formatInfo: FormatInformation) {\n  const dataMask = DATA_MASKS[formatInfo.dataMask];\n  const dimension = matrix.height;\n\n  const functionPatternMask = buildFunctionPatternMask(version);\n\n  const codewords: number[] = [];\n  let currentByte = 0;\n  let bitsRead = 0;\n\n  // Read columns in pairs, from right to left\n  let readingUp = true;\n  for (let columnIndex = dimension - 1; columnIndex > 0; columnIndex -= 2) {\n    if (columnIndex === 6) { // Skip whole column with vertical alignment pattern;\n      columnIndex--;\n    }\n    for (let i = 0; i < dimension; i++) {\n      const y = readingUp ? dimension - 1 - i : i;\n      for (let columnOffset = 0; columnOffset < 2; columnOffset++) {\n        const x = columnIndex - columnOffset;\n        if (!functionPatternMask.get(x, y)) {\n          bitsRead++;\n          let bit = matrix.get(x, y);\n          if (dataMask({y, x})) {\n            bit = !bit;\n          }\n          currentByte = pushBit(bit, currentByte);\n          if (bitsRead === 8) { // Whole bytes\n            codewords.push(currentByte);\n            bitsRead = 0;\n            currentByte = 0;\n          }\n        }\n      }\n    }\n    readingUp = !readingUp;\n  }\n  return codewords;\n}\n\nfunction readVersion(matrix: BitMatrix): Version {\n  const dimension = matrix.height;\n\n  const provisionalVersion = Math.floor((dimension - 17) / 4);\n  if (provisionalVersion <= 6) { // 6 and under dont have version info in the QR code\n    return VERSIONS[provisionalVersion - 1];\n  }\n\n  let topRightVersionBits = 0;\n  for (let y = 5; y >= 0; y--) {\n    for (let x = dimension - 9; x >= dimension - 11; x--) {\n      topRightVersionBits = pushBit(matrix.get(x, y), topRightVersionBits);\n    }\n  }\n\n  let bottomLeftVersionBits = 0;\n  for (let x = 5; x >= 0; x--) {\n    for (let y = dimension - 9; y >= dimension - 11; y--) {\n      bottomLeftVersionBits = pushBit(matrix.get(x, y), bottomLeftVersionBits);\n    }\n  }\n\n  let bestDifference = Infinity;\n  let bestVersion: Version;\n  for (const version of VERSIONS) {\n    if (version.infoBits === topRightVersionBits || version.infoBits === bottomLeftVersionBits) {\n      return version;\n    }\n\n    let difference = numBitsDiffering(topRightVersionBits, version.infoBits);\n    if (difference < bestDifference) {\n      bestVersion = version;\n      bestDifference = difference;\n    }\n\n    difference = numBitsDiffering(bottomLeftVersionBits, version.infoBits);\n    if (difference < bestDifference) {\n      bestVersion = version;\n      bestDifference = difference;\n    }\n  }\n  // We can tolerate up to 3 bits of error since no two version info codewords will\n  // differ in less than 8 bits.\n  if (bestDifference <= 3) {\n    return bestVersion;\n  }\n}\n\nfunction readFormatInformation(matrix: BitMatrix) {\n  let topLeftFormatInfoBits = 0;\n  for (let x = 0; x <= 8; x++) {\n    if (x !== 6) { // Skip timing pattern bit\n      topLeftFormatInfoBits = pushBit(matrix.get(x, 8), topLeftFormatInfoBits);\n    }\n  }\n  for (let y = 7; y >= 0; y--) {\n    if (y !== 6) { // Skip timing pattern bit\n      topLeftFormatInfoBits = pushBit(matrix.get(8, y), topLeftFormatInfoBits);\n    }\n  }\n\n  const dimension = matrix.height;\n  let topRightBottomRightFormatInfoBits = 0;\n  for (let y = dimension - 1; y >= dimension - 7; y--) { // bottom left\n    topRightBottomRightFormatInfoBits = pushBit(matrix.get(8, y), topRightBottomRightFormatInfoBits);\n  }\n  for (let x = dimension - 8; x < dimension; x++) { // top right\n    topRightBottomRightFormatInfoBits = pushBit(matrix.get(x, 8), topRightBottomRightFormatInfoBits);\n  }\n\n  let bestDifference = Infinity;\n  let bestFormatInfo = null;\n  for (const {bits, formatInfo} of FORMAT_INFO_TABLE) {\n    if (bits === topLeftFormatInfoBits || bits === topRightBottomRightFormatInfoBits) {\n      return formatInfo;\n    }\n    let difference = numBitsDiffering(topLeftFormatInfoBits, bits);\n    if (difference < bestDifference) {\n      bestFormatInfo = formatInfo;\n      bestDifference = difference;\n    }\n    if (topLeftFormatInfoBits !== topRightBottomRightFormatInfoBits) { // also try the other option\n      difference = numBitsDiffering(topRightBottomRightFormatInfoBits, bits);\n      if (difference < bestDifference) {\n        bestFormatInfo = formatInfo;\n        bestDifference = difference;\n      }\n    }\n  }\n  // Hamming distance of the 32 masked codes is 7, by construction, so <= 3 bits differing means we found a match\n  if (bestDifference <= 3) {\n    return bestFormatInfo;\n  }\n  return null;\n}\n\nfunction getDataBlocks(codewords: number[], version: Version, ecLevel: number) {\n  const ecInfo = version.errorCorrectionLevels[ecLevel];\n  const dataBlocks: Array<{\n    numDataCodewords: number;\n    codewords: number[];\n  }> = [];\n\n  let totalCodewords = 0;\n  ecInfo.ecBlocks.forEach(block => {\n    for (let i = 0; i < block.numBlocks; i++) {\n      dataBlocks.push({ numDataCodewords: block.dataCodewordsPerBlock, codewords: [] });\n      totalCodewords += block.dataCodewordsPerBlock + ecInfo.ecCodewordsPerBlock;\n    }\n  });\n\n  // In some cases the QR code will be malformed enough that we pull off more or less than we should.\n  // If we pull off less there's nothing we can do.\n  // If we pull off more we can safely truncate\n  if (codewords.length < totalCodewords) {\n    return null;\n  }\n  codewords = codewords.slice(0, totalCodewords);\n\n  const shortBlockSize = ecInfo.ecBlocks[0].dataCodewordsPerBlock;\n  // Pull codewords to fill the blocks up to the minimum size\n  for (let i = 0; i < shortBlockSize; i++) {\n    for (const dataBlock of dataBlocks) {\n      dataBlock.codewords.push(codewords.shift());\n    }\n  }\n\n  // If there are any large blocks, pull codewords to fill the last element of those\n  if (ecInfo.ecBlocks.length > 1) {\n    const smallBlockCount = ecInfo.ecBlocks[0].numBlocks;\n    const largeBlockCount = ecInfo.ecBlocks[1].numBlocks;\n    for (let i = 0; i < largeBlockCount; i++) {\n      dataBlocks[smallBlockCount + i].codewords.push(codewords.shift());\n    }\n  }\n\n  // Add the rest of the codewords to the blocks. These are the error correction codewords.\n  while (codewords.length > 0) {\n    for (const dataBlock of dataBlocks) {\n      dataBlock.codewords.push(codewords.shift());\n    }\n  }\n\n  return dataBlocks;\n}\n\nfunction decodeMatrix(matrix: BitMatrix) {\n  const version = readVersion(matrix);\n  if (!version) {\n    return null;\n  }\n\n  const formatInfo = readFormatInformation(matrix);\n  if (!formatInfo) {\n    return null;\n  }\n\n  const codewords = readCodewords(matrix, version, formatInfo);\n  const dataBlocks = getDataBlocks(codewords, version, formatInfo.errorCorrectionLevel);\n  if (!dataBlocks) {\n    return null;\n  }\n\n  // Count total number of data bytes\n  const totalBytes = dataBlocks.reduce((a, b) => a + b.numDataCodewords, 0);\n  const resultBytes = new Uint8ClampedArray(totalBytes);\n\n  let resultIndex = 0;\n  for (const dataBlock of dataBlocks) {\n    const correctedBytes = rsDecode(dataBlock.codewords, dataBlock.codewords.length - dataBlock.numDataCodewords);\n    if (!correctedBytes) {\n      return null;\n    }\n    for (let i = 0; i < dataBlock.numDataCodewords; i++) {\n      resultBytes[resultIndex++] = correctedBytes[i];\n    }\n  }\n\n  try {\n    return decodeData(resultBytes, version.versionNumber);\n  } catch {\n    return null;\n  }\n}\n\nexport function decode(matrix: BitMatrix): DecodedQR {\n  if (matrix == null) {\n    return null;\n  }\n  const result = decodeMatrix(matrix);\n  if (result) {\n    return result;\n  }\n  // Decoding didn't work, try mirroring the QR across the topLeft -> bottomRight line.\n  for (let x = 0; x < matrix.width; x++) {\n    for (let y = x + 1; y < matrix.height; y++) {\n      if (matrix.get(x, y) !== matrix.get(y, x)) {\n        matrix.set(x, y, !matrix.get(x, y));\n        matrix.set(y, x, !matrix.get(y, x));\n      }\n    }\n  }\n  return decodeMatrix(matrix);\n}\n", "import {BitMatrix} from \"../BitMatrix\";\nimport {Point, QRLocation} from \"../locator\";\n\ninterface PerspectiveTransform {\n  a11: number;\n  a21: number;\n  a31: number;\n  a12: number;\n  a22: number;\n  a32: number;\n  a13: number;\n  a23: number;\n  a33: number;\n}\n\nfunction squareToQuadrilateral(p1: Point, p2: Point, p3: Point, p4: Point): PerspectiveTransform {\n  const dx3 = p1.x - p2.x + p3.x - p4.x;\n  const dy3 = p1.y - p2.y + p3.y - p4.y;\n  if (dx3 === 0 && dy3 === 0) { // Affine\n    return {\n      a11: p2.x - p1.x,\n      a12: p2.y - p1.y,\n      a13: 0,\n      a21: p3.x - p2.x,\n      a22: p3.y - p2.y,\n      a23: 0,\n      a31: p1.x,\n      a32: p1.y,\n      a33: 1,\n    };\n  } else {\n    const dx1 = p2.x - p3.x;\n    const dx2 = p4.x - p3.x;\n    const dy1 = p2.y - p3.y;\n    const dy2 = p4.y - p3.y;\n    const denominator = dx1 * dy2 - dx2 * dy1;\n    const a13 = (dx3 * dy2 - dx2 * dy3) / denominator;\n    const a23 = (dx1 * dy3 - dx3 * dy1) / denominator;\n    return {\n      a11: p2.x - p1.x + a13 * p2.x,\n      a12: p2.y - p1.y + a13 * p2.y,\n      a13,\n      a21: p4.x - p1.x + a23 * p4.x,\n      a22: p4.y - p1.y + a23 * p4.y,\n      a23,\n      a31: p1.x,\n      a32: p1.y,\n      a33: 1,\n    };\n  }\n}\n\nfunction quadrilateralToSquare(p1: Point, p2: Point, p3: Point, p4: Point): PerspectiveTransform {\n  // Here, the adjoint serves as the inverse:\n  const sToQ = squareToQuadrilateral(p1, p2, p3, p4);\n  return {\n    a11: sToQ.a22 * sToQ.a33 - sToQ.a23 * sToQ.a32,\n    a12: sToQ.a13 * sToQ.a32 - sToQ.a12 * sToQ.a33,\n    a13: sToQ.a12 * sToQ.a23 - sToQ.a13 * sToQ.a22,\n    a21: sToQ.a23 * sToQ.a31 - sToQ.a21 * sToQ.a33,\n    a22: sToQ.a11 * sToQ.a33 - sToQ.a13 * sToQ.a31,\n    a23: sToQ.a13 * sToQ.a21 - sToQ.a11 * sToQ.a23,\n    a31: sToQ.a21 * sToQ.a32 - sToQ.a22 * sToQ.a31,\n    a32: sToQ.a12 * sToQ.a31 - sToQ.a11 * sToQ.a32,\n    a33: sToQ.a11 * sToQ.a22 - sToQ.a12 * sToQ.a21,\n  };\n}\n\nfunction times(a: PerspectiveTransform, b: PerspectiveTransform): PerspectiveTransform {\n  return {\n    a11: a.a11 * b.a11 + a.a21 * b.a12 + a.a31 * b.a13,\n    a12: a.a12 * b.a11 + a.a22 * b.a12 + a.a32 * b.a13,\n    a13: a.a13 * b.a11 + a.a23 * b.a12 + a.a33 * b.a13,\n    a21: a.a11 * b.a21 + a.a21 * b.a22 + a.a31 * b.a23,\n    a22: a.a12 * b.a21 + a.a22 * b.a22 + a.a32 * b.a23,\n    a23: a.a13 * b.a21 + a.a23 * b.a22 + a.a33 * b.a23,\n    a31: a.a11 * b.a31 + a.a21 * b.a32 + a.a31 * b.a33,\n    a32: a.a12 * b.a31 + a.a22 * b.a32 + a.a32 * b.a33,\n    a33: a.a13 * b.a31 + a.a23 * b.a32 + a.a33 * b.a33,\n  };\n}\n\nexport function extract(image: BitMatrix, location: QRLocation) {\n  const qToS = quadrilateralToSquare(\n    {x: 3.5, y: 3.5},\n    {x: location.dimension - 3.5, y: 3.5},\n    {x: location.dimension - 6.5, y: location.dimension - 6.5},\n    {x: 3.5, y: location.dimension - 3.5},\n  );\n  const sToQ = squareToQuadrilateral(location.topLeft, location.topRight, location.alignmentPattern, location.bottomLeft);\n  const transform = times(sToQ, qToS);\n\n  const matrix = BitMatrix.createEmpty(location.dimension, location.dimension);\n  const mappingFunction = (x: number, y: number) => {\n    const denominator = transform.a13 * x + transform.a23 * y + transform.a33;\n    return {\n      x: (transform.a11 * x + transform.a21 * y + transform.a31) / denominator,\n      y: (transform.a12 * x + transform.a22 * y + transform.a32) / denominator,\n    };\n  };\n\n  for (let y = 0; y < location.dimension; y++) {\n    for (let x = 0; x < location.dimension; x++) {\n      const xValue = x + 0.5;\n      const yValue = y + 0.5;\n      const sourcePixel = mappingFunction(xValue, yValue);\n      matrix.set(x, y, image.get(Math.floor(sourcePixel.x), Math.floor(sourcePixel.y)));\n    }\n  }\n\n  return {\n    matrix,\n    mappingFunction,\n  };\n}\n", "import { BitMatrix } from \"../BitMatrix\";\n\nconst MAX_FINDERPATTERNS_TO_SEARCH = 5;\nconst MIN_QUAD_RATIO = 0.5;\nconst MAX_QUAD_RATIO = 1.5;\n\nexport interface Point {\n  x: number;\n  y: number;\n}\n\nexport interface QRLocation {\n  topRight: Point;\n  bottomLeft: Point;\n  topLeft: Point;\n  alignmentPattern: Point;\n  dimension: number;\n}\n\nconst distance = (a: Point, b: Point) => Math.sqrt((b.x - a.x) ** 2 + (b.y - a.y) ** 2);\n\nfunction sum(values: number[]) {\n  return values.reduce((a, b) => a + b);\n}\n\n// Takes three finder patterns and organizes them into topLeft, topRight, etc\nfunction reorderFinderPatterns(pattern1: Point, pattern2: Point, pattern3: Point) {\n  // Find distances between pattern centers\n  const oneTwoDistance = distance(pattern1, pattern2);\n  const twoThreeDistance = distance(pattern2, pattern3);\n  const oneThreeDistance = distance(pattern1, pattern3);\n\n  let bottomLeft: Point;\n  let topLeft: Point;\n  let topRight: Point;\n\n  // Assume one closest to other two is B; A and C will just be guesses at first\n  if (twoThreeDistance >= oneTwoDistance && twoThreeDistance >= oneThreeDistance) {\n    [bottomLeft, topLeft, topRight] = [pattern2, pattern1, pattern3];\n  } else if (oneThreeDistance >= twoThreeDistance && oneThreeDistance >= oneTwoDistance) {\n    [bottomLeft, topLeft, topRight] = [pattern1, pattern2, pattern3];\n  } else {\n    [bottomLeft, topLeft, topRight] = [pattern1, pattern3, pattern2];\n  }\n\n  // Use cross product to figure out whether bottomLeft (A) and topRight (C) are correct or flipped in relation to topLeft (B)\n  // This asks whether BC x BA has a positive z component, which is the arrangement we want. If it's negative, then\n  // we've got it flipped around and should swap topRight and bottomLeft.\n  if (((topRight.x - topLeft.x) * (bottomLeft.y - topLeft.y)) - ((topRight.y - topLeft.y) * (bottomLeft.x - topLeft.x)) < 0) {\n    [bottomLeft, topRight] = [topRight, bottomLeft];\n  }\n\n  return { bottomLeft, topLeft, topRight };\n}\n\n// Computes the dimension (number of modules on a side) of the QR Code based on the position of the finder patterns\nfunction computeDimension(topLeft: Point, topRight: Point, bottomLeft: Point, matrix: BitMatrix) {\n  const moduleSize = (\n    sum(countBlackWhiteRun(topLeft, bottomLeft, matrix, 5)) / 7 + // Divide by 7 since the ratio is 1:1:3:1:1\n    sum(countBlackWhiteRun(topLeft, topRight, matrix, 5)) / 7 +\n    sum(countBlackWhiteRun(bottomLeft, topLeft, matrix, 5)) / 7 +\n    sum(countBlackWhiteRun(topRight, topLeft, matrix, 5)) / 7\n  ) / 4;\n\n  if (moduleSize < 1) {\n    throw new Error(\"Invalid module size\");\n  }\n\n  const topDimension = Math.round(distance(topLeft, topRight) / moduleSize);\n  const sideDimension = Math.round(distance(topLeft, bottomLeft) / moduleSize);\n  let dimension = Math.floor((topDimension + sideDimension) / 2) + 7;\n  switch (dimension % 4) {\n    case 0:\n      dimension++;\n      break;\n    case 2:\n      dimension--;\n      break;\n  }\n  return { dimension, moduleSize };\n}\n\n// Takes an origin point and an end point and counts the sizes of the black white run from the origin towards the end point.\n// Returns an array of elements, representing the pixel size of the black white run.\n// Uses a variant of http://en.wikipedia.org/wiki/Bresenham's_line_algorithm\nfunction countBlackWhiteRunTowardsPoint(origin: Point, end: Point, matrix: BitMatrix, length: number) {\n  const switchPoints: Point[] = [{x: Math.floor(origin.x), y: Math.floor(origin.y)}];\n  const steep = Math.abs(end.y - origin.y) > Math.abs(end.x - origin.x);\n\n  let fromX: number;\n  let fromY: number;\n  let toX: number;\n  let toY: number;\n  if (steep) {\n    fromX = Math.floor(origin.y);\n    fromY = Math.floor(origin.x);\n    toX = Math.floor(end.y);\n    toY = Math.floor(end.x);\n  } else {\n    fromX = Math.floor(origin.x);\n    fromY = Math.floor(origin.y);\n    toX = Math.floor(end.x);\n    toY = Math.floor(end.y);\n  }\n\n  const dx = Math.abs(toX - fromX);\n  const dy = Math.abs(toY - fromY);\n  let error = Math.floor(-dx / 2);\n  const xStep = fromX < toX ? 1 : -1;\n  const yStep = fromY < toY ? 1 : -1;\n\n  let currentPixel = true;\n  // Loop up until x == toX, but not beyond\n  for (let x = fromX, y = fromY; x !== toX + xStep; x += xStep) {\n    // Does current pixel mean we have moved white to black or vice versa?\n    // Scanning black in state 0,2 and white in state 1, so if we find the wrong\n    // color, advance to next state or end if we are in state 2 already\n    const realX = steep ? y : x;\n    const realY = steep ? x : y;\n    if (matrix.get(realX, realY) !== currentPixel) {\n      currentPixel = !currentPixel;\n      switchPoints.push({x: realX, y: realY});\n      if (switchPoints.length === length + 1) {\n        break;\n      }\n    }\n    error += dy;\n    if (error > 0) {\n      if (y === toY) {\n        break;\n      }\n      y += yStep;\n      error -= dx;\n    }\n  }\n  const distances: number[] = [];\n  for (let i = 0; i < length; i++) {\n    if (switchPoints[i] && switchPoints[i + 1]) {\n      distances.push(distance(switchPoints[i], switchPoints[i + 1]));\n    } else {\n      distances.push(0);\n    }\n  }\n  return distances;\n}\n\n// Takes an origin point and an end point and counts the sizes of the black white run in the origin point\n// along the line that intersects with the end point. Returns an array of elements, representing the pixel sizes\n// of the black white run. Takes a length which represents the number of switches from black to white to look for.\nfunction countBlackWhiteRun(origin: Point, end: Point, matrix: BitMatrix, length: number) {\n  const rise = end.y - origin.y;\n  const run = end.x - origin.x;\n\n  const towardsEnd = countBlackWhiteRunTowardsPoint(origin, end, matrix, Math.ceil(length / 2));\n  const awayFromEnd = countBlackWhiteRunTowardsPoint(origin, {x: origin.x - run, y: origin.y - rise}, matrix, Math.ceil(length / 2));\n\n  const middleValue = towardsEnd.shift() + awayFromEnd.shift() - 1; // Substract one so we don't double count a pixel\n  return awayFromEnd.concat(middleValue).concat(...towardsEnd);\n}\n\n// Takes in a black white run and an array of expected ratios. Returns the average size of the run as well as the \"error\" -\n// that is the amount the run diverges from the expected ratio\nfunction scoreBlackWhiteRun(sequence: number[], ratios: number[]) {\n  const averageSize = sum(sequence) / sum(ratios);\n  let error = 0;\n  ratios.forEach((ratio, i) => {\n    error += (sequence[i] - ratio * averageSize) ** 2;\n  });\n\n  return { averageSize, error };\n}\n\n// Takes an X,Y point and an array of sizes and scores the point against those ratios.\n// For example for a finder pattern takes the ratio list of 1:1:3:1:1 and checks horizontal, vertical and diagonal ratios\n// against that.\nfunction scorePattern(point: Point, ratios: number[], matrix: BitMatrix) {\n  try {\n    const horizontalRun = countBlackWhiteRun(point, {x: -1, y: point.y}, matrix, ratios.length);\n    const verticalRun = countBlackWhiteRun(point, {x: point.x, y: -1}, matrix, ratios.length);\n\n    const topLeftPoint = {\n      x: Math.max(0, point.x - point.y) - 1,\n      y: Math.max(0, point.y - point.x) - 1,\n    };\n    const topLeftBottomRightRun = countBlackWhiteRun(point, topLeftPoint, matrix, ratios.length);\n\n    const bottomLeftPoint = {\n      x: Math.min(matrix.width, point.x + point.y) + 1,\n      y: Math.min(matrix.height, point.y + point.x) + 1,\n    };\n    const bottomLeftTopRightRun = countBlackWhiteRun(point, bottomLeftPoint, matrix, ratios.length);\n\n    const horzError = scoreBlackWhiteRun(horizontalRun, ratios);\n    const vertError = scoreBlackWhiteRun(verticalRun, ratios);\n    const diagDownError = scoreBlackWhiteRun(topLeftBottomRightRun, ratios);\n    const diagUpError = scoreBlackWhiteRun(bottomLeftTopRightRun, ratios);\n\n    const ratioError = Math.sqrt(horzError.error * horzError.error +\n      vertError.error * vertError.error +\n      diagDownError.error * diagDownError.error +\n      diagUpError.error * diagUpError.error);\n\n    const avgSize = (horzError.averageSize + vertError.averageSize + diagDownError.averageSize + diagUpError.averageSize) / 4;\n\n    const sizeError = ((horzError.averageSize - avgSize) ** 2 +\n      (vertError.averageSize - avgSize) ** 2 +\n      (diagDownError.averageSize - avgSize) ** 2 +\n      (diagUpError.averageSize - avgSize) ** 2) / avgSize;\n    return ratioError + sizeError;\n  } catch {\n    return Infinity;\n  }\n}\n\nfunction recenterLocation(matrix: BitMatrix, p: Point): Point {\n  let leftX = Math.round(p.x);\n  while (matrix.get(leftX, Math.round(p.y))) {\n    leftX--;\n  }\n  let rightX = Math.round(p.x);\n  while (matrix.get(rightX, Math.round(p.y))) {\n    rightX++;\n  }\n  const x = (leftX + rightX) / 2;\n\n  let topY = Math.round(p.y);\n  while (matrix.get(Math.round(x), topY)) {\n    topY--;\n  }\n  let bottomY = Math.round(p.y);\n  while (matrix.get(Math.round(x), bottomY)) {\n    bottomY++;\n  }\n  const y = (topY + bottomY) / 2;\n\n  return { x, y };\n}\n\ninterface Quad {\n  top: {\n    startX: number;\n    endX: number;\n    y: number;\n  };\n  bottom: {\n    startX: number;\n    endX: number;\n    y: number;\n  };\n}\n\nexport function locate(matrix: BitMatrix): QRLocation[] {\n  const finderPatternQuads: Quad[] = [];\n  let activeFinderPatternQuads: Quad[] = [];\n  const alignmentPatternQuads: Quad[] = [];\n  let activeAlignmentPatternQuads: Quad[] = [];\n\n  for (let y = 0; y <= matrix.height; y++) {\n    let length = 0;\n    let lastBit = false;\n    let scans = [0, 0, 0, 0, 0];\n\n    for (let x = -1; x <= matrix.width; x++) {\n      const v = matrix.get(x, y);\n      if (v === lastBit) {\n        length++;\n      } else {\n        scans = [scans[1], scans[2], scans[3], scans[4], length];\n        length = 1;\n        lastBit = v;\n\n        // Do the last 5 color changes ~ match the expected ratio for a finder pattern? 1:1:3:1:1 of b:w:b:w:b\n        const averageFinderPatternBlocksize = sum(scans) / 7;\n        const validFinderPattern =\n          Math.abs(scans[0] - averageFinderPatternBlocksize) < averageFinderPatternBlocksize &&\n          Math.abs(scans[1] - averageFinderPatternBlocksize) < averageFinderPatternBlocksize &&\n          Math.abs(scans[2] - 3 * averageFinderPatternBlocksize) < 3 * averageFinderPatternBlocksize &&\n          Math.abs(scans[3] - averageFinderPatternBlocksize) < averageFinderPatternBlocksize &&\n          Math.abs(scans[4] - averageFinderPatternBlocksize) < averageFinderPatternBlocksize &&\n          !v; // And make sure the current pixel is white since finder patterns are bordered in white\n\n        // Do the last 3 color changes ~ match the expected ratio for an alignment pattern? 1:1:1 of w:b:w\n        const averageAlignmentPatternBlocksize = sum(scans.slice(-3)) / 3;\n        const validAlignmentPattern =\n          Math.abs(scans[2] - averageAlignmentPatternBlocksize) < averageAlignmentPatternBlocksize &&\n          Math.abs(scans[3] - averageAlignmentPatternBlocksize) < averageAlignmentPatternBlocksize &&\n          Math.abs(scans[4] - averageAlignmentPatternBlocksize) < averageAlignmentPatternBlocksize &&\n          v; // Is the current pixel black since alignment patterns are bordered in black\n\n        if (validFinderPattern) {\n          // Compute the start and end x values of the large center black square\n          const endX = x - scans[3] - scans[4];\n          const startX = endX - scans[2];\n\n          const line = { startX, endX, y };\n          // Is there a quad directly above the current spot? If so, extend it with the new line. Otherwise, create a new quad with\n          // that line as the starting point.\n          const matchingQuads = activeFinderPatternQuads.filter(q =>\n            (startX >= q.bottom.startX && startX <= q.bottom.endX) ||\n            (endX >= q.bottom.startX && startX <= q.bottom.endX) ||\n            (startX <= q.bottom.startX && endX >= q.bottom.endX && (\n              (scans[2] / (q.bottom.endX - q.bottom.startX)) < MAX_QUAD_RATIO &&\n              (scans[2] / (q.bottom.endX - q.bottom.startX)) > MIN_QUAD_RATIO\n            )),\n          );\n          if (matchingQuads.length > 0) {\n            matchingQuads[0].bottom = line;\n          } else {\n            activeFinderPatternQuads.push({ top: line, bottom: line });\n          }\n        }\n        if (validAlignmentPattern) {\n          // Compute the start and end x values of the center black square\n          const endX = x - scans[4];\n          const startX = endX - scans[3];\n\n          const line = { startX, y, endX };\n          // Is there a quad directly above the current spot? If so, extend it with the new line. Otherwise, create a new quad with\n          // that line as the starting point.\n          const matchingQuads = activeAlignmentPatternQuads.filter(q =>\n            (startX >= q.bottom.startX && startX <= q.bottom.endX) ||\n            (endX >= q.bottom.startX && startX <= q.bottom.endX) ||\n            (startX <= q.bottom.startX && endX >= q.bottom.endX && (\n              (scans[2] / (q.bottom.endX - q.bottom.startX)) < MAX_QUAD_RATIO &&\n              (scans[2] / (q.bottom.endX - q.bottom.startX)) > MIN_QUAD_RATIO\n            )),\n          );\n          if (matchingQuads.length > 0) {\n            matchingQuads[0].bottom = line;\n          } else {\n            activeAlignmentPatternQuads.push({ top: line, bottom: line });\n          }\n        }\n      }\n    }\n    finderPatternQuads.push(...activeFinderPatternQuads.filter(q => q.bottom.y !== y && q.bottom.y - q.top.y >= 2));\n    activeFinderPatternQuads = activeFinderPatternQuads.filter(q => q.bottom.y === y);\n\n    alignmentPatternQuads.push(...activeAlignmentPatternQuads.filter(q => q.bottom.y !== y));\n    activeAlignmentPatternQuads = activeAlignmentPatternQuads.filter(q => q.bottom.y === y);\n\n  }\n\n  finderPatternQuads.push(...activeFinderPatternQuads.filter(q => q.bottom.y - q.top.y >= 2));\n  alignmentPatternQuads.push(...activeAlignmentPatternQuads);\n\n  // Refactored from cozmo/jsQR to (hopefully) circumvent an issue in Safari 13+ on both Mac and iOS (also including\n  // iOS Chrome and other Safari iOS derivatives). Safari was very occasionally and apparently not deterministically\n  // throwing a \"RangeError: Array size is not a small enough positive integer.\" exception seemingly within the second\n  // .map of the original code (here the second for-loop). This second .map contained a nested .map call over the same\n  // array instance which was the chained result from previous calls to .map, .filter and .sort which potentially caused\n  // this bug in Safari?\n  // Also see https://github.com/cozmo/jsQR/issues/157 and https://bugs.webkit.org/show_bug.cgi?id=211619#c3\n  const scoredFinderPatternPositions: Array<Point & { size: number, score: number }> = [];\n  for (const quad of finderPatternQuads) {\n    if (quad.bottom.y - quad.top.y < 2) {\n      // All quads must be at least 2px tall since the center square is larger than a block\n      continue;\n    }\n\n    // calculate quad center\n    const x = (quad.top.startX + quad.top.endX + quad.bottom.startX + quad.bottom.endX) / 4;\n    const y = (quad.top.y + quad.bottom.y + 1) / 2;\n    if (!matrix.get(Math.round(x), Math.round(y))) {\n      continue;\n    }\n\n    const lengths = [quad.top.endX - quad.top.startX, quad.bottom.endX - quad.bottom.startX, quad.bottom.y - quad.top.y + 1];\n    const size = sum(lengths) / lengths.length;\n    // Initial scoring of finder pattern quads by looking at their ratios, not taking into account position\n    const score = scorePattern({x: Math.round(x), y: Math.round(y)}, [1, 1, 3, 1, 1], matrix);\n    scoredFinderPatternPositions.push({ score, x, y, size });\n  }\n  if (scoredFinderPatternPositions.length < 3) {\n    // A QR code has 3 finder patterns, therefore we need at least 3 candidates.\n    return null;\n  }\n  scoredFinderPatternPositions.sort((a, b) => a.score - b.score);\n\n  // Now take the top finder pattern options and try to find 2 other options with a similar size.\n  const finderPatternGroups: Array<{ points: [Point, Point, Point], score: number }> = [];\n  for (let i = 0; i < Math.min(scoredFinderPatternPositions.length, MAX_FINDERPATTERNS_TO_SEARCH); ++i) {\n    const point = scoredFinderPatternPositions[i];\n    const otherPoints: typeof scoredFinderPatternPositions = [];\n\n    for (const otherPoint of scoredFinderPatternPositions) {\n      if (otherPoint === point) {\n        continue;\n      }\n      otherPoints.push({\n        ...otherPoint,\n        score: otherPoint.score + ((otherPoint.size - point.size) ** 2) / point.size, // score similarity of sizes\n      });\n    }\n    otherPoints.sort((a, b) => a.score - b.score);\n\n    finderPatternGroups.push({\n      points: [point, otherPoints[0], otherPoints[1]], // note that otherPoints.length >= 2 as scoredFinderPatternPositions.length >= 3\n      score: point.score + otherPoints[0].score + otherPoints[1].score, // total combined score of the three points in the group\n    });\n  }\n  finderPatternGroups.sort((a, b) => a.score - b.score);\n  const bestFinderPatternGroup = finderPatternGroups[0];\n\n  const { topRight, topLeft, bottomLeft } = reorderFinderPatterns(...bestFinderPatternGroup.points);\n  const alignment = findAlignmentPattern(matrix, alignmentPatternQuads, topRight, topLeft, bottomLeft);\n  const result: QRLocation[] = [];\n  if (alignment) {\n    result.push({\n      alignmentPattern: { x: alignment.alignmentPattern.x, y: alignment.alignmentPattern.y },\n      bottomLeft: {x: bottomLeft.x, y: bottomLeft.y },\n      dimension: alignment.dimension,\n      topLeft: {x: topLeft.x, y: topLeft.y },\n      topRight: {x: topRight.x, y: topRight.y },\n    });\n  }\n\n  // We normally use the center of the quads as the location of the tracking points, which is optimal for most cases and will account\n  // for a skew in the image. However, In some cases, a slight skew might not be real and instead be caused by image compression\n  // errors and/or low resolution. For those cases, we'd be better off centering the point exactly in the middle of the black area. We\n  // compute and return the location data for the naively centered points as it is little additional work and allows for multiple\n  // attempts at decoding harder images.\n  const midTopRight = recenterLocation(matrix, topRight);\n  const midTopLeft = recenterLocation(matrix, topLeft);\n  const midBottomLeft = recenterLocation(matrix, bottomLeft);\n  const centeredAlignment = findAlignmentPattern(matrix, alignmentPatternQuads, midTopRight, midTopLeft, midBottomLeft);\n  if (centeredAlignment) {\n    result.push({\n      alignmentPattern: { x: centeredAlignment.alignmentPattern.x, y: centeredAlignment.alignmentPattern.y },\n      bottomLeft: { x: midBottomLeft.x, y: midBottomLeft. y },\n      topLeft: { x: midTopLeft.x, y: midTopLeft. y },\n      topRight: { x: midTopRight.x, y: midTopRight. y },\n      dimension: centeredAlignment.dimension,\n    });\n  }\n\n  if (result.length === 0) {\n    return null;\n  }\n\n  return result;\n}\n\nfunction findAlignmentPattern(matrix: BitMatrix, alignmentPatternQuads: Quad[], topRight: Point, topLeft: Point, bottomLeft: Point) {\n  // Now that we've found the three finder patterns we can determine the blockSize and the size of the QR code.\n  // We'll use these to help find the alignment pattern but also later when we do the extraction.\n  let dimension: number;\n  let moduleSize: number;\n  try {\n    ({ dimension, moduleSize } = computeDimension(topLeft, topRight, bottomLeft, matrix));\n  } catch (e) {\n    return null;\n  }\n\n  // Now find the alignment pattern\n  const bottomRightFinderPattern = { // Best guess at where a bottomRight finder pattern would be\n    x: topRight.x - topLeft.x + bottomLeft.x,\n    y: topRight.y - topLeft.y + bottomLeft.y,\n  };\n  const modulesBetweenFinderPatterns = ((distance(topLeft, bottomLeft) + distance(topLeft, topRight)) / 2 / moduleSize);\n  const correctionToTopLeft = 1 - (3 / modulesBetweenFinderPatterns);\n  const expectedAlignmentPattern = {\n    x: topLeft.x + correctionToTopLeft * (bottomRightFinderPattern.x - topLeft.x),\n    y: topLeft.y + correctionToTopLeft * (bottomRightFinderPattern.y - topLeft.y),\n  };\n\n  const alignmentPatterns = alignmentPatternQuads\n    .map(q => {\n      const x = (q.top.startX + q.top.endX + q.bottom.startX + q.bottom.endX) / 4;\n      const y = (q.top.y + q.bottom.y + 1) / 2;\n      if (!matrix.get(Math.floor(x), Math.floor(y))) {\n        return;\n      }\n\n      const sizeScore = scorePattern({x: Math.floor(x), y: Math.floor(y)}, [1, 1, 1], matrix);\n      const score = sizeScore + distance({x, y}, expectedAlignmentPattern);\n      return { x, y, score };\n    })\n    .filter(v => !!v)\n    .sort((a, b) => a.score - b.score);\n\n  // If there are less than 15 modules between finder patterns it's a version 1 QR code and as such has no alignmemnt pattern\n  // so we can only use our best guess.\n  const alignmentPattern = modulesBetweenFinderPatterns >= 15 && alignmentPatterns.length ? alignmentPatterns[0] : expectedAlignmentPattern;\n\n  return { alignmentPattern, dimension };\n}\n", "import {binarize} from \"./binarizer\";\nimport {BitMatrix} from \"./BitMatrix\";\nimport {Chunks} from \"./decoder/decodeData\";\nimport {decode} from \"./decoder/decoder\";\nimport { Version } from \"./decoder/version\";\nimport {extract} from \"./extractor\";\nimport {locate, Point} from \"./locator\";\n\nexport interface QRCode {\n  binaryData: number[];\n  data: string;\n  chunks: Chunks;\n  version: number;\n  location: {\n    topRightCorner: Point;\n    topLeftCorner: Point;\n    bottomRightCorner: Point;\n    bottomLeftCorner: Point;\n\n    topRightFinderPattern: Point;\n    topLeftFinderPattern: Point;\n    bottomLeftFinderPattern: Point;\n\n    bottomRightAlignmentPattern?: Point;\n  };\n  matrix: BitMatrix;\n}\n\nfunction scan(matrix: BitMatrix): QRCode | null {\n  const locations = locate(matrix);\n  if (!locations) {\n    return null;\n  }\n\n  for (const location of locations) {\n    const extracted = extract(matrix, location);\n    const decoded = decode(extracted.matrix);\n    if (decoded) {\n      return {\n        binaryData: decoded.bytes,\n        data: decoded.text,\n        chunks: decoded.chunks,\n        version: decoded.version,\n        location: {\n          topRightCorner: extracted.mappingFunction(location.dimension, 0),\n          topLeftCorner: extracted.mappingFunction(0, 0),\n          bottomRightCorner: extracted.mappingFunction(location.dimension, location.dimension),\n          bottomLeftCorner: extracted.mappingFunction(0, location.dimension),\n\n          topRightFinderPattern: location.topRight,\n          topLeftFinderPattern: location.topLeft,\n          bottomLeftFinderPattern: location.bottomLeft,\n\n          bottomRightAlignmentPattern: location.alignmentPattern,\n        },\n        matrix: extracted.matrix,\n      };\n    }\n  }\n  return null;\n}\n\nexport interface Options {\n  inversionAttempts?: \"dontInvert\" | \"onlyInvert\" | \"attemptBoth\" | \"invertFirst\";\n  greyScaleWeights?: GreyscaleWeights;\n  canOverwriteImage?: boolean;\n}\n\nexport interface GreyscaleWeights {\n  red: number;\n  green: number;\n  blue: number;\n  useIntegerApproximation?: boolean;\n}\n\nconst defaultOptions: Options = {\n  inversionAttempts: \"attemptBoth\",\n  greyScaleWeights: {\n    red: 0.2126,\n    green: 0.7152,\n    blue: 0.0722,\n    useIntegerApproximation: false,\n  },\n  canOverwriteImage: true,\n};\n\nfunction mergeObject(target: any, src: any) {\n  Object.keys(src).forEach(opt => { // Sad implementation of Object.assign since we target es5 not es6\n    target[opt] = src[opt];\n  });\n}\n\nfunction jsQR(data: Uint8ClampedArray, width: number, height: number, providedOptions: Options = {}): QRCode | null {\n  const options = Object.create(null);\n  mergeObject(options, defaultOptions);\n  mergeObject(options, providedOptions);\n\n  const tryInvertedFirst = options.inversionAttempts === \"onlyInvert\" || options.inversionAttempts === \"invertFirst\";\n  const shouldInvert = options.inversionAttempts === \"attemptBoth\" || tryInvertedFirst;\n  const {binarized, inverted} = binarize(data, width, height, shouldInvert, options.greyScaleWeights,\n      options.canOverwriteImage);\n  let result = scan(tryInvertedFirst ? inverted : binarized);\n  if (!result && (options.inversionAttempts === \"attemptBoth\" || options.inversionAttempts === \"invertFirst\")) {\n    result = scan(tryInvertedFirst ? binarized : inverted);\n  }\n  return result;\n}\n\n(jsQR as any).default = jsQR;\nexport default jsQR;\n", "// @ts-ignore jsqr-es6 does not provide types currently\nimport jsQR from '../node_modules/jsqr-es6/dist/jsQR.js';\n\ntype GrayscaleWeights = {\n    red: number,\n    green: number,\n    blue: number,\n    useIntegerApproximation: boolean,\n};\n\nlet inversionAttempts: 'dontInvert' | 'onlyInvert' | 'attemptBoth' = 'dontInvert';\nlet grayscaleWeights: GrayscaleWeights = {\n    // weights for quick luma integer approximation (https://en.wikipedia.org/wiki/YUV#Full_swing_for_BT.601)\n    red: 77,\n    green: 150,\n    blue: 29,\n    useIntegerApproximation: true,\n};\n\nself.onmessage = event => {\n    const id = event['data']['id'];\n    const type = event['data']['type'];\n    const data = event['data']['data'];\n\n    switch (type) {\n        case 'decode':\n            decode(data, id);\n            break;\n        case 'grayscaleWeights':\n            setGrayscaleWeights(data);\n            break;\n        case 'inversionMode':\n            setInversionMode(data);\n            break;\n        case 'close':\n            // close after earlier messages in the event loop finished processing\n            self.close();\n            break;\n    }\n};\n\nfunction decode(data: { data: Uint8ClampedArray, width: number, height: number }, requestId: number): void {\n    const rgbaData = data['data'];\n    const width = data['width'];\n    const height = data['height'];\n    const result = jsQR(rgbaData, width, height, {\n        inversionAttempts: inversionAttempts,\n        greyScaleWeights: grayscaleWeights,\n    });\n    if (!result) {\n        (self as unknown as Worker).postMessage({\n            id: requestId,\n            type: 'qrResult',\n            data: null,\n        });\n        return;\n    }\n\n    (self as unknown as Worker).postMessage({\n        id: requestId,\n        type: 'qrResult',\n        data: result.data,\n        // equivalent to cornerPoints of native BarcodeDetector\n        cornerPoints: [\n            result.location.topLeftCorner,\n            result.location.topRightCorner,\n            result.location.bottomRightCorner,\n            result.location.bottomLeftCorner,\n        ],\n    });\n}\n\nfunction setGrayscaleWeights(data: GrayscaleWeights) {\n    // update grayscaleWeights in a closure compiler compatible fashion\n    grayscaleWeights.red = data['red'];\n    grayscaleWeights.green = data['green'];\n    grayscaleWeights.blue = data['blue'];\n    grayscaleWeights.useIntegerApproximation = data['useIntegerApproximation'];\n}\n\nfunction setInversionMode(inversionMode: 'original' | 'invert' | 'both') {\n    switch (inversionMode) {\n        case 'original':\n            inversionAttempts = 'dontInvert';\n            break;\n        case 'invert':\n            inversionAttempts = 'onlyInvert';\n            break;\n        case 'both':\n            inversionAttempts = 'attemptBoth';\n            break;\n        default:\n            throw new Error('Invalid inversion mode');\n    }\n}\n", "class QrScanner {\n    static readonly DEFAULT_CANVAS_SIZE = 400;\n    static readonly NO_QR_CODE_FOUND = 'No QR code found';\n    private static _disableBarcodeDetector = false;\n    private static _workerMessageId = 0;\n\n    /** @deprecated */\n    static set WORKER_PATH(workerPath: string) {\n        console.warn('Setting QrScanner.WORKER_PATH is not required and not supported anymore. '\n            + 'Have a look at the README for new setup instructions.');\n    }\n\n    static async hasCamera(): Promise<boolean> {\n        try {\n            return !!(await QrScanner.listCameras(false)).length;\n        } catch (e) {\n            return false;\n        }\n    }\n\n    static async listCameras(requestLabels = false): Promise<Array<QrScanner.Camera>> {\n        if (!navigator.mediaDevices) return [];\n\n        const enumerateCameras = async (): Promise<Array<MediaDeviceInfo>> =>\n            (await navigator.mediaDevices.enumerateDevices()).filter((device) => device.kind === 'videoinput');\n\n        // Note that enumerateDevices can always be called and does not prompt the user for permission.\n        // However, enumerateDevices only includes device labels if served via https and an active media stream exists\n        // or permission to access the camera was given. Therefore, if we're not getting labels but labels are requested\n        // ask for camera permission by opening a stream.\n        let openedStream: MediaStream | undefined;\n        try {\n            if (requestLabels && (await enumerateCameras()).every((camera) => !camera.label)) {\n                openedStream = await navigator.mediaDevices.getUserMedia({ audio: false, video: true });\n            }\n        } catch (e) {\n            // Fail gracefully, especially if the device has no camera or on mobile when the camera is already in use\n            // and some browsers disallow a second stream.\n        }\n\n        try {\n            return (await enumerateCameras()).map((camera, i) => ({\n                id: camera.deviceId,\n                label: camera.label || (i === 0 ? 'Default Camera' : `Camera ${i + 1}`),\n            }));\n        } finally {\n            // close the stream we just opened for getting camera access for listing the device labels\n            if (openedStream) {\n                console.warn('Call listCameras after successfully starting a QR scanner to avoid creating '\n                    + 'a temporary video stream');\n                QrScanner._stopVideoStream(openedStream);\n            }\n        }\n    }\n\n    readonly $video: HTMLVideoElement;\n    readonly $canvas: HTMLCanvasElement;\n    readonly $overlay?: HTMLDivElement;\n    private readonly $codeOutlineHighlight?: SVGSVGElement;\n    private readonly _onDecode?: (result: QrScanner.ScanResult) => void;\n    private readonly _legacyOnDecode?: (result: string) => void;\n    private readonly _legacyCanvasSize: number = QrScanner.DEFAULT_CANVAS_SIZE;\n    private _preferredCamera: QrScanner.FacingMode | QrScanner.DeviceId = 'environment';\n    private readonly _maxScansPerSecond: number = 25;\n    private _lastScanTimestamp: number = -1;\n    private _scanRegion: QrScanner.ScanRegion;\n    private _codeOutlineHighlightRemovalTimeout?: number;\n    private _qrEnginePromise: Promise<Worker | BarcodeDetector>\n    private _active: boolean = false;\n    private _paused: boolean = false;\n    private _flashOn: boolean = false;\n    private _destroyed: boolean = false;\n\n    constructor(\n        video: HTMLVideoElement,\n        onDecode: (result: QrScanner.ScanResult) => void,\n        options: {\n            onDecodeError?: (error: Error | string) => void,\n            calculateScanRegion?: (video: HTMLVideoElement) => QrScanner.ScanRegion,\n            preferredCamera?: QrScanner.FacingMode | QrScanner.DeviceId,\n            maxScansPerSecond?: number;\n            highlightScanRegion?: boolean,\n            highlightCodeOutline?: boolean,\n            overlay?: HTMLDivElement,\n            /** just a temporary flag until we switch entirely to the new api */\n            returnDetailedScanResult?: true,\n        },\n    );\n    /** @deprecated */\n    constructor(\n        video: HTMLVideoElement,\n        onDecode: (result: string) => void,\n        onDecodeError?: (error: Error | string) => void,\n        calculateScanRegion?: (video: HTMLVideoElement) => QrScanner.ScanRegion,\n        preferredCamera?: QrScanner.FacingMode | QrScanner.DeviceId,\n    );\n    /** @deprecated */\n    constructor(\n        video: HTMLVideoElement,\n        onDecode: (result: string) => void,\n        onDecodeError?: (error: Error | string) => void,\n        canvasSize?: number,\n        preferredCamera?: QrScanner.FacingMode | QrScanner.DeviceId,\n    );\n    /** @deprecated */\n    constructor(video: HTMLVideoElement, onDecode: (result: string) => void, canvasSize?: number);\n    constructor(\n        video: HTMLVideoElement,\n        onDecode: ((result: QrScanner.ScanResult) => void) | ((result: string) => void),\n        canvasSizeOrOnDecodeErrorOrOptions?: number | ((error: Error | string) => void) | {\n            onDecodeError?: (error: Error | string) => void,\n            calculateScanRegion?: (video: HTMLVideoElement) => QrScanner.ScanRegion,\n            preferredCamera?: QrScanner.FacingMode | QrScanner.DeviceId,\n            maxScansPerSecond?: number;\n            highlightScanRegion?: boolean,\n            highlightCodeOutline?: boolean,\n            overlay?: HTMLDivElement,\n            /** just a temporary flag until we switch entirely to the new api */\n            returnDetailedScanResult?: true,\n        },\n        canvasSizeOrCalculateScanRegion?: number | ((video: HTMLVideoElement) => QrScanner.ScanRegion),\n        preferredCamera?: QrScanner.FacingMode | QrScanner.DeviceId,\n    ) {\n        this.$video = video;\n        this.$canvas = document.createElement('canvas');\n\n        if (canvasSizeOrOnDecodeErrorOrOptions && typeof canvasSizeOrOnDecodeErrorOrOptions === 'object') {\n            // we got an options object using the new api\n            this._onDecode = onDecode as QrScanner['_onDecode'];\n        } else {\n            if (canvasSizeOrOnDecodeErrorOrOptions || canvasSizeOrCalculateScanRegion || preferredCamera) {\n                console.warn('You\\'re using a deprecated version of the QrScanner constructor which will be removed in '\n                    + 'the future');\n            } else {\n                // Only video and onDecode were specified and we can't distinguish between new or old api usage. For\n                // backwards compatibility we have to assume the old api for now. The options object is marked as non-\n                // optional in the parameter list above to make clear that ScanResult instead of string is only passed\n                // if an options object was provided. However, in the future once legacy support is removed, the options\n                // object should become optional.\n                console.warn('Note that the type of the scan result passed to onDecode will change in the future. '\n                    + 'To already switch to the new api today, you can pass returnDetailedScanResult: true.');\n            }\n            this._legacyOnDecode = onDecode as QrScanner['_legacyOnDecode'];\n        }\n\n        const options = typeof canvasSizeOrOnDecodeErrorOrOptions === 'object'\n            ? canvasSizeOrOnDecodeErrorOrOptions\n            : {};\n        this._onDecodeError = options.onDecodeError || (typeof canvasSizeOrOnDecodeErrorOrOptions === 'function'\n            ? canvasSizeOrOnDecodeErrorOrOptions\n            : this._onDecodeError);\n        this._calculateScanRegion = options.calculateScanRegion || (typeof canvasSizeOrCalculateScanRegion==='function'\n            ? canvasSizeOrCalculateScanRegion\n            : this._calculateScanRegion);\n        this._preferredCamera = options.preferredCamera || preferredCamera || this._preferredCamera;\n        this._legacyCanvasSize = typeof canvasSizeOrOnDecodeErrorOrOptions === 'number'\n            ? canvasSizeOrOnDecodeErrorOrOptions\n            : typeof canvasSizeOrCalculateScanRegion === 'number'\n                ? canvasSizeOrCalculateScanRegion\n                : this._legacyCanvasSize;\n        this._maxScansPerSecond = options.maxScansPerSecond || this._maxScansPerSecond;\n\n        this._onPlay = this._onPlay.bind(this);\n        this._onLoadedMetaData = this._onLoadedMetaData.bind(this);\n        this._onVisibilityChange = this._onVisibilityChange.bind(this);\n        this._updateOverlay = this._updateOverlay.bind(this);\n\n        // @ts-ignore\n        video.disablePictureInPicture = true;\n        // Allow inline playback on iPhone instead of requiring full screen playback,\n        // see https://webkit.org/blog/6784/new-video-policies-for-ios/\n        // @ts-ignore\n        video.playsInline = true;\n        // Allow play() on iPhone without requiring a user gesture. Should not really be needed as camera stream\n        // includes no audio, but just to be safe.\n        video.muted = true;\n\n        // Avoid Safari stopping the video stream on a hidden video.\n        // See https://github.com/cozmo/jsQR/issues/185\n        let shouldHideVideo = false;\n        if (video.hidden) {\n            video.hidden = false;\n            shouldHideVideo = true;\n        }\n        if (!document.body.contains(video)) {\n            document.body.appendChild(video);\n            shouldHideVideo = true;\n        }\n        const videoContainer = video.parentElement!;\n\n        if (options.highlightScanRegion || options.highlightCodeOutline) {\n            const gotExternalOverlay = !!options.overlay;\n            this.$overlay = options.overlay || document.createElement('div');\n            const overlayStyle = this.$overlay.style;\n            overlayStyle.position = 'absolute';\n            overlayStyle.display = 'none';\n            overlayStyle.pointerEvents = 'none';\n            this.$overlay.classList.add('scan-region-highlight');\n            if (!gotExternalOverlay && options.highlightScanRegion) {\n                // default style; can be overwritten via css, e.g. by changing the svg's stroke color, hiding the\n                // .scan-region-highlight-svg, setting a border, outline, background, etc.\n                this.$overlay.innerHTML = '<svg class=\"scan-region-highlight-svg\" viewBox=\"0 0 238 238\" '\n                    + 'preserveAspectRatio=\"none\" style=\"position:absolute;width:100%;height:100%;left:0;top:0;'\n                    + 'fill:none;stroke:#e9b213;stroke-width:4;stroke-linecap:round;stroke-linejoin:round\">'\n                    + '<path d=\"M31 2H10a8 8 0 0 0-8 8v21M207 2h21a8 8 0 0 1 8 8v21m0 176v21a8 8 0 0 1-8 8h-21m-176 '\n                    + '0H10a8 8 0 0 1-8-8v-21\"/></svg>';\n                try {\n                    this.$overlay.firstElementChild!.animate({ transform: ['scale(.98)', 'scale(1.01)'] }, {\n                        duration: 400,\n                        iterations: Infinity,\n                        direction: 'alternate',\n                        easing: 'ease-in-out',\n                    });\n                } catch (e) {}\n                videoContainer.insertBefore(this.$overlay, this.$video.nextSibling);\n            }\n            if (options.highlightCodeOutline) {\n                // default style; can be overwritten via css\n                this.$overlay.insertAdjacentHTML(\n                    'beforeend',\n                    '<svg class=\"code-outline-highlight\" preserveAspectRatio=\"none\" style=\"display:none;width:100%;'\n                        + 'height:100%;fill:none;stroke:#e9b213;stroke-width:5;stroke-dasharray:25;'\n                        + 'stroke-linecap:round;stroke-linejoin:round\"><polygon/></svg>',\n                );\n                this.$codeOutlineHighlight = this.$overlay.lastElementChild as SVGSVGElement;\n            }\n        }\n        this._scanRegion = this._calculateScanRegion(video);\n\n        requestAnimationFrame(() => {\n            // Checking in requestAnimationFrame which should avoid a potential additional re-flow for getComputedStyle.\n            const videoStyle = window.getComputedStyle(video);\n            if (videoStyle.display === 'none') {\n                video.style.setProperty('display', 'block', 'important');\n                shouldHideVideo = true;\n            }\n            if (videoStyle.visibility !== 'visible') {\n                video.style.setProperty('visibility', 'visible', 'important');\n                shouldHideVideo = true;\n            }\n            if (shouldHideVideo) {\n                // Hide the video in a way that doesn't cause Safari to stop the playback.\n                console.warn('QrScanner has overwritten the video hiding style to avoid Safari stopping the playback.');\n                video.style.opacity = '0';\n                video.style.width = '0';\n                video.style.height = '0';\n                if (this.$overlay && this.$overlay.parentElement) {\n                    this.$overlay.parentElement.removeChild(this.$overlay);\n                }\n                // @ts-ignore\n                delete this.$overlay!;\n                // @ts-ignore\n                delete this.$codeOutlineHighlight!;\n            }\n\n            if (this.$overlay) {\n                this._updateOverlay();\n            }\n        });\n\n        video.addEventListener('play', this._onPlay);\n        video.addEventListener('loadedmetadata', this._onLoadedMetaData);\n        document.addEventListener('visibilitychange', this._onVisibilityChange);\n        window.addEventListener('resize', this._updateOverlay);\n\n        this._qrEnginePromise = QrScanner.createQrEngine();\n    }\n\n    async hasFlash(): Promise<boolean> {\n        let stream: MediaStream | undefined;\n        try {\n            if (this.$video.srcObject) {\n                if (!(this.$video.srcObject instanceof MediaStream)) return false; // srcObject is not a camera stream\n                stream = this.$video.srcObject;\n            } else {\n                stream = (await this._getCameraStream()).stream;\n            }\n            return 'torch' in stream.getVideoTracks()[0].getSettings();\n        } catch (e) {\n            return false;\n        } finally {\n            // close the stream we just opened for detecting whether it supports flash\n            if (stream && stream !== this.$video.srcObject) {\n                console.warn('Call hasFlash after successfully starting the scanner to avoid creating '\n                    + 'a temporary video stream');\n                QrScanner._stopVideoStream(stream);\n            }\n        }\n    }\n\n    isFlashOn(): boolean {\n        return this._flashOn;\n    }\n\n    async toggleFlash(): Promise<void> {\n        if (this._flashOn) {\n            await this.turnFlashOff();\n        } else {\n            await this.turnFlashOn();\n        }\n    }\n\n    async turnFlashOn(): Promise<void> {\n        if (this._flashOn || this._destroyed) return;\n        this._flashOn = true;\n        if (!this._active || this._paused) return; // flash will be turned on later on .start()\n        try {\n            if (!await this.hasFlash()) throw 'No flash available';\n            // Note that the video track is guaranteed to exist and to be a MediaStream due to the check in hasFlash\n            await (this.$video.srcObject as MediaStream).getVideoTracks()[0].applyConstraints({\n                // @ts-ignore: constraint 'torch' is unknown to ts\n                advanced: [{ torch: true }],\n            });\n        } catch (e) {\n            this._flashOn = false;\n            throw e;\n        }\n    }\n\n    async turnFlashOff(): Promise<void> {\n        if (!this._flashOn) return;\n        // applyConstraints with torch: false does not work to turn the flashlight off, as a stream's torch stays\n        // continuously on, see https://developer.mozilla.org/en-US/docs/Web/API/MediaTrackConstraints#torch. Therefore,\n        // we have to stop the stream to turn the flashlight off.\n        this._flashOn = false;\n        await this._restartVideoStream();\n    }\n\n    destroy(): void {\n        this.$video.removeEventListener('loadedmetadata', this._onLoadedMetaData);\n        this.$video.removeEventListener('play', this._onPlay);\n        document.removeEventListener('visibilitychange', this._onVisibilityChange);\n        window.removeEventListener('resize', this._updateOverlay);\n\n        this._destroyed = true;\n        this._flashOn = false;\n        this.stop(); // sets this._paused = true and this._active = false\n        QrScanner._postWorkerMessage(this._qrEnginePromise, 'close');\n    }\n\n    async start(): Promise<void> {\n        if (this._destroyed) throw new Error('The QR scanner can not be started as it had been destroyed.');\n        if (this._active && !this._paused) return;\n\n        if (window.location.protocol !== 'https:') {\n            // warn but try starting the camera anyways\n            console.warn('The camera stream is only accessible if the page is transferred via https.');\n        }\n\n        this._active = true;\n        if (document.hidden) return; // camera will be started as soon as tab is in foreground\n        this._paused = false;\n        if (this.$video.srcObject) {\n            // camera stream already/still set\n            await this.$video.play();\n            return;\n        }\n\n        try {\n            const { stream, facingMode } = await this._getCameraStream();\n            if (!this._active || this._paused) {\n                // was stopped in the meantime\n                QrScanner._stopVideoStream(stream);\n                return;\n            }\n            this._setVideoMirror(facingMode);\n            this.$video.srcObject = stream;\n            await this.$video.play();\n\n            // Restart the flash if it was previously on\n            if (this._flashOn) {\n                this._flashOn = false; // force turnFlashOn to restart the flash\n                this.turnFlashOn().catch(() => {});\n            }\n        } catch (e) {\n            if (this._paused) return;\n            this._active = false;\n            throw e;\n        }\n    }\n\n    stop(): void {\n        this.pause();\n        this._active = false;\n    }\n\n    async pause(stopStreamImmediately = false): Promise<boolean> {\n        this._paused = true;\n        if (!this._active) return true;\n        this.$video.pause();\n\n        if (this.$overlay) {\n            this.$overlay.style.display = 'none';\n        }\n\n        const stopStream = () => {\n            if (this.$video.srcObject instanceof MediaStream) {\n                // revoke srcObject only if it's a stream which was likely set by us\n                QrScanner._stopVideoStream(this.$video.srcObject);\n                this.$video.srcObject = null;\n            }\n        };\n\n        if (stopStreamImmediately) {\n            stopStream();\n            return true;\n        }\n\n        await new Promise((resolve) => setTimeout(resolve, 300));\n        if (!this._paused) return false;\n        stopStream();\n        return true;\n    }\n\n    async setCamera(facingModeOrDeviceId: QrScanner.FacingMode | QrScanner.DeviceId): Promise<void> {\n        if (facingModeOrDeviceId === this._preferredCamera) return;\n        this._preferredCamera = facingModeOrDeviceId;\n        // Restart the scanner with the new camera which will also update the video mirror and the scan region.\n        await this._restartVideoStream();\n    }\n\n    static async scanImage(\n        imageOrFileOrBlobOrUrl: HTMLImageElement | HTMLVideoElement | HTMLCanvasElement | OffscreenCanvas | ImageBitmap\n            | SVGImageElement | File | Blob | URL | String,\n        options: {\n            scanRegion?: QrScanner.ScanRegion | null,\n            qrEngine?: Worker | BarcodeDetector | Promise<Worker | BarcodeDetector> | null,\n            canvas?: HTMLCanvasElement | null,\n            disallowCanvasResizing?: boolean,\n            alsoTryWithoutScanRegion?: boolean,\n            /** just a temporary flag until we switch entirely to the new api */\n            returnDetailedScanResult?: true,\n        },\n    ): Promise<QrScanner.ScanResult>;\n    /** @deprecated */\n    static async scanImage(\n        imageOrFileOrBlobOrUrl: HTMLImageElement | HTMLVideoElement | HTMLCanvasElement | OffscreenCanvas | ImageBitmap\n            | SVGImageElement | File | Blob | URL | String,\n        scanRegion?: QrScanner.ScanRegion | null,\n        qrEngine?: Worker | BarcodeDetector | Promise<Worker | BarcodeDetector> | null,\n        canvas?: HTMLCanvasElement | null,\n        disallowCanvasResizing?: boolean,\n        alsoTryWithoutScanRegion?: boolean,\n    ): Promise<string>;\n    static async scanImage(\n        imageOrFileOrBlobOrUrl: HTMLImageElement | HTMLVideoElement | HTMLCanvasElement | OffscreenCanvas | ImageBitmap\n            | SVGImageElement | File | Blob | URL | String,\n        scanRegionOrOptions?: QrScanner.ScanRegion | {\n            scanRegion?: QrScanner.ScanRegion | null,\n            qrEngine?: Worker | BarcodeDetector | Promise<Worker | BarcodeDetector> | null,\n            canvas?: HTMLCanvasElement | null,\n            disallowCanvasResizing?: boolean,\n            alsoTryWithoutScanRegion?: boolean,\n            /** just a temporary flag until we switch entirely to the new api */\n            returnDetailedScanResult?: true,\n        } | null,\n        qrEngine?: Worker | BarcodeDetector | Promise<Worker | BarcodeDetector> | null,\n        canvas?: HTMLCanvasElement | null,\n        disallowCanvasResizing: boolean = false,\n        alsoTryWithoutScanRegion: boolean = false,\n    ): Promise<string | QrScanner.ScanResult> {\n        let scanRegion: QrScanner.ScanRegion | null | undefined;\n        let returnDetailedScanResult = false;\n        if (scanRegionOrOptions && (\n            'scanRegion' in scanRegionOrOptions\n            || 'qrEngine' in scanRegionOrOptions\n            || 'canvas' in scanRegionOrOptions\n            || 'disallowCanvasResizing' in scanRegionOrOptions\n            || 'alsoTryWithoutScanRegion' in scanRegionOrOptions\n            || 'returnDetailedScanResult' in scanRegionOrOptions\n        )) {\n            // we got an options object using the new api\n            scanRegion = scanRegionOrOptions.scanRegion;\n            qrEngine = scanRegionOrOptions.qrEngine;\n            canvas = scanRegionOrOptions.canvas;\n            disallowCanvasResizing = scanRegionOrOptions.disallowCanvasResizing || false;\n            alsoTryWithoutScanRegion = scanRegionOrOptions.alsoTryWithoutScanRegion || false;\n            returnDetailedScanResult = true;\n        } else if (scanRegionOrOptions || qrEngine || canvas || disallowCanvasResizing || alsoTryWithoutScanRegion) {\n            console.warn('You\\'re using a deprecated api for scanImage which will be removed in the future.');\n        } else {\n            // Only imageOrFileOrBlobOrUrl was specified and we can't distinguish between new or old api usage. For\n            // backwards compatibility we have to assume the old api for now. The options object is marked as non-\n            // optional in the parameter list above to make clear that ScanResult instead of string is only returned if\n            // an options object was provided. However, in the future once legacy support is removed, the options object\n            // should become optional.\n            console.warn('Note that the return type of scanImage will change in the future. To already switch to the '\n                + 'new api today, you can pass returnDetailedScanResult: true.');\n        }\n\n        const gotExternalEngine = !!qrEngine;\n\n        try {\n            let image: HTMLImageElement | HTMLVideoElement | HTMLCanvasElement | OffscreenCanvas | ImageBitmap\n                | SVGImageElement;\n            let canvasContext: CanvasRenderingContext2D;\n            [qrEngine, image] = await Promise.all([\n                qrEngine || QrScanner.createQrEngine(),\n                QrScanner._loadImage(imageOrFileOrBlobOrUrl),\n            ]);\n            [canvas, canvasContext] = QrScanner._drawToCanvas(image, scanRegion, canvas, disallowCanvasResizing);\n            let detailedScanResult: QrScanner.ScanResult;\n\n            if (qrEngine instanceof Worker) {\n                const qrEngineWorker = qrEngine; // for ts to know that it's still a worker later in the event listeners\n                if (!gotExternalEngine) {\n                    // Enable scanning of inverted color qr codes.\n                    QrScanner._postWorkerMessageSync(qrEngineWorker, 'inversionMode', 'both');\n                }\n                detailedScanResult = await new Promise((resolve, reject) => {\n                    let timeout: number;\n                    let onMessage: (event: MessageEvent) => void;\n                    let onError: (error: ErrorEvent | string) => void;\n                    let expectedResponseId = -1;\n                    onMessage = (event: MessageEvent) => {\n                        if (event.data.id !== expectedResponseId) {\n                            return;\n                        }\n                        qrEngineWorker.removeEventListener('message', onMessage);\n                        qrEngineWorker.removeEventListener('error', onError);\n                        clearTimeout(timeout);\n                        if (event.data.data !== null) {\n                            resolve({\n                                data: event.data.data,\n                                cornerPoints: QrScanner._convertPoints(event.data.cornerPoints, scanRegion),\n                            });\n                        } else {\n                            reject(QrScanner.NO_QR_CODE_FOUND);\n                        }\n                    };\n                    onError = (error: ErrorEvent | string) => {\n                        qrEngineWorker.removeEventListener('message', onMessage);\n                        qrEngineWorker.removeEventListener('error', onError);\n                        clearTimeout(timeout);\n                        const errorMessage = !error ? 'Unknown Error' : ((error as ErrorEvent).message || error);\n                        reject('Scanner error: ' + errorMessage);\n                    };\n                    qrEngineWorker.addEventListener('message', onMessage);\n                    qrEngineWorker.addEventListener('error', onError);\n                    timeout = setTimeout(() => onError('timeout'), 10000);\n                    const imageData = canvasContext.getImageData(0, 0, canvas!.width, canvas!.height);\n                    expectedResponseId = QrScanner._postWorkerMessageSync(\n                        qrEngineWorker,\n                        'decode',\n                        imageData,\n                        [imageData.data.buffer],\n                    );\n                });\n            } else {\n                detailedScanResult = await Promise.race([\n                    new Promise<QrScanner.ScanResult>((resolve, reject) => window.setTimeout(\n                        () => reject('Scanner error: timeout'),\n                        10000,\n                    )),\n                    (async (): Promise<QrScanner.ScanResult> => {\n                        try {\n                            const [scanResult] = await qrEngine.detect(canvas!);\n                            if (!scanResult) throw QrScanner.NO_QR_CODE_FOUND;\n                            return {\n                                data: scanResult.rawValue,\n                                cornerPoints: QrScanner._convertPoints(scanResult.cornerPoints, scanRegion),\n                            };\n                        } catch (e) {\n                            const errorMessage = (e as Error).message || e as string;\n                            if (/not implemented|service unavailable/.test(errorMessage)) {\n                                // Not implemented can apparently for some reason happen even though getSupportedFormats\n                                // in createQrScanner reported that it's supported, see issue #98.\n                                // Service unavailable can happen after some time when the BarcodeDetector crashed and\n                                // can theoretically be recovered from by creating a new BarcodeDetector. However, in\n                                // newer browsers this issue does not seem to be present anymore and therefore we do not\n                                // apply this optimization anymore but just set _disableBarcodeDetector in both cases.\n                                // Also note that if we got an external qrEngine that crashed, we should possibly notify\n                                // the caller about it, but we also don't do this here, as it's such an unlikely case.\n                                QrScanner._disableBarcodeDetector = true;\n                                // retry without passing the broken BarcodeScanner instance\n                                return QrScanner.scanImage(imageOrFileOrBlobOrUrl, {\n                                    scanRegion,\n                                    canvas,\n                                    disallowCanvasResizing,\n                                    alsoTryWithoutScanRegion,\n                                });\n                            }\n                            throw `Scanner error: ${errorMessage}`;\n                        }\n                    })(),\n                ]);\n            }\n            return returnDetailedScanResult ? detailedScanResult : detailedScanResult.data;\n        } catch (e) {\n            if (!scanRegion || !alsoTryWithoutScanRegion) throw e;\n            const detailedScanResult = await QrScanner.scanImage(\n                imageOrFileOrBlobOrUrl,\n                { qrEngine, canvas, disallowCanvasResizing },\n            );\n            return returnDetailedScanResult ? detailedScanResult : detailedScanResult.data;\n        } finally {\n            if (!gotExternalEngine) {\n                QrScanner._postWorkerMessage(qrEngine!, 'close');\n            }\n        }\n    }\n\n    setGrayscaleWeights(red: number, green: number, blue: number, useIntegerApproximation: boolean = true): void {\n        // Note that for the native BarcodeDecoder or if the worker was destroyed, this is a no-op. However, the native\n        // implementations work also well with colored qr codes.\n        QrScanner._postWorkerMessage(\n            this._qrEnginePromise,\n            'grayscaleWeights',\n            { red, green, blue, useIntegerApproximation }\n        );\n    }\n\n    setInversionMode(inversionMode: QrScanner.InversionMode): void {\n        // Note that for the native BarcodeDecoder or if the worker was destroyed, this is a no-op. However, the native\n        // implementations scan normal and inverted qr codes by default\n        QrScanner._postWorkerMessage(this._qrEnginePromise, 'inversionMode', inversionMode);\n    }\n\n    static async createQrEngine(): Promise<Worker | BarcodeDetector>;\n    /** @deprecated */\n    static async createQrEngine(workerPath: string): Promise<Worker | BarcodeDetector>;\n    static async createQrEngine(workerPath?: string): Promise<Worker | BarcodeDetector> {\n        if (workerPath) {\n            console.warn('Specifying a worker path is not required and not supported anymore.');\n        }\n\n        // @ts-ignore no types defined for import\n        const createWorker = () => (import('./qr-scanner-worker.min.js') as Promise<{ createWorker: () => Worker }>)\n            .then((module) => module.createWorker());\n\n        const useBarcodeDetector = !QrScanner._disableBarcodeDetector\n            && 'BarcodeDetector' in window\n            && BarcodeDetector.getSupportedFormats\n            && (await BarcodeDetector.getSupportedFormats()).includes('qr_code');\n\n        if (!useBarcodeDetector) return createWorker();\n\n        // On Macs with an M1/M2 processor and macOS Ventura (macOS version 13), the BarcodeDetector is broken in\n        // Chromium based browsers, regardless of the version. For that constellation, the BarcodeDetector does not\n        // error but does not detect QR codes. Macs without an M1/M2 or before Ventura are fine.\n        // See issue #209 and https://bugs.chromium.org/p/chromium/issues/detail?id=1382442\n        // TODO update this once the issue in macOS is fixed\n        const userAgentData = navigator.userAgentData;\n        const isChromiumOnMacWithArmVentura = userAgentData // all Chromium browsers support userAgentData\n            && userAgentData.brands.some(({ brand }) => /Chromium/i.test(brand))\n            && /mac ?OS/i.test(userAgentData.platform)\n            // Does it have an ARM chip (e.g. M1/M2) and Ventura? Check this last as getHighEntropyValues can\n            // theoretically trigger a browser prompt, although no browser currently does seem to show one.\n            // If browser or user refused to return the requested values, assume broken ARM Ventura, to be safe.\n            && await userAgentData.getHighEntropyValues(['architecture', 'platformVersion'])\n                .then(({ architecture, platformVersion }) =>\n                    /arm/i.test(architecture || 'arm') && parseInt(platformVersion || '13') >= /* Ventura */ 13)\n                .catch(() => true);\n        if (isChromiumOnMacWithArmVentura) return createWorker();\n\n        return new BarcodeDetector({ formats: ['qr_code'] });\n    }\n\n    private _onPlay(): void {\n        this._scanRegion = this._calculateScanRegion(this.$video);\n        this._updateOverlay();\n        if (this.$overlay) {\n            this.$overlay.style.display = '';\n        }\n        this._scanFrame();\n    }\n\n    private _onLoadedMetaData(): void {\n        this._scanRegion = this._calculateScanRegion(this.$video);\n        this._updateOverlay();\n    }\n\n    private _onVisibilityChange(): void {\n        if (document.hidden) {\n            this.pause();\n        } else if (this._active) {\n            this.start();\n        }\n    }\n\n    private _calculateScanRegion(video: HTMLVideoElement): QrScanner.ScanRegion {\n        // Default scan region calculation. Note that this can be overwritten in the constructor.\n        const smallestDimension = Math.min(video.videoWidth, video.videoHeight);\n        const scanRegionSize = Math.round(2 / 3 * smallestDimension);\n        return {\n            x: Math.round((video.videoWidth - scanRegionSize) / 2),\n            y: Math.round((video.videoHeight - scanRegionSize) / 2),\n            width: scanRegionSize,\n            height: scanRegionSize,\n            downScaledWidth: this._legacyCanvasSize,\n            downScaledHeight: this._legacyCanvasSize,\n        };\n    }\n\n    private _updateOverlay(): void {\n        requestAnimationFrame(() => {\n            // Running in requestAnimationFrame which should avoid a potential additional re-flow for getComputedStyle\n            // and offsetWidth, offsetHeight, offsetLeft, offsetTop.\n            if (!this.$overlay) return;\n            const video = this.$video;\n            const videoWidth = video.videoWidth;\n            const videoHeight = video.videoHeight;\n            const elementWidth = video.offsetWidth;\n            const elementHeight = video.offsetHeight;\n            const elementX = video.offsetLeft;\n            const elementY = video.offsetTop;\n\n            const videoStyle = window.getComputedStyle(video);\n            const videoObjectFit = videoStyle.objectFit;\n            const videoAspectRatio = videoWidth / videoHeight;\n            const elementAspectRatio = elementWidth / elementHeight;\n            let videoScaledWidth: number;\n            let videoScaledHeight: number;\n            switch (videoObjectFit) {\n                case 'none':\n                    videoScaledWidth = videoWidth;\n                    videoScaledHeight = videoHeight;\n                    break;\n                case 'fill':\n                    videoScaledWidth = elementWidth;\n                    videoScaledHeight = elementHeight;\n                    break;\n                default: // 'cover', 'contains', 'scale-down'\n                    if (videoObjectFit === 'cover'\n                        ? videoAspectRatio > elementAspectRatio\n                        : videoAspectRatio < elementAspectRatio) {\n                        // The scaled height is the element height\n                        // - for 'cover' if the video aspect ratio is wider than the element aspect ratio\n                        //   (scaled height matches element height and scaled width overflows element width)\n                        // - for 'contains'/'scale-down' if element aspect ratio is wider than the video aspect ratio\n                        //   (scaled height matched element height and element width overflows scaled width)\n                        videoScaledHeight = elementHeight;\n                        videoScaledWidth = videoScaledHeight * videoAspectRatio;\n                    } else {\n                        videoScaledWidth = elementWidth;\n                        videoScaledHeight = videoScaledWidth / videoAspectRatio;\n                    }\n                    if (videoObjectFit === 'scale-down') {\n                        // for 'scale-down' the dimensions are the minimum of 'contains' and 'none'\n                        videoScaledWidth = Math.min(videoScaledWidth, videoWidth);\n                        videoScaledHeight = Math.min(videoScaledHeight, videoHeight);\n                    }\n            }\n\n            // getComputedStyle is so nice to convert keywords (left, center, right, top, bottom) to percent and makes\n            // sure to set the default of 50% if only one or no component was provided, therefore we can be sure that\n            // both components are set. Additionally, it converts units other than px (e.g. rem) to px.\n            const [videoX, videoY] = videoStyle.objectPosition.split(' ').map((length, i) => {\n                const lengthValue = parseFloat(length);\n                return length.endsWith('%')\n                    ? (!i ? elementWidth - videoScaledWidth : elementHeight - videoScaledHeight) * lengthValue / 100\n                    : lengthValue;\n            });\n\n            const regionWidth = this._scanRegion.width || videoWidth;\n            const regionHeight = this._scanRegion.height || videoHeight;\n            const regionX = this._scanRegion.x || 0;\n            const regionY = this._scanRegion.y || 0;\n\n            const overlayStyle = this.$overlay.style;\n            overlayStyle.width = `${regionWidth / videoWidth * videoScaledWidth}px`;\n            overlayStyle.height = `${regionHeight / videoHeight * videoScaledHeight}px`;\n            overlayStyle.top = `${elementY + videoY + regionY / videoHeight * videoScaledHeight}px`;\n            const isVideoMirrored = /scaleX\\(-1\\)/.test(video.style.transform!);\n            overlayStyle.left = `${elementX\n                + (isVideoMirrored ? elementWidth - videoX - videoScaledWidth : videoX)\n                + (isVideoMirrored ? videoWidth - regionX - regionWidth : regionX) / videoWidth * videoScaledWidth}px`;\n            // apply same mirror as on video\n            overlayStyle.transform = video.style.transform;\n        });\n    }\n\n    private static _convertPoints(\n        points: QrScanner.Point[],\n        scanRegion?: QrScanner.ScanRegion | null,\n    ): QrScanner.Point[] {\n        if (!scanRegion) return points;\n        const offsetX = scanRegion.x || 0;\n        const offsetY = scanRegion.y || 0;\n        const scaleFactorX = scanRegion.width && scanRegion.downScaledWidth\n            ? scanRegion.width / scanRegion.downScaledWidth\n            : 1;\n        const scaleFactorY = scanRegion.height && scanRegion.downScaledHeight\n            ? scanRegion.height / scanRegion.downScaledHeight\n            : 1;\n        for (const point of points) {\n            point.x = point.x * scaleFactorX + offsetX;\n            point.y = point.y * scaleFactorY + offsetY;\n        }\n        return points;\n    }\n\n    private _scanFrame(): void {\n        if (!this._active || this.$video.paused || this.$video.ended) return;\n        // If requestVideoFrameCallback is available use that to avoid unnecessary scans on the same frame as the\n        // camera's framerate can be lower than the screen refresh rate and this._maxScansPerSecond, especially in dark\n        // settings where the exposure time is longer. Both, requestVideoFrameCallback and requestAnimationFrame are not\n        // being fired if the tab is in the background, which is what we want.\n        const requestFrame = 'requestVideoFrameCallback' in this.$video\n            // @ts-ignore\n            ? this.$video.requestVideoFrameCallback.bind(this.$video)\n            : requestAnimationFrame;\n        requestFrame(async () => {\n            if (this.$video.readyState <= 1) {\n                // Skip scans until the video is ready as drawImage() only works correctly on a video with readyState\n                // > 1, see https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/drawImage#Notes.\n                // This also avoids false positives for videos paused after a successful scan which remains visible on\n                // the canvas until the video is started again and ready.\n                this._scanFrame();\n                return;\n            }\n\n            const timeSinceLastScan = Date.now() - this._lastScanTimestamp;\n            const minimumTimeBetweenScans = 1000 / this._maxScansPerSecond;\n            if (timeSinceLastScan < minimumTimeBetweenScans) {\n                await new Promise((resolve) => setTimeout(resolve, minimumTimeBetweenScans - timeSinceLastScan));\n            }\n            // console.log('Scan rate:', Math.round(1000 / (Date.now() - this._lastScanTimestamp)));\n            this._lastScanTimestamp = Date.now();\n\n            let result: QrScanner.ScanResult | undefined;\n            try {\n                result = await QrScanner.scanImage(this.$video, {\n                    scanRegion: this._scanRegion,\n                    qrEngine: this._qrEnginePromise,\n                    canvas: this.$canvas,\n                });\n            } catch (error) {\n                if (!this._active) return;\n                this._onDecodeError(error as Error | string);\n            }\n\n            if (QrScanner._disableBarcodeDetector && !(await this._qrEnginePromise instanceof Worker)) {\n                // replace the disabled BarcodeDetector\n                this._qrEnginePromise = QrScanner.createQrEngine();\n            }\n\n            if (result) {\n                if (this._onDecode) {\n                    this._onDecode(result);\n                } else if (this._legacyOnDecode) {\n                    this._legacyOnDecode(result.data);\n                }\n\n                if (this.$codeOutlineHighlight) {\n                    clearTimeout(this._codeOutlineHighlightRemovalTimeout);\n                    this._codeOutlineHighlightRemovalTimeout = undefined;\n                    this.$codeOutlineHighlight.setAttribute(\n                        'viewBox',\n                        `${this._scanRegion.x || 0} `\n                            + `${this._scanRegion.y || 0} `\n                            + `${this._scanRegion.width || this.$video.videoWidth} `\n                            + `${this._scanRegion.height || this.$video.videoHeight}`,\n                    );\n                    const polygon = this.$codeOutlineHighlight.firstElementChild!;\n                    polygon.setAttribute('points', result.cornerPoints.map(({x, y}) => `${x},${y}`).join(' '));\n                    this.$codeOutlineHighlight.style.display = '';\n                }\n            } else if (this.$codeOutlineHighlight && !this._codeOutlineHighlightRemovalTimeout) {\n                // hide after timeout to make it flash less when on some frames the QR code is detected and on some not\n                this._codeOutlineHighlightRemovalTimeout = setTimeout(\n                    () => this.$codeOutlineHighlight!.style.display = 'none',\n                    100,\n                );\n            }\n\n            this._scanFrame();\n        });\n    }\n\n    private _onDecodeError(error: Error | string): void {\n        // default error handler; can be overwritten in the constructor\n        if (error === QrScanner.NO_QR_CODE_FOUND) return;\n        console.log(error);\n    }\n\n    private async _getCameraStream(): Promise<{ stream: MediaStream, facingMode: QrScanner.FacingMode }> {\n        if (!navigator.mediaDevices) throw 'Camera not found.';\n\n        const preferenceType = /^(environment|user)$/.test(this._preferredCamera)\n            ? 'facingMode'\n            : 'deviceId';\n        const constraintsWithoutCamera: Array<MediaTrackConstraints> = [{\n            width: { min: 1024 }\n        }, {\n            width: { min: 768 }\n        }, {}];\n        const constraintsWithCamera = constraintsWithoutCamera.map((constraint) => Object.assign({}, constraint, {\n            [preferenceType]: { exact: this._preferredCamera },\n        }));\n\n        for (const constraints of [...constraintsWithCamera, ...constraintsWithoutCamera]) {\n            try {\n                const stream = await navigator.mediaDevices.getUserMedia({ video: constraints, audio: false });\n                // Try to determine the facing mode from the stream, otherwise use a guess or 'environment' as\n                // default. Note that the guess is not always accurate as Safari returns cameras of different facing\n                // mode, even for exact facingMode constraints.\n                const facingMode = this._getFacingMode(stream)\n                    || (constraints.facingMode\n                        ? this._preferredCamera as QrScanner.FacingMode // a facing mode we were able to fulfill\n                        : (this._preferredCamera === 'environment'\n                            ? 'user' // switch as _preferredCamera was environment but we are not able to fulfill it\n                            : 'environment' // switch from unfulfilled user facingMode or default to environment\n                        )\n                    );\n                return { stream, facingMode };\n            } catch (e) {}\n        }\n\n        throw 'Camera not found.';\n    }\n\n    private async _restartVideoStream(): Promise<void> {\n        // Note that we always pause the stream and not only if !this._paused as even if this._paused === true, the\n        // stream might still be running, as it's by default only stopped after a delay of 300ms.\n        const wasPaused = this._paused;\n        const paused = await this.pause(true);\n        if (!paused || wasPaused || !this._active) return;\n        await this.start();\n    }\n\n    private static _stopVideoStream(stream : MediaStream): void {\n        for (const track of stream.getTracks()) {\n            track.stop(); //  note that this will also automatically turn the flashlight off\n            stream.removeTrack(track);\n        }\n    }\n\n    private _setVideoMirror(facingMode: QrScanner.FacingMode): void {\n        // in user facing mode mirror the video to make it easier for the user to position the QR code\n        const scaleFactor = facingMode === 'user'? -1 : 1;\n        this.$video.style.transform = 'scaleX(' + scaleFactor + ')';\n    }\n\n    private _getFacingMode(videoStream: MediaStream): QrScanner.FacingMode | null {\n        const videoTrack = videoStream.getVideoTracks()[0];\n        if (!videoTrack) return null; // unknown\n        // inspired by https://github.com/JodusNodus/react-qr-reader/blob/master/src/getDeviceId.js#L13\n        return /rear|back|environment/i.test(videoTrack.label)\n            ? 'environment'\n            : /front|user|face/i.test(videoTrack.label)\n                ? 'user'\n                : null; // unknown\n    }\n\n    private static _drawToCanvas(\n        image: HTMLImageElement | HTMLVideoElement | HTMLCanvasElement | OffscreenCanvas | ImageBitmap\n            | SVGImageElement,\n        scanRegion?: QrScanner.ScanRegion | null,\n        canvas?: HTMLCanvasElement | null,\n        disallowCanvasResizing= false,\n    ): [HTMLCanvasElement, CanvasRenderingContext2D] {\n        canvas = canvas || document.createElement('canvas');\n        const scanRegionX = scanRegion && scanRegion.x ? scanRegion.x : 0;\n        const scanRegionY = scanRegion && scanRegion.y ? scanRegion.y : 0;\n        const scanRegionWidth = scanRegion && scanRegion.width\n            ? scanRegion.width\n            : (image as HTMLVideoElement).videoWidth || image.width as number;\n        const scanRegionHeight = scanRegion && scanRegion.height\n            ? scanRegion.height\n            : (image as HTMLVideoElement).videoHeight || image.height as number;\n\n        if (!disallowCanvasResizing) {\n            const canvasWidth = scanRegion && scanRegion.downScaledWidth\n                ? scanRegion.downScaledWidth\n                : scanRegionWidth;\n            const canvasHeight = scanRegion && scanRegion.downScaledHeight\n                ? scanRegion.downScaledHeight\n                : scanRegionHeight;\n            // Setting the canvas width or height clears the canvas, even if the values didn't change, therefore only\n            // set them if they actually changed.\n            if (canvas.width !== canvasWidth) {\n                canvas.width = canvasWidth;\n            }\n            if (canvas.height !== canvasHeight) {\n                canvas.height = canvasHeight;\n            }\n        }\n\n        const context = canvas.getContext('2d', { alpha: false })!;\n        context.imageSmoothingEnabled = false; // gives less blurry images\n        context.drawImage(\n            image,\n            scanRegionX, scanRegionY, scanRegionWidth, scanRegionHeight,\n            0, 0, canvas.width, canvas.height,\n        );\n        return [canvas, context];\n    }\n\n    private static async _loadImage(\n        imageOrFileOrBlobOrUrl: HTMLImageElement | HTMLVideoElement | HTMLCanvasElement | OffscreenCanvas | ImageBitmap\n            | SVGImageElement | File | Blob | URL | String,\n    ): Promise<HTMLImageElement | HTMLVideoElement | HTMLCanvasElement | OffscreenCanvas | ImageBitmap\n        | SVGImageElement > {\n        if (imageOrFileOrBlobOrUrl instanceof Image) {\n            await QrScanner._awaitImageLoad(imageOrFileOrBlobOrUrl);\n            return imageOrFileOrBlobOrUrl;\n        } else if (imageOrFileOrBlobOrUrl instanceof HTMLVideoElement\n            || imageOrFileOrBlobOrUrl instanceof HTMLCanvasElement\n            || imageOrFileOrBlobOrUrl instanceof SVGImageElement\n            || 'OffscreenCanvas' in window && imageOrFileOrBlobOrUrl instanceof OffscreenCanvas\n            || 'ImageBitmap' in window && imageOrFileOrBlobOrUrl instanceof ImageBitmap) {\n            return imageOrFileOrBlobOrUrl;\n        } else if (imageOrFileOrBlobOrUrl instanceof File || imageOrFileOrBlobOrUrl instanceof Blob\n            || imageOrFileOrBlobOrUrl instanceof URL || typeof imageOrFileOrBlobOrUrl === 'string') {\n            const image = new Image();\n            if (imageOrFileOrBlobOrUrl instanceof File || imageOrFileOrBlobOrUrl instanceof Blob) {\n                image.src = URL.createObjectURL(imageOrFileOrBlobOrUrl);\n            } else {\n                image.src = imageOrFileOrBlobOrUrl.toString();\n            }\n            try {\n                await QrScanner._awaitImageLoad(image);\n                return image;\n            } finally {\n                if (imageOrFileOrBlobOrUrl instanceof File || imageOrFileOrBlobOrUrl instanceof Blob) {\n                    URL.revokeObjectURL(image.src);\n                }\n            }\n        } else {\n            throw 'Unsupported image type.';\n        }\n    }\n\n    private static async _awaitImageLoad(image: HTMLImageElement): Promise<void> {\n        if (image.complete && image.naturalWidth !== 0) return; // already loaded\n        await new Promise<void>((resolve, reject) => {\n            const listener = (event: ErrorEvent | Event) => {\n                image.removeEventListener('load', listener);\n                image.removeEventListener('error', listener);\n                if (event instanceof ErrorEvent) {\n                    reject('Image load error');\n                } else {\n                    resolve();\n                }\n            };\n            image.addEventListener('load', listener);\n            image.addEventListener('error', listener);\n        });\n    }\n\n    private static async _postWorkerMessage(\n        qrEngineOrQrEnginePromise: Worker | BarcodeDetector | Promise<Worker | BarcodeDetector>,\n        type: string,\n        data?: any,\n        transfer?: Transferable[],\n    ): Promise<number> {\n        return QrScanner._postWorkerMessageSync(await qrEngineOrQrEnginePromise, type, data, transfer);\n    }\n\n    // sync version of _postWorkerMessage without performance overhead of async functions\n    private static _postWorkerMessageSync(\n        qrEngine: Worker | BarcodeDetector,\n        type: string,\n        data?: any,\n        transfer?: Transferable[],\n    ): number {\n        if (!(qrEngine instanceof Worker)) return -1;\n        const id = QrScanner._workerMessageId++;\n        qrEngine.postMessage({\n            id,\n            type,\n            data,\n        }, transfer);\n        return id;\n    }\n}\n\ndeclare namespace QrScanner {\n    export interface ScanRegion {\n        x?: number;\n        y?: number;\n        width?: number;\n        height?: number;\n        downScaledWidth?: number;\n        downScaledHeight?: number;\n    }\n\n    export type FacingMode = 'environment' | 'user';\n    export type DeviceId = string;\n\n    export interface Camera {\n        id: DeviceId;\n        label: string;\n    }\n\n    export type InversionMode = 'original' | 'invert' | 'both';\n\n    export interface Point {\n        x: number;\n        y: number;\n    }\n\n    export interface ScanResult {\n        data: string;\n        // In clockwise order, starting at top left, but this might not be guaranteed in the future.\n        cornerPoints: QrScanner.Point[];\n    }\n}\n\n// simplified from https://wicg.github.io/shape-detection-api/#barcode-detection-api\ndeclare class BarcodeDetector {\n    constructor(options?: { formats: string[] });\n    static getSupportedFormats(): Promise<string[]>;\n    detect(image: ImageBitmapSource): Promise<Array<{ rawValue: string, cornerPoints: QrScanner.Point[] }>>;\n}\n\n// simplified from https://github.com/lukewarlow/user-agent-data-types/blob/master/index.d.ts\ndeclare global {\n    interface Navigator {\n        readonly userAgentData?: {\n            readonly platform: string;\n            readonly brands: Array<{\n                readonly brand: string;\n                readonly version: string;\n            }>;\n            getHighEntropyValues(hints: string[]): Promise<{\n                readonly architecture?: string;\n                readonly platformVersion?: string;\n            }>;\n        };\n    }\n}\n\nexport default QrScanner;\n", "/**\n * q5.js\n * @version 2.23\n * @author quinton-ashley, Tezumie, and LingDong-\n * @license LGPL-3.0\n * @class Q5\n */\nexport function Q5(scope, parent, renderer) {\n\tlet $ = this;\n\t$._q5 = true;\n\t$._parent = parent;\n\tif (renderer == 'webgpu-fallback') {\n\t\t$._webgpuFallback = true;\n\t\t$._renderer = 'c2d';\n\t} else {\n\t\t$._renderer = renderer || Q5.render;\n\t}\n\t$._preloadCount = 0;\n\n\tlet autoLoaded = scope == 'auto';\n\tscope ??= 'global';\n\tif (scope == 'auto') {\n\t\tif (!(window.setup || window.update || window.draw)) return;\n\t\tscope = 'global';\n\t}\n\t$._scope = scope;\n\tlet globalScope;\n\tif (scope == 'global') {\n\t\tQ5._hasGlobal = $._isGlobal = true;\n\t\tglobalScope = Q5._esm ? globalThis : !Q5._server ? window : global;\n\t}\n\tif (scope == 'graphics') $._graphics = true;\n\n\tlet q = new Proxy($, {\n\t\tset: (t, p, v) => {\n\t\t\t$[p] = v;\n\t\t\tif ($._isGlobal) globalScope[p] = v;\n\t\t\treturn true;\n\t\t}\n\t});\n\n\t$.canvas = $.ctx = $.drawingContext = null;\n\t$.pixels = [];\n\tlet looper = null,\n\t\tuseRAF = true;\n\n\t$.frameCount = 0;\n\t$.deltaTime = 16;\n\t$._targetFrameRate = 0;\n\t$._targetFrameDuration = 16.666666666666668;\n\t$._frameRate = $._fps = 60;\n\t$._loop = true;\n\t$._hooks = {\n\t\tpostCanvas: [],\n\t\tpreRender: [],\n\t\tpostRender: []\n\t};\n\n\tlet millisStart = 0;\n\t$.millis = () => performance.now() - millisStart;\n\n\t$.noCanvas = () => {\n\t\tif ($.canvas?.remove) $.canvas.remove();\n\t\t$.canvas = 0;\n\t\tq.ctx = q.drawingContext = 0;\n\t};\n\n\tif (window) {\n\t\t$.windowWidth = window.innerWidth;\n\t\t$.windowHeight = window.innerHeight;\n\t\t$.deviceOrientation = window.screen?.orientation?.type;\n\t}\n\n\t$._incrementPreload = () => q._preloadCount++;\n\t$._decrementPreload = () => q._preloadCount--;\n\t$.disablePreloadSystem = () => ($._disablePreload = true);\n\n\t$._draw = (timestamp) => {\n\t\tlet ts = timestamp || performance.now();\n\t\t$._lastFrameTime ??= ts - $._targetFrameDuration;\n\n\t\tif ($._didResize) {\n\t\t\t$.windowResized();\n\t\t\t$._didResize = false;\n\t\t}\n\n\t\tif ($._loop) {\n\t\t\tif (useRAF) looper = raf($._draw);\n\t\t\telse {\n\t\t\t\tlet nextTS = ts + $._targetFrameDuration;\n\t\t\t\tlet frameDelay = nextTS - performance.now();\n\t\t\t\twhile (frameDelay < 0) frameDelay += $._targetFrameDuration;\n\t\t\t\tlog(frameDelay);\n\t\t\t\tlooper = setTimeout(() => $._draw(nextTS), frameDelay);\n\t\t\t}\n\t\t} else if ($.frameCount && !$._redraw) return;\n\n\t\tif ($.frameCount && useRAF && !$._redraw) {\n\t\t\tlet timeSinceLast = ts - $._lastFrameTime;\n\t\t\tif (timeSinceLast < $._targetFrameDuration - 4) return;\n\t\t}\n\n\t\tq.deltaTime = ts - $._lastFrameTime;\n\t\t$._frameRate = 1000 / $.deltaTime;\n\t\tq.frameCount++;\n\t\tlet pre = performance.now();\n\t\t$.resetMatrix();\n\t\tif ($._beginRender) $._beginRender();\n\t\tfor (let m of Q5.methods.pre) m.call($);\n\t\ttry {\n\t\t\t$.draw();\n\t\t} catch (e) {\n\t\t\tif (!Q5.errorTolerant) $.noLoop();\n\t\t\tthrow e;\n\t\t}\n\t\tfor (let m of Q5.methods.post) m.call($);\n\t\t$.postProcess();\n\t\tif ($._render) $._render();\n\t\tif ($._finishRender) $._finishRender();\n\t\tq.pmouseX = $.mouseX;\n\t\tq.pmouseY = $.mouseY;\n\t\tq.moveX = q.moveY = 0;\n\t\t$._lastFrameTime = ts;\n\t\tlet post = performance.now();\n\t\t$._fps = Math.round(1000 / (post - pre));\n\t};\n\t$.noLoop = () => {\n\t\t$._loop = false;\n\t\tif (looper) {\n\t\t\tif (useRAF) cancelAnimationFrame(looper);\n\t\t\telse clearTimeout(looper);\n\t\t}\n\t\tlooper = null;\n\t};\n\t$.loop = () => {\n\t\t$._loop = true;\n\t\tif ($._setupDone && looper == null) $._draw();\n\t};\n\t$.isLooping = () => $._loop;\n\t$.redraw = (n = 1) => {\n\t\t$._redraw = true;\n\t\tfor (let i = 0; i < n; i++) {\n\t\t\t$._draw();\n\t\t}\n\t\t$._redraw = false;\n\t};\n\t$.remove = () => {\n\t\t$.noLoop();\n\t\t$.canvas.remove();\n\t};\n\n\t$.frameRate = (hz) => {\n\t\tif (hz) {\n\t\t\t$._targetFrameRate = hz;\n\t\t\t$._targetFrameDuration = 1000 / hz;\n\n\t\t\tif ($._loop && $._setupDone && looper != null) {\n\t\t\t\tif (useRAF) cancelAnimationFrame(looper);\n\t\t\t\telse clearTimeout(looper);\n\t\t\t\tlooper = null;\n\t\t\t}\n\t\t\tuseRAF = hz <= 60;\n\t\t\tsetTimeout(() => $._draw(), $._targetFrameDuration);\n\t\t}\n\t\treturn $._frameRate;\n\t};\n\t$.getTargetFrameRate = () => $._targetFrameRate || 60;\n\t$.getFPS = () => $._fps;\n\n\t// shims for compatibility with p5.js libraries\n\t$.Element = function(a) {\n\t\tthis.elt = a;\n\t};\n\t$._elements = [];\n\t$.describe = () => { };\n\n\t$.log = $.print = console.log;\n\n\tfor (let m in Q5.modules) {\n\t\tQ5.modules[m]($, q);\n\t}\n\n\tlet r = Q5.renderers[$._renderer];\n\tfor (let m in r) {\n\t\tr[m]($, q);\n\t}\n\n\t// INIT\n\n\tfor (let k in Q5) {\n\t\tif (k[1] != '_' && k[1] == k[1].toUpperCase()) {\n\t\t\t$[k] = Q5[k];\n\t\t}\n\t}\n\n\tif ($._webgpuFallback) $.colorMode('rgb', 1);\n\n\tif ($._graphics) return;\n\n\tif (scope == 'global') {\n\t\tlet tmp = Object.assign({}, $);\n\t\tdelete tmp.Color;\n\t\tObject.assign(Q5, tmp);\n\t\tdelete Q5.Q5;\n\t}\n\n\tfor (let m of Q5.methods.init) {\n\t\tm.call($);\n\t}\n\n\tfor (let [n, fn] of Object.entries(Q5.prototype)) {\n\t\tif (n[0] != '_' && typeof $[n] == 'function') $[n] = fn.bind($);\n\t}\n\n\tif (scope == 'global') {\n\t\tlet props = Object.getOwnPropertyNames($);\n\t\tfor (let p of props) {\n\t\t\tif (p[0] != '_') globalScope[p] = $[p];\n\t\t}\n\t}\n\n\tif (typeof scope == 'function') scope($);\n\n\tQ5._instanceCount++;\n\n\tlet raf =\n\t\twindow.requestAnimationFrame ||\n\t\tfunction(cb) {\n\t\t\tconst idealFrameTime = $._lastFrameTime + $._targetFrameDuration;\n\t\t\treturn setTimeout(() => {\n\t\t\t\tcb(idealFrameTime);\n\t\t\t}, idealFrameTime - performance.now());\n\t\t};\n\n\tlet t = globalScope || $;\n\t$._isTouchAware = t.touchStarted || t.touchMoved || t.mouseReleased;\n\n\tif ($._isGlobal) {\n\t\t$.preload = t.preload;\n\t\t$.setup = t.setup;\n\t\t$.draw = t.draw;\n\t\t$.postProcess = t.postProcess;\n\t}\n\t$.preload ??= () => { };\n\t$.setup ??= () => { };\n\t$.draw ??= () => { };\n\t$.postProcess ??= () => { };\n\n\tlet userFns = [\n\t\t'setup',\n\t\t'postProcess',\n\t\t'mouseMoved',\n\t\t'mousePressed',\n\t\t'mouseReleased',\n\t\t'mouseDragged',\n\t\t'mouseClicked',\n\t\t'mouseWheel',\n\t\t'keyPressed',\n\t\t'keyReleased',\n\t\t'keyTyped',\n\t\t'touchStarted',\n\t\t'touchMoved',\n\t\t'touchEnded',\n\t\t'windowResized'\n\t];\n\tfor (let k of userFns) {\n\t\tif (!t[k]) $[k] = () => { };\n\t\telse if ($._isGlobal) {\n\t\t\t$[k] = (event) => t[k](event);\n\t\t}\n\t}\n\n\tasync function _setup() {\n\t\t$._startDone = true;\n\t\tif ($._preloadCount > 0 || $._g?._preloadCount > 0) return raf(_setup);\n\t\tmillisStart = performance.now();\n\t\tawait $.setup();\n\t\t$._setupDone = true;\n\t\tif ($.frameCount) return;\n\t\tif ($.ctx === null) $.createCanvas(200, 200);\n\t\traf($._draw);\n\t}\n\n\tfunction _start() {\n\t\ttry {\n\t\t\t$.preload();\n\t\t\tif (!$._startDone) _setup();\n\t\t} catch (e) {\n\t\t\tif ($._askAI) $._askAI(e);\n\t\t\tthrow e;\n\t\t}\n\t}\n\n\tif (autoLoaded) _start();\n\telse setTimeout(_start, 32);\n}\n\nQ5.render = 'c2d';\n\nQ5.renderers = {};\nQ5.modules = {};\n\nQ5._server = typeof process == 'object';\nQ5._esm = this === undefined;\n\nQ5._instanceCount = 0;\nQ5._friendlyError = (msg, func) => {\n\tif (!Q5.disableFriendlyErrors) console.error(func + ': ' + msg);\n};\nQ5._validateParameters = () => true;\n\nQ5.methods = {\n\tinit: [],\n\tpre: [],\n\tpost: [],\n\tremove: []\n};\nQ5.prototype.registerMethod = (m, fn) => Q5.methods[m].push(fn);\nQ5.prototype.registerPreloadMethod = (n, fn) => (Q5.prototype[n] = fn[n]);\n\nif (Q5._server) global.p5 ??= global.Q5 = Q5;\n\nif (typeof window == 'object') window.p5 ??= window.Q5 = Q5;\nelse global.window = 0;\n\nfunction createCanvas(w, h, opt) {\n\tif (!Q5._hasGlobal) {\n\t\tlet q = new Q5();\n\t\tq.createCanvas(w, h, opt);\n\t}\n}\n\nQ5.version = Q5.VERSION = '2.23';\n\nif (typeof document == 'object') {\n\tdocument.addEventListener('DOMContentLoaded', () => {\n\t\tif (!Q5._hasGlobal) new Q5('auto');\n\t});\n}\nQ5.modules.canvas = ($, q) => {\n\t$._Canvas =\n\t\twindow.OffscreenCanvas ||\n\t\tfunction() {\n\t\t\treturn document.createElement('canvas');\n\t\t};\n\n\tif (Q5._server) {\n\t\tif (Q5._createServerCanvas) {\n\t\t\tq.canvas = Q5._createServerCanvas(100, 100);\n\t\t}\n\t} else if ($._scope == 'image' || $._scope == 'graphics') {\n\t\tq.canvas = new $._Canvas(100, 100);\n\t}\n\n\tif (!$.canvas) {\n\t\tif (typeof document == 'object') {\n\t\t\tq.canvas = document.createElement('canvas');\n\t\t\t$.canvas.id = 'q5Canvas' + Q5._instanceCount;\n\t\t\t$.canvas.classList.add('q5Canvas');\n\t\t} else $.noCanvas();\n\t}\n\n\tlet c = $.canvas;\n\t$.width = 200;\n\t$.height = 200;\n\t$._pixelDensity = 1;\n\n\t$.displayDensity = () => window.devicePixelRatio || 1;\n\n\tif (c) {\n\t\tc.width = 200;\n\t\tc.height = 200;\n\t\tif ($._scope != 'image') {\n\t\t\tc.renderer = $._renderer;\n\t\t\tc[$._renderer] = true;\n\n\t\t\t$._pixelDensity = Math.ceil($.displayDensity());\n\t\t}\n\t}\n\n\t$._adjustDisplay = () => {\n\t\tif (c.style) {\n\t\t\tc.style.width = c.w + 'px';\n\t\t\tc.style.height = c.h + 'px';\n\t\t}\n\t};\n\n\t$.createCanvas = function(w, h, options) {\n\t\tif (typeof w == 'object') {\n\t\t\toptions = w;\n\t\t\tw = null;\n\t\t}\n\t\toptions ??= arguments[3];\n\t\tif (typeof options == 'string') options = { renderer: options };\n\t\tlet opt = Object.assign({}, Q5.canvasOptions);\n\t\tif (typeof options == 'object') Object.assign(opt, options);\n\n\t\tif ($._scope != 'image') {\n\t\t\tif ($._scope == 'graphics') $._pixelDensity = this._pixelDensity;\n\t\t\telse if (window.IntersectionObserver) {\n\t\t\t\tlet wasObserved = false;\n\t\t\t\tnew IntersectionObserver((e) => {\n\t\t\t\t\tc.visible = e[0].isIntersecting;\n\t\t\t\t\tif (!wasObserved) {\n\t\t\t\t\t\t$._wasLooping = $._loop;\n\t\t\t\t\t\twasObserved = true;\n\t\t\t\t\t}\n\t\t\t\t\tif (c.visible) {\n\t\t\t\t\t\tif ($._wasLooping && !$._loop) $.loop();\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$._wasLooping = $._loop;\n\t\t\t\t\t\t$.noLoop();\n\t\t\t\t\t}\n\t\t\t\t}).observe(c);\n\t\t\t}\n\t\t}\n\n\t\t$._setCanvasSize(w, h);\n\n\t\tObject.assign(c, opt);\n\t\tlet rend = $._createCanvas(c.w, c.h, opt);\n\n\t\tif ($._hooks) {\n\t\t\tfor (let m of $._hooks.postCanvas) m();\n\t\t}\n\n\t\tif ($._addEventMethods) $._addEventMethods(c);\n\n\t\treturn rend;\n\t};\n\n\t$.createGraphics = function(w, h, opt = {}) {\n\t\tif (typeof opt == 'string') opt = { renderer: opt };\n\t\tlet g = new Q5('graphics', undefined, opt.renderer || ($._webgpuFallback ? 'webgpu-fallback' : $._renderer));\n\t\topt.alpha ??= true;\n\t\topt.colorSpace ??= $.canvas.colorSpace;\n\t\tg.createCanvas.call($, w, h, opt);\n\t\tlet scale = g._pixelDensity * $._defaultImageScale;\n\t\tg.defaultWidth = w * scale;\n\t\tg.defaultHeight = h * scale;\n\t\treturn g;\n\t};\n\n\t$._setCanvasSize = (w, h) => {\n\t\tif (w == undefined) h ??= window.innerHeight;\n\t\telse h ??= w;\n\t\tw ??= window.innerWidth;\n\n\t\tc.w = w = Math.ceil(w);\n\t\tc.h = h = Math.ceil(h);\n\t\tq.halfWidth = c.hw = w / 2;\n\t\tq.halfHeight = c.hh = h / 2;\n\n\t\t// changes the actual size of the canvas\n\t\tc.width = Math.ceil(w * $._pixelDensity);\n\t\tc.height = Math.ceil(h * $._pixelDensity);\n\n\t\tif (!$._da) {\n\t\t\tq.width = w;\n\t\t\tq.height = h;\n\t\t} else $.flexibleCanvas($._dau);\n\n\t\tif ($.displayMode && !c.displayMode) $.displayMode();\n\t\telse $._adjustDisplay();\n\t};\n\n\t$._setImageSize = (w, h) => {\n\t\tq.width = c.w = w;\n\t\tq.height = c.h = h;\n\t\tq.halfWidth = c.hw = w / 2;\n\t\tq.halfHeight = c.hh = h / 2;\n\n\t\t// changes the actual size of the canvas\n\t\tc.width = Math.ceil(w * $._pixelDensity);\n\t\tc.height = Math.ceil(h * $._pixelDensity);\n\t};\n\n\t$.defaultImageScale = (scale) => {\n\t\tif (!scale) return $._defaultImageScale;\n\t\treturn ($._defaultImageScale = scale);\n\t};\n\t$.defaultImageScale(0.5);\n\n\tif ($._scope == 'image') return;\n\n\tif (c && $._scope != 'graphics') {\n\t\tc.parent = (el) => {\n\t\t\tif (c.parentElement) c.parentElement.removeChild(c);\n\n\t\t\tif (typeof el == 'string') el = document.getElementById(el);\n\t\t\tel.append(c);\n\n\t\t\tfunction parentResized() {\n\t\t\t\tif ($.frameCount > 1) {\n\t\t\t\t\t$._didResize = true;\n\t\t\t\t\t$._adjustDisplay();\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (typeof ResizeObserver == 'function') {\n\t\t\t\tif ($._ro) $._ro.disconnect();\n\t\t\t\t$._ro = new ResizeObserver(parentResized);\n\t\t\t\t$._ro.observe(el);\n\t\t\t} else if (!$.frameCount) {\n\t\t\t\twindow.addEventListener('resize', parentResized);\n\t\t\t}\n\t\t};\n\n\t\tfunction addCanvas() {\n\t\t\tlet el = $._parent;\n\t\t\tel ??= document.getElementsByTagName('main')[0];\n\t\t\tif (!el) {\n\t\t\t\tel = document.createElement('main');\n\t\t\t\tdocument.body.append(el);\n\t\t\t}\n\t\t\tc.parent(el);\n\t\t}\n\t\tif (document.body) addCanvas();\n\t\telse document.addEventListener('DOMContentLoaded', addCanvas);\n\t}\n\n\t$.resizeCanvas = (w, h) => {\n\t\tif (!$.ctx) return $.createCanvas(w, h);\n\t\tif (w == c.w && h == c.h) return;\n\n\t\t$._resizeCanvas(w, h);\n\t};\n\n\tif (c && !Q5._createServerCanvas) c.resize = $.resizeCanvas;\n\n\t$.pixelDensity = (v) => {\n\t\tif (!v || v == $._pixelDensity) return $._pixelDensity;\n\t\t$._pixelDensity = v;\n\t\t$._resizeCanvas(c.w, c.h);\n\t\treturn v;\n\t};\n\n\t$.flexibleCanvas = (unit = 400) => {\n\t\tif (unit) {\n\t\t\t$._da = c.width / (unit * $._pixelDensity);\n\t\t\tq.width = $._dau = unit;\n\t\t\tq.height = (c.h / c.w) * unit;\n\t\t} else $._da = 0;\n\t};\n\n\t$._styleNames = [\n\t\t'_fill',\n\t\t'_stroke',\n\t\t'_strokeWeight',\n\t\t'_doStroke',\n\t\t'_doFill',\n\t\t'_strokeSet',\n\t\t'_fillSet',\n\t\t'_shadow',\n\t\t'_doShadow',\n\t\t'_shadowOffsetX',\n\t\t'_shadowOffsetY',\n\t\t'_shadowBlur',\n\t\t'_tint',\n\t\t'_colorMode',\n\t\t'_colorFormat',\n\t\t'Color',\n\t\t'_imageMode',\n\t\t'_rectMode',\n\t\t'_ellipseMode',\n\t\t'_textSize',\n\t\t'_textAlign',\n\t\t'_textBaseline'\n\t];\n\t$._styles = [];\n\n\t$.pushStyles = () => {\n\t\tlet styles = {};\n\t\tfor (let s of $._styleNames) styles[s] = $[s];\n\t\t$._styles.push(styles);\n\t};\n\t$.popStyles = () => {\n\t\tlet styles = $._styles.pop();\n\t\tfor (let s of $._styleNames) $[s] = styles[s];\n\t\tq.Color = styles.Color;\n\t};\n\n\tif (window && $._scope != 'graphics') {\n\t\twindow.addEventListener('resize', () => {\n\t\t\t$._didResize = true;\n\t\t\tq.windowWidth = window.innerWidth;\n\t\t\tq.windowHeight = window.innerHeight;\n\t\t\tq.deviceOrientation = window.screen?.orientation?.type;\n\t\t});\n\t}\n};\n\nQ5.CENTER = 'center';\nQ5.LEFT = 'left';\nQ5.RIGHT = 'right';\nQ5.TOP = 'top';\nQ5.BOTTOM = 'bottom';\n\nQ5.BASELINE = 'alphabetic';\nQ5.MIDDLE = 'middle';\n\nQ5.NORMAL = 'normal';\nQ5.ITALIC = 'italic';\nQ5.BOLD = 'bold';\nQ5.BOLDITALIC = 'italic bold';\n\nQ5.ROUND = 'round';\nQ5.SQUARE = 'butt';\nQ5.PROJECT = 'square';\nQ5.MITER = 'miter';\nQ5.BEVEL = 'bevel';\nQ5.NONE = 'none';\n\nQ5.SIMPLE = 'simple';\n\nQ5.CHORD_OPEN = 0;\nQ5.PIE_OPEN = 1;\nQ5.PIE = 2;\nQ5.CHORD = 3;\n\nQ5.RADIUS = 'radius';\nQ5.CORNER = 'corner';\nQ5.CORNERS = 'corners';\n\nQ5.OPEN = 0;\nQ5.CLOSE = 1;\n\nQ5.VIDEO = 'video';\nQ5.AUDIO = 'audio';\n\nQ5.LANDSCAPE = 'landscape';\nQ5.PORTRAIT = 'portrait';\n\nQ5.BLEND = 'source-over';\nQ5.REMOVE = 'destination-out';\nQ5.ADD = 'lighter';\nQ5.DARKEST = 'darken';\nQ5.LIGHTEST = 'lighten';\nQ5.DIFFERENCE = 'difference';\nQ5.SUBTRACT = 'subtract';\nQ5.EXCLUSION = 'exclusion';\nQ5.MULTIPLY = 'multiply';\nQ5.SCREEN = 'screen';\nQ5.REPLACE = 'copy';\nQ5.OVERLAY = 'overlay';\nQ5.HARD_LIGHT = 'hard-light';\nQ5.SOFT_LIGHT = 'soft-light';\nQ5.DODGE = 'color-dodge';\nQ5.BURN = 'color-burn';\n\nQ5.THRESHOLD = 1;\nQ5.GRAY = 2;\nQ5.OPAQUE = 3;\nQ5.INVERT = 4;\nQ5.POSTERIZE = 5;\nQ5.DILATE = 6;\nQ5.ERODE = 7;\nQ5.BLUR = 8;\nQ5.SEPIA = 9;\nQ5.BRIGHTNESS = 10;\nQ5.SATURATION = 11;\nQ5.CONTRAST = 12;\nQ5.HUE_ROTATE = 13;\n\nQ5.C2D = Q5.P2D = Q5.P2DHDR = 'c2d';\nQ5.WEBGL = 'webgl';\nQ5.WEBGPU = 'webgpu';\n\nQ5.canvasOptions = {\n\talpha: false,\n\tcolorSpace: 'display-p3'\n};\n\nif (!window.matchMedia || !matchMedia('(dynamic-range: high) and (color-gamut: p3)').matches) {\n\tQ5.canvasOptions.colorSpace = 'srgb';\n} else Q5.supportsHDR = true;\nQ5.renderers.c2d = {};\n\nQ5.renderers.c2d.canvas = ($, q) => {\n\tlet c = $.canvas;\n\n\tif ($.colorMode) $.colorMode('rgb', 255);\n\n\t$._createCanvas = function(w, h, options) {\n\t\tif (!c) {\n\t\t\tconsole.error('q5 canvas could not be created. skia-canvas and jsdom packages not found.');\n\t\t\treturn;\n\t\t}\n\t\tq.ctx = q.drawingContext = c.getContext('2d', options);\n\n\t\tif ($._scope != 'image') {\n\t\t\t// default styles\n\t\t\t$.ctx.fillStyle = $._fill = 'white';\n\t\t\t$.ctx.strokeStyle = $._stroke = 'black';\n\t\t\t$.ctx.lineCap = 'round';\n\t\t\t$.ctx.lineJoin = 'miter';\n\t\t\t$.ctx.textAlign = 'left';\n\t\t\t$._strokeWeight = 1;\n\t\t}\n\t\t$.ctx.scale($._pixelDensity, $._pixelDensity);\n\t\t$.ctx.save();\n\t\treturn c;\n\t};\n\n\t$.clear = () => {\n\t\t$.ctx.save();\n\t\t$.ctx.resetTransform();\n\t\t$.ctx.clearRect(0, 0, $.canvas.width, $.canvas.height);\n\t\t$.ctx.restore();\n\t};\n\n\tif ($._scope == 'image') return;\n\n\t$.background = function(c) {\n\t\t$.ctx.save();\n\t\t$.ctx.resetTransform();\n\t\t$.ctx.globalAlpha = 1;\n\t\tif (c.canvas) $.image(c, 0, 0, $.canvas.width, $.canvas.height);\n\t\telse {\n\t\t\tif (Q5.Color && !c._q5Color) {\n\t\t\t\tif (typeof c != 'string') c = $.color(...arguments);\n\t\t\t\telse if ($._namedColors[c]) c = $.color(...$._namedColors[c]);\n\t\t\t}\n\t\t\t$.ctx.fillStyle = c.toString();\n\t\t\t$.ctx.fillRect(0, 0, $.canvas.width, $.canvas.height);\n\t\t}\n\t\t$.ctx.restore();\n\t};\n\n\t$._resizeCanvas = (w, h) => {\n\t\tlet t = {};\n\t\tfor (let prop in $.ctx) {\n\t\t\tif (typeof $.ctx[prop] != 'function') t[prop] = $.ctx[prop];\n\t\t}\n\t\tdelete t.canvas;\n\n\t\tlet o;\n\t\tif ($.frameCount > 1) {\n\t\t\to = new $._Canvas(c.width, c.height);\n\t\t\to.w = c.w;\n\t\t\to.h = c.h;\n\t\t\tlet oCtx = o.getContext('2d');\n\t\t\toCtx.drawImage(c, 0, 0);\n\t\t}\n\n\t\t$._setCanvasSize(w, h);\n\n\t\tfor (let prop in t) $.ctx[prop] = t[prop];\n\t\t$.scale($._pixelDensity);\n\n\t\tif (o) $.ctx.drawImage(o, 0, 0, o.w, o.h);\n\t};\n\n\t$.fill = function(c) {\n\t\t$._doFill = $._fillSet = true;\n\t\tif (Q5.Color) {\n\t\t\tif (!c._q5Color) {\n\t\t\t\tif (typeof c != 'string') c = $.color(...arguments);\n\t\t\t\telse if ($._namedColors[c]) c = $.color(...$._namedColors[c]);\n\t\t\t}\n\t\t\tif (c.a <= 0) return ($._doFill = false);\n\t\t}\n\t\t$.ctx.fillStyle = $._fill = c.toString();\n\t};\n\n\t$.stroke = function(c) {\n\t\t$._doStroke = $._strokeSet = true;\n\t\tif (Q5.Color) {\n\t\t\tif (!c._q5Color) {\n\t\t\t\tif (typeof c != 'string') c = $.color(...arguments);\n\t\t\t\telse if ($._namedColors[c]) c = $.color(...$._namedColors[c]);\n\t\t\t}\n\t\t\tif (c.a <= 0) return ($._doStroke = false);\n\t\t}\n\t\t$.ctx.strokeStyle = $._stroke = c.toString();\n\t};\n\n\t$.strokeWeight = (n) => {\n\t\tif (!n) $._doStroke = false;\n\t\tif ($._da) n *= $._da;\n\t\t$.ctx.lineWidth = $._strokeWeight = n || 0.0001;\n\t};\n\n\t$.noFill = () => ($._doFill = false);\n\t$.noStroke = () => ($._doStroke = false);\n\t$.opacity = (a) => ($.ctx.globalAlpha = a);\n\n\t$._doShadow = false;\n\t$._shadowOffsetX = $._shadowOffsetY = $._shadowBlur = 10;\n\n\t$.shadow = function(c) {\n\t\tif (Q5.Color) {\n\t\t\tif (!c._q5Color) {\n\t\t\t\tif (typeof c != 'string') c = $.color(...arguments);\n\t\t\t\telse if ($._namedColors[c]) c = $.color(...$._namedColors[c]);\n\t\t\t}\n\t\t}\n\t\t$.ctx.shadowColor = $._shadow = c.toString();\n\t\t$._doShadow = true;\n\n\t\t$.ctx.shadowOffsetX ||= $._shadowOffsetX;\n\t\t$.ctx.shadowOffsetY ||= $._shadowOffsetY;\n\t\t$.ctx.shadowBlur ||= $._shadowBlur;\n\t};\n\n\t$.shadowBox = (offsetX, offsetY, blur) => {\n\t\t$.ctx.shadowOffsetX = $._shadowOffsetX = offsetX;\n\t\t$.ctx.shadowOffsetY = $._shadowOffsetY = offsetY || offsetX;\n\t\t$.ctx.shadowBlur = $._shadowBlur = blur || 0;\n\t};\n\n\t$.noShadow = () => {\n\t\t$._doShadow = false;\n\t\t$.ctx.shadowOffsetX = $.ctx.shadowOffsetY = $.ctx.shadowBlur = 0;\n\t};\n\n\t// DRAWING MATRIX\n\n\t$.translate = (x, y) => {\n\t\tif ($._da) {\n\t\t\tx *= $._da;\n\t\t\ty *= $._da;\n\t\t}\n\t\t$.ctx.translate(x, y);\n\t};\n\n\t$.rotate = (r) => {\n\t\tif ($._angleMode) r = $.radians(r);\n\t\t$.ctx.rotate(r);\n\t};\n\n\t$.scale = (x, y) => {\n\t\tif (x.x) {\n\t\t\ty = x.y;\n\t\t\tx = x.x;\n\t\t}\n\t\ty ??= x;\n\t\t$.ctx.scale(x, y);\n\t};\n\n\t$.applyMatrix = (a, b, c, d, e, f) => $.ctx.transform(a, b, c, d, e, f);\n\t$.shearX = (ang) => $.ctx.transform(1, 0, $.tan(ang), 1, 0, 0);\n\t$.shearY = (ang) => $.ctx.transform(1, $.tan(ang), 0, 1, 0, 0);\n\n\t$.resetMatrix = () => {\n\t\tif ($.ctx) {\n\t\t\t$.ctx.resetTransform();\n\t\t\t$.scale($._pixelDensity);\n\t\t\tif ($._webgpuFallback) $.translate($.canvas.hw, $.canvas.hh);\n\t\t}\n\t};\n\n\t$.pushMatrix = () => $.ctx.save();\n\t$.popMatrix = () => $.ctx.restore();\n\n\tlet _popStyles = $.popStyles;\n\n\t$.popStyles = () => {\n\t\t_popStyles();\n\n\t\t$.ctx.fillStyle = $._fill;\n\t\t$.ctx.strokeStyle = $._stroke;\n\t\t$.ctx.lineWidth = $._strokeWeight;\n\t\t$.ctx.shadowColor = $._shadow;\n\t\t$.ctx.shadowOffsetX = $._doShadow ? $._shadowOffsetX : 0;\n\t\t$.ctx.shadowOffsetY = $._doShadow ? $._shadowOffsetY : 0;\n\t\t$.ctx.shadowBlur = $._doShadow ? $._shadowBlur : 0;\n\t};\n\n\t$.push = () => {\n\t\t$.ctx.save();\n\t\t$.pushStyles();\n\t};\n\t$.pop = () => {\n\t\t$.ctx.restore();\n\t\t_popStyles();\n\t};\n};\nQ5.renderers.c2d.shapes = ($) => {\n\t$._doStroke = true;\n\t$._doFill = true;\n\t$._strokeSet = false;\n\t$._fillSet = false;\n\t$._ellipseMode = Q5.CENTER;\n\t$._rectMode = Q5.CORNER;\n\n\tlet firstVertex = true;\n\tlet curveBuff = [];\n\n\tfunction ink() {\n\t\tif ($._doFill) $.ctx.fill();\n\t\tif ($._doStroke) $.ctx.stroke();\n\t}\n\n\t// DRAWING SETTINGS\n\n\t$.blendMode = (x) => ($.ctx.globalCompositeOperation = x);\n\t$.strokeCap = (x) => ($.ctx.lineCap = x);\n\t$.strokeJoin = (x) => ($.ctx.lineJoin = x);\n\t$.ellipseMode = (x) => ($._ellipseMode = x);\n\t$.rectMode = (x) => ($._rectMode = x);\n\t$.curveDetail = () => { };\n\n\t// DRAWING\n\n\t$.line = (x0, y0, x1, y1) => {\n\t\tif ($._doStroke) {\n\t\t\t$._da && ((x0 *= $._da), (y0 *= $._da), (x1 *= $._da), (y1 *= $._da));\n\t\t\t$.ctx.beginPath();\n\t\t\t$.ctx.moveTo(x0, y0);\n\t\t\t$.ctx.lineTo(x1, y1);\n\t\t\t$.ctx.stroke();\n\t\t}\n\t};\n\n\tconst TAU = Math.PI * 2;\n\n\tfunction arc(x, y, w, h, lo, hi, mode) {\n\t\tif ($._angleMode) {\n\t\t\tlo = $.radians(lo);\n\t\t\thi = $.radians(hi);\n\t\t}\n\t\tlo %= TAU;\n\t\thi %= TAU;\n\t\tif (lo < 0) lo += TAU;\n\t\tif (hi < 0) hi += TAU;\n\t\tif (lo > hi) hi += TAU;\n\t\tif (lo == hi) return $.ellipse(x, y, w, h);\n\n\t\tw /= 2;\n\t\th /= 2;\n\n\t\tif (!$._doFill && mode == $.PIE_OPEN) mode = $.CHORD_OPEN;\n\n\t\t$.ctx.beginPath();\n\t\t$.ctx.ellipse(x, y, w, h, 0, lo, hi);\n\t\tif (mode == $.PIE || mode == $.PIE_OPEN) $.ctx.lineTo(x, y);\n\t\tif ($._doFill) $.ctx.fill();\n\n\t\tif ($._doStroke) {\n\t\t\tif (mode == $.PIE || mode == $.CHORD) $.ctx.closePath();\n\t\t\tif (mode != $.PIE_OPEN) return $.ctx.stroke();\n\n\t\t\t$.ctx.beginPath();\n\t\t\t$.ctx.ellipse(x, y, w, h, 0, lo, hi);\n\t\t\t$.ctx.stroke();\n\t\t}\n\t}\n\n\t$.arc = (x, y, w, h, start, stop, mode) => {\n\t\tif (start == stop) return $.ellipse(x, y, w, h);\n\n\t\tif ($._da) {\n\t\t\tx *= $._da;\n\t\t\ty *= $._da;\n\t\t\tw *= $._da;\n\t\t\th *= $._da;\n\t\t}\n\t\tmode ??= $.PIE_OPEN;\n\n\t\tif ($._ellipseMode == $.CENTER) {\n\t\t\tarc(x, y, w, h, start, stop, mode);\n\t\t} else if ($._ellipseMode == $.RADIUS) {\n\t\t\tarc(x, y, w * 2, h * 2, start, stop, mode);\n\t\t} else if ($._ellipseMode == $.CORNER) {\n\t\t\tarc(x + w / 2, y + h / 2, w, h, start, stop, mode);\n\t\t} else if ($._ellipseMode == $.CORNERS) {\n\t\t\tarc((x + w) / 2, (y + h) / 2, w - x, h - y, start, stop, mode);\n\t\t}\n\t};\n\n\tfunction ellipse(x, y, w, h) {\n\t\t$.ctx.beginPath();\n\t\t$.ctx.ellipse(x, y, w / 2, h / 2, 0, 0, TAU);\n\t\tink();\n\t}\n\n\t$.ellipse = (x, y, w, h) => {\n\t\th ??= w;\n\t\tif ($._da) {\n\t\t\tx *= $._da;\n\t\t\ty *= $._da;\n\t\t\tw *= $._da;\n\t\t\th *= $._da;\n\t\t}\n\t\tif ($._ellipseMode == $.CENTER) {\n\t\t\tellipse(x, y, w, h);\n\t\t} else if ($._ellipseMode == $.RADIUS) {\n\t\t\tellipse(x, y, w * 2, h * 2);\n\t\t} else if ($._ellipseMode == $.CORNER) {\n\t\t\tellipse(x + w / 2, y + h / 2, w, h);\n\t\t} else if ($._ellipseMode == $.CORNERS) {\n\t\t\tellipse((x + w) / 2, (y + h) / 2, w - x, h - y);\n\t\t}\n\t};\n\n\t$.circle = (x, y, d) => {\n\t\tif ($._ellipseMode == $.CENTER) {\n\t\t\tif ($._da) {\n\t\t\t\tx *= $._da;\n\t\t\t\ty *= $._da;\n\t\t\t\td *= $._da;\n\t\t\t}\n\t\t\t$.ctx.beginPath();\n\t\t\t$.ctx.arc(x, y, d / 2, 0, TAU);\n\t\t\tink();\n\t\t} else $.ellipse(x, y, d, d);\n\t};\n\n\t$.point = (x, y) => {\n\t\tif ($._doStroke) {\n\t\t\tif (x.x) {\n\t\t\t\ty = x.y;\n\t\t\t\tx = x.x;\n\t\t\t}\n\t\t\tif ($._da) {\n\t\t\t\tx *= $._da;\n\t\t\t\ty *= $._da;\n\t\t\t}\n\t\t\t$.ctx.beginPath();\n\t\t\t$.ctx.moveTo(x, y);\n\t\t\t$.ctx.lineTo(x, y);\n\t\t\t$.ctx.stroke();\n\t\t}\n\t};\n\n\tfunction rect(x, y, w, h) {\n\t\tif ($._da) {\n\t\t\tx *= $._da;\n\t\t\ty *= $._da;\n\t\t\tw *= $._da;\n\t\t\th *= $._da;\n\t\t}\n\t\t$.ctx.beginPath();\n\t\t$.ctx.rect(x, y, w, h);\n\t\tink();\n\t}\n\n\tfunction roundedRect(x, y, w, h, tl, tr, br, bl) {\n\t\tif (tl === undefined) {\n\t\t\treturn rect(x, y, w, h);\n\t\t}\n\t\tif (tr === undefined) {\n\t\t\treturn roundedRect(x, y, w, h, tl, tl, tl, tl);\n\t\t}\n\t\tif ($._da) {\n\t\t\tx *= $._da;\n\t\t\ty *= $._da;\n\t\t\tw *= $._da;\n\t\t\th *= $._da;\n\t\t\ttl *= $._da;\n\t\t\ttr *= $._da;\n\t\t\tbl *= $._da;\n\t\t\tbr *= $._da;\n\t\t}\n\t\t$.ctx.roundRect(x, y, w, h, [tl, tr, br, bl]);\n\t\tink();\n\t}\n\n\t$.rect = (x, y, w, h = w, tl, tr, br, bl) => {\n\t\tif ($._rectMode == $.CENTER) {\n\t\t\troundedRect(x - w / 2, y - h / 2, w, h, tl, tr, br, bl);\n\t\t} else if ($._rectMode == $.RADIUS) {\n\t\t\troundedRect(x - w, y - h, w * 2, h * 2, tl, tr, br, bl);\n\t\t} else if ($._rectMode == $.CORNER) {\n\t\t\troundedRect(x, y, w, h, tl, tr, br, bl);\n\t\t} else if ($._rectMode == $.CORNERS) {\n\t\t\troundedRect(x, y, w - x, h - y, tl, tr, br, bl);\n\t\t}\n\t};\n\n\t$.square = (x, y, s, tl, tr, br, bl) => {\n\t\treturn $.rect(x, y, s, s, tl, tr, br, bl);\n\t};\n\n\t$.beginShape = () => {\n\t\tcurveBuff = [];\n\t\t$.ctx.beginPath();\n\t\tfirstVertex = true;\n\t};\n\n\t$.beginContour = () => {\n\t\t$.ctx.closePath();\n\t\tcurveBuff = [];\n\t\tfirstVertex = true;\n\t};\n\n\t$.endContour = () => {\n\t\tcurveBuff = [];\n\t\tfirstVertex = true;\n\t};\n\n\t$.vertex = (x, y) => {\n\t\tif ($._da) {\n\t\t\tx *= $._da;\n\t\t\ty *= $._da;\n\t\t}\n\t\tcurveBuff = [];\n\t\tif (firstVertex) {\n\t\t\t$.ctx.moveTo(x, y);\n\t\t} else {\n\t\t\t$.ctx.lineTo(x, y);\n\t\t}\n\t\tfirstVertex = false;\n\t};\n\n\t$.bezierVertex = (cp1x, cp1y, cp2x, cp2y, x, y) => {\n\t\tif ($._da) {\n\t\t\tcp1x *= $._da;\n\t\t\tcp1y *= $._da;\n\t\t\tcp2x *= $._da;\n\t\t\tcp2y *= $._da;\n\t\t\tx *= $._da;\n\t\t\ty *= $._da;\n\t\t}\n\t\tcurveBuff = [];\n\t\t$.ctx.bezierCurveTo(cp1x, cp1y, cp2x, cp2y, x, y);\n\t};\n\n\t$.quadraticVertex = (cp1x, cp1y, x, y) => {\n\t\tif ($._da) {\n\t\t\tcp1x *= $._da;\n\t\t\tcp1y *= $._da;\n\t\t\tx *= $._da;\n\t\t\ty *= $._da;\n\t\t}\n\t\tcurveBuff = [];\n\t\t$.ctx.quadraticCurveTo(cp1x, cp1y, x, y);\n\t};\n\n\t$.bezier = (x1, y1, x2, y2, x3, y3, x4, y4) => {\n\t\t$.beginShape();\n\t\t$.vertex(x1, y1);\n\t\t$.bezierVertex(x2, y2, x3, y3, x4, y4);\n\t\t$.endShape();\n\t};\n\n\t$.triangle = (x1, y1, x2, y2, x3, y3) => {\n\t\t$.beginShape();\n\t\t$.vertex(x1, y1);\n\t\t$.vertex(x2, y2);\n\t\t$.vertex(x3, y3);\n\t\t$.endShape($.CLOSE);\n\t};\n\n\t$.quad = (x1, y1, x2, y2, x3, y3, x4, y4) => {\n\t\t$.beginShape();\n\t\t$.vertex(x1, y1);\n\t\t$.vertex(x2, y2);\n\t\t$.vertex(x3, y3);\n\t\t$.vertex(x4, y4);\n\t\t$.endShape($.CLOSE);\n\t};\n\n\t$.endShape = (close) => {\n\t\tcurveBuff = [];\n\t\tif (close) $.ctx.closePath();\n\t\tink();\n\t};\n\n\t$.curveVertex = (x, y) => {\n\t\tif ($._da) {\n\t\t\tx *= $._da;\n\t\t\ty *= $._da;\n\t\t}\n\t\tcurveBuff.push([x, y]);\n\t\tif (curveBuff.length < 4) return;\n\n\t\tlet p0 = curveBuff.at(-4),\n\t\t\tp1 = curveBuff.at(-3),\n\t\t\tp2 = curveBuff.at(-2),\n\t\t\tp3 = curveBuff.at(-1);\n\n\t\tlet cp1x = p1[0] + (p2[0] - p0[0]) / 6,\n\t\t\tcp1y = p1[1] + (p2[1] - p0[1]) / 6,\n\t\t\tcp2x = p2[0] - (p3[0] - p1[0]) / 6,\n\t\t\tcp2y = p2[1] - (p3[1] - p1[1]) / 6;\n\n\t\tif (firstVertex) {\n\t\t\t$.ctx.moveTo(p1[0], p1[1]);\n\t\t\tfirstVertex = false;\n\t\t}\n\t\t$.ctx.bezierCurveTo(cp1x, cp1y, cp2x, cp2y, p2[0], p2[1]);\n\t};\n\n\t$.curve = (x1, y1, x2, y2, x3, y3, x4, y4) => {\n\t\t$.beginShape();\n\t\t$.curveVertex(x1, y1);\n\t\t$.curveVertex(x2, y2);\n\t\t$.curveVertex(x3, y3);\n\t\t$.curveVertex(x4, y4);\n\t\t$.endShape();\n\t};\n\n\t$.curvePoint = (a, b, c, d, t) => {\n\t\tconst t3 = t * t * t,\n\t\t\tt2 = t * t,\n\t\t\tf1 = -0.5 * t3 + t2 - 0.5 * t,\n\t\t\tf2 = 1.5 * t3 - 2.5 * t2 + 1.0,\n\t\t\tf3 = -1.5 * t3 + 2.0 * t2 + 0.5 * t,\n\t\t\tf4 = 0.5 * t3 - 0.5 * t2;\n\t\treturn a * f1 + b * f2 + c * f3 + d * f4;\n\t};\n\n\t$.bezierPoint = (a, b, c, d, t) => {\n\t\tconst adjustedT = 1 - t;\n\t\treturn (\n\t\t\tMath.pow(adjustedT, 3) * a +\n\t\t\t3 * Math.pow(adjustedT, 2) * t * b +\n\t\t\t3 * adjustedT * Math.pow(t, 2) * c +\n\t\t\tMath.pow(t, 3) * d\n\t\t);\n\t};\n\n\t$.curveTangent = (a, b, c, d, t) => {\n\t\tconst t2 = t * t,\n\t\t\tf1 = (-3 * t2) / 2 + 2 * t - 0.5,\n\t\t\tf2 = (9 * t2) / 2 - 5 * t,\n\t\t\tf3 = (-9 * t2) / 2 + 4 * t + 0.5,\n\t\t\tf4 = (3 * t2) / 2 - t;\n\t\treturn a * f1 + b * f2 + c * f3 + d * f4;\n\t};\n\n\t$.bezierTangent = (a, b, c, d, t) => {\n\t\tconst adjustedT = 1 - t;\n\t\treturn (\n\t\t\t3 * d * Math.pow(t, 2) -\n\t\t\t3 * c * Math.pow(t, 2) +\n\t\t\t6 * c * adjustedT * t -\n\t\t\t6 * b * adjustedT * t +\n\t\t\t3 * b * Math.pow(adjustedT, 2) -\n\t\t\t3 * a * Math.pow(adjustedT, 2)\n\t\t);\n\t};\n\n\t$.erase = function(fillAlpha, strokeAlpha) {\n\t\tif ($._colorFormat == 255) {\n\t\t\tif (fillAlpha) fillAlpha /= 255;\n\t\t\tif (strokeAlpha) strokeAlpha /= 255;\n\t\t}\n\t\t$.ctx.save();\n\t\t$.ctx.globalCompositeOperation = 'destination-out';\n\t\t$.ctx.fillStyle = `rgb(0 0 0 / ${fillAlpha || 1})`;\n\t\t$.ctx.strokeStyle = `rgb(0 0 0 / ${strokeAlpha || 1})`;\n\t};\n\n\t$.noErase = function() {\n\t\t$.ctx.globalCompositeOperation = 'source-over';\n\t\t$.ctx.restore();\n\t};\n\n\t$.inFill = (x, y) => {\n\t\tconst pd = $._pixelDensity;\n\t\treturn $.ctx.isPointInPath(x * pd, y * pd);\n\t};\n\n\t$.inStroke = (x, y) => {\n\t\tconst pd = $._pixelDensity;\n\t\treturn $.ctx.isPointInStroke(x * pd, y * pd);\n\t};\n};\nQ5.renderers.c2d.image = ($, q) => {\n\tclass Q5Image {\n\t\tconstructor(w, h, opt = {}) {\n\t\t\tlet $ = this;\n\t\t\t$._scope = 'image';\n\t\t\t$.canvas = $.ctx = $.drawingContext = null;\n\t\t\t$.pixels = [];\n\t\t\tQ5.modules.canvas($, $);\n\t\t\tlet r = Q5.renderers.c2d;\n\t\t\tfor (let m of ['canvas', 'image', 'soft_filters']) {\n\t\t\t\tif (r[m]) r[m]($, $);\n\t\t\t}\n\t\t\t$._pixelDensity = opt.pixelDensity || 1;\n\t\t\t$.createCanvas(w, h, opt);\n\t\t\tlet scale = $._pixelDensity * q._defaultImageScale;\n\t\t\t$.defaultWidth = w * scale;\n\t\t\t$.defaultHeight = h * scale;\n\t\t\tdelete $.createCanvas;\n\t\t\t$._loop = false;\n\t\t}\n\t\tget w() {\n\t\t\treturn this.width;\n\t\t}\n\t\tget h() {\n\t\t\treturn this.height;\n\t\t}\n\t}\n\n\tQ5.Image ??= Q5Image;\n\n\t$._tint = null;\n\tlet imgData = null;\n\n\t$.createImage = (w, h, opt) => {\n\t\topt ??= {};\n\t\topt.alpha ??= true;\n\t\topt.colorSpace ??= $.canvas.colorSpace || Q5.canvasOptions.colorSpace;\n\t\treturn new Q5.Image(w, h, opt);\n\t};\n\n\t$.loadImage = function(url, cb, opt) {\n\t\tif (url.canvas) return url;\n\t\tif (url.slice(-3).toLowerCase() == 'gif') {\n\t\t\tthrow new Error(\n\t\t\t\t`q5 doesn't support GIFs. Use a video or p5play animation instead. https://github.com/q5js/q5.js/issues/84`\n\t\t\t);\n\t\t}\n\t\tq._preloadCount++;\n\t\tlet last = [...arguments].at(-1);\n\t\tif (typeof last == 'object') {\n\t\t\topt = last;\n\t\t\tcb = null;\n\t\t} else opt = null;\n\n\t\tlet g = $.createImage(1, 1, opt);\n\t\tlet pd = g._pixelDensity;\n\n\t\tlet img = new window.Image();\n\t\timg.crossOrigin = 'Anonymous';\n\n\t\tg._loader = new Promise((resolve, reject) => {\n\t\t\timg.onload = () => {\n\t\t\t\timg._pixelDensity = pd;\n\t\t\t\tg.defaultWidth = img.width * $._defaultImageScale;\n\t\t\t\tg.defaultHeight = img.height * $._defaultImageScale;\n\t\t\t\tg.naturalWidth = img.naturalWidth || img.width;\n\t\t\t\tg.naturalHeight = img.naturalHeight || img.height;\n\t\t\t\tg._setImageSize(Math.ceil(g.naturalWidth / pd), Math.ceil(g.naturalHeight / pd));\n\n\t\t\t\tg.ctx.drawImage(img, 0, 0);\n\t\t\t\tq._preloadCount--;\n\t\t\t\tif (cb) cb(g);\n\t\t\t\tdelete g._loader;\n\t\t\t\tresolve(g);\n\t\t\t};\n\t\t\timg.onerror = (e) => {\n\t\t\t\tq._preloadCount--;\n\t\t\t\treject(e);\n\t\t\t};\n\t\t});\n\n\t\tg.src = img.src = url;\n\n\t\tif ($._disablePreload) return g._loader;\n\t\treturn g;\n\t};\n\n\t$.imageMode = (mode) => ($._imageMode = mode);\n\n\t$.image = (img, dx, dy, dw, dh, sx = 0, sy = 0, sw, sh) => {\n\t\tif (!img) return;\n\t\tlet drawable = img.canvas || img;\n\n\t\tdw ??= img.defaultWidth || drawable.width || img.videoWidth;\n\t\tdh ??= img.defaultHeight || drawable.height || img.videoHeight;\n\t\tif ($._imageMode == 'center') {\n\t\t\tdx -= dw * 0.5;\n\t\t\tdy -= dh * 0.5;\n\t\t}\n\t\tif ($._da) {\n\t\t\tdx *= $._da;\n\t\t\tdy *= $._da;\n\t\t\tdw *= $._da;\n\t\t\tdh *= $._da;\n\t\t\tsx *= $._da;\n\t\t\tsy *= $._da;\n\t\t\tsw *= $._da;\n\t\t\tsh *= $._da;\n\t\t}\n\t\tlet pd = img._pixelDensity || 1;\n\t\tif (!sw) {\n\t\t\tsw = drawable.width || drawable.videoWidth;\n\t\t} else sw *= pd;\n\t\tif (!sh) {\n\t\t\tsh = drawable.height || drawable.videoHeight;\n\t\t} else sh *= pd;\n\n\t\tif ($._tint) {\n\t\t\tif (img._retint || img._tint != $._tint) {\n\t\t\t\timg._tintImg ??= $.createImage(img.w, img.h, { pixelDensity: pd });\n\n\t\t\t\tif (img._tintImg.width != img.width || img._tintImg.height != img.height) {\n\t\t\t\t\timg._tintImg.resize(img.w, img.h);\n\t\t\t\t}\n\n\t\t\t\tlet tnt = img._tintImg.ctx;\n\t\t\t\ttnt.globalCompositeOperation = 'copy';\n\t\t\t\ttnt.fillStyle = $._tint;\n\t\t\t\ttnt.fillRect(0, 0, img.width, img.height);\n\n\t\t\t\tif (img.canvas.alpha) {\n\t\t\t\t\ttnt.globalCompositeOperation = 'destination-in';\n\t\t\t\t\ttnt.drawImage(drawable, 0, 0, img.width, img.height);\n\t\t\t\t}\n\n\t\t\t\ttnt.globalCompositeOperation = 'multiply';\n\t\t\t\ttnt.drawImage(drawable, 0, 0, img.width, img.height);\n\n\t\t\t\timg._tint = $._tint;\n\t\t\t\timg._retint = false;\n\t\t\t}\n\n\t\t\tdrawable = img._tintImg.canvas;\n\t\t}\n\n\t\tif (img.flipped) {\n\t\t\t$.ctx.save();\n\t\t\t$.ctx.translate(dx + dw, 0);\n\t\t\t$.ctx.scale(-1, 1);\n\t\t\tdx = 0;\n\t\t}\n\t\t$.ctx.drawImage(drawable, sx * pd, sy * pd, sw, sh, dx, dy, dw, dh);\n\t\tif (img.flipped) $.ctx.restore();\n\t};\n\n\t$.filter = (type, value) => {\n\t\t$.ctx.save();\n\n\t\tlet f = '';\n\n\t\tif ($.ctx.filter) {\n\t\t\tif (typeof type == 'string') {\n\t\t\t\tf = type;\n\t\t\t} else if (type == Q5.GRAY) {\n\t\t\t\tf = `saturate(0%)`;\n\t\t\t} else if (type == Q5.INVERT) {\n\t\t\t\tf = `invert(100%)`;\n\t\t\t} else if (type == Q5.BLUR) {\n\t\t\t\tlet r = Math.ceil(value * $._pixelDensity) || 1;\n\t\t\t\tf = `blur(${r}px)`;\n\t\t\t} else if (type == Q5.THRESHOLD) {\n\t\t\t\tvalue ??= 0.5;\n\t\t\t\tlet b = Math.floor((0.5 / Math.max(value, 0.00001)) * 100);\n\t\t\t\tf = `saturate(0%) brightness(${b}%) contrast(1000000%)`;\n\t\t\t} else if (type == Q5.SEPIA) {\n\t\t\t\tf = `sepia(${value ?? 1})`;\n\t\t\t} else if (type == Q5.BRIGHTNESS) {\n\t\t\t\tf = `brightness(${value ?? 1})`;\n\t\t\t} else if (type == Q5.SATURATION) {\n\t\t\t\tf = `saturate(${value ?? 1})`;\n\t\t\t} else if (type == Q5.CONTRAST) {\n\t\t\t\tf = `contrast(${value ?? 1})`;\n\t\t\t} else if (type == Q5.HUE_ROTATE) {\n\t\t\t\tlet unit = $._angleMode == 0 ? 'rad' : 'deg';\n\t\t\t\tf = `hue-rotate(${value}${unit})`;\n\t\t\t}\n\n\t\t\tif (f) {\n\t\t\t\t$.ctx.filter = f;\n\t\t\t\tif ($.ctx.filter == 'none') {\n\t\t\t\t\tthrow new Error(`Invalid filter format: ${type}`);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (!f) $._softFilter(type, value);\n\n\t\t$.ctx.globalCompositeOperation = 'source-over';\n\t\t$.ctx.drawImage($.canvas, 0, 0, $.canvas.w, $.canvas.h);\n\t\t$.ctx.restore();\n\t\t$.modified = $._retint = true;\n\t};\n\n\tif ($._scope == 'image') {\n\t\t$.resize = (w, h) => {\n\t\t\tlet c = $.canvas;\n\t\t\tlet o = new $._Canvas(c.width, c.height);\n\t\t\tlet tmpCtx = o.getContext('2d', {\n\t\t\t\tcolorSpace: c.colorSpace\n\t\t\t});\n\t\t\ttmpCtx.drawImage(c, 0, 0);\n\t\t\t$._setImageSize(w, h);\n\t\t\t$.defaultWidth = c.width * $._defaultImageScale;\n\t\t\t$.defaultHeight = c.height * $._defaultImageScale;\n\n\t\t\t$.ctx.clearRect(0, 0, c.width, c.height);\n\t\t\t$.ctx.drawImage(o, 0, 0, c.width, c.height);\n\n\t\t\t$.modified = $._retint = true;\n\t\t};\n\t}\n\n\t$._getImageData = (x, y, w, h) => {\n\t\treturn $.ctx.getImageData(x, y, w, h, { colorSpace: $.canvas.colorSpace });\n\t};\n\n\t$.trim = () => {\n\t\tlet pd = $._pixelDensity || 1;\n\t\tlet w = $.canvas.width;\n\t\tlet h = $.canvas.height;\n\t\tlet data = $._getImageData(0, 0, w, h).data;\n\t\tlet left = w,\n\t\t\tright = 0,\n\t\t\ttop = h,\n\t\t\tbottom = 0;\n\n\t\tlet i = 3;\n\t\tfor (let y = 0; y < h; y++) {\n\t\t\tfor (let x = 0; x < w; x++) {\n\t\t\t\tif (data[i] !== 0) {\n\t\t\t\t\tif (x < left) left = x;\n\t\t\t\t\tif (x > right) right = x;\n\t\t\t\t\tif (y < top) top = y;\n\t\t\t\t\tif (y > bottom) bottom = y;\n\t\t\t\t}\n\t\t\t\ti += 4;\n\t\t\t}\n\t\t}\n\t\ttop = Math.floor(top / pd);\n\t\tbottom = Math.floor(bottom / pd);\n\t\tleft = Math.floor(left / pd);\n\t\tright = Math.floor(right / pd);\n\n\t\treturn $.get(left, top, right - left + 1, bottom - top + 1);\n\t};\n\n\t$.mask = (img) => {\n\t\t$.ctx.save();\n\t\t$.ctx.resetTransform();\n\t\tlet old = $.ctx.globalCompositeOperation;\n\t\t$.ctx.globalCompositeOperation = 'destination-in';\n\t\t$.ctx.drawImage(img.canvas, 0, 0);\n\t\t$.ctx.globalCompositeOperation = old;\n\t\t$.ctx.restore();\n\n\t\t$.modified = $._retint = true;\n\t};\n\n\t$.inset = (x, y, w, h, dx, dy, dw, dh) => {\n\t\tlet pd = $._pixelDensity || 1;\n\t\t$.ctx.drawImage($.canvas, x * pd, y * pd, w * pd, h * pd, dx, dy, dw, dh);\n\n\t\t$.modified = $._retint = true;\n\t};\n\n\t$.copy = () => {\n\t\tlet img = $.get();\n\t\tfor (let prop in $) {\n\t\t\tif (typeof $[prop] != 'function' && !/(canvas|ctx|texture|textureIndex)/.test(prop)) {\n\t\t\t\timg[prop] = $[prop];\n\t\t\t}\n\t\t}\n\t\treturn img;\n\t};\n\n\t$.get = (x, y, w, h) => {\n\t\tlet pd = $._pixelDensity || 1;\n\t\tif (x !== undefined && w === undefined) {\n\t\t\tlet c = $._getImageData(x * pd, y * pd, 1, 1).data;\n\t\t\treturn [c[0], c[1], c[2], c[3] / 255];\n\t\t}\n\t\tx = Math.floor(x || 0) * pd;\n\t\ty = Math.floor(y || 0) * pd;\n\t\tw ??= $.width;\n\t\th ??= $.height;\n\t\tlet img = $.createImage(w, h, { pixelDensity: pd });\n\t\timg.ctx.drawImage($.canvas, x, y, w * pd, h * pd, 0, 0, w, h);\n\t\timg.width = w;\n\t\timg.height = h;\n\t\treturn img;\n\t};\n\n\t$.set = (x, y, c) => {\n\t\tx = Math.floor(x);\n\t\ty = Math.floor(y);\n\t\t$.modified = $._retint = true;\n\t\tif (c.canvas) {\n\t\t\tlet old = $._tint;\n\t\t\t$._tint = null;\n\t\t\t$.image(c, x, y);\n\t\t\t$._tint = old;\n\t\t\treturn;\n\t\t}\n\t\tif (!$.pixels.length) $.loadPixels();\n\t\tlet mod = $._pixelDensity || 1;\n\t\tfor (let i = 0; i < mod; i++) {\n\t\t\tfor (let j = 0; j < mod; j++) {\n\t\t\t\tlet idx = 4 * ((y * mod + i) * $.canvas.width + x * mod + j);\n\t\t\t\t$.pixels[idx] = c.r;\n\t\t\t\t$.pixels[idx + 1] = c.g;\n\t\t\t\t$.pixels[idx + 2] = c.b;\n\t\t\t\t$.pixels[idx + 3] = c.a;\n\t\t\t}\n\t\t}\n\t};\n\n\t$.loadPixels = () => {\n\t\timgData = $._getImageData(0, 0, $.canvas.width, $.canvas.height);\n\t\tq.pixels = imgData.data;\n\t};\n\t$.updatePixels = () => {\n\t\tif (imgData != null) {\n\t\t\t$.ctx.putImageData(imgData, 0, 0);\n\t\t\t$.modified = $._retint = true;\n\t\t}\n\t};\n\n\t$.smooth = () => ($.ctx.imageSmoothingEnabled = true);\n\t$.noSmooth = () => ($.ctx.imageSmoothingEnabled = false);\n\n\tif ($._scope == 'image') return;\n\n\t$._saveCanvas = async (data, ext) => {\n\t\tdata = data.canvas || data;\n\t\tif (data instanceof OffscreenCanvas) {\n\t\t\tconst blob = await data.convertToBlob({ type: 'image/' + ext });\n\n\t\t\treturn await new Promise((resolve) => {\n\t\t\t\tconst reader = new FileReader();\n\t\t\t\treader.onloadend = () => resolve(reader.result);\n\t\t\t\treader.readAsDataURL(blob);\n\t\t\t});\n\t\t}\n\t\treturn data.toDataURL('image/' + ext);\n\t};\n\n\t$.tint = function(c) {\n\t\t$._tint = (c._q5Color ? c : $.color(...arguments)).toString();\n\t};\n\t$.noTint = () => ($._tint = null);\n};\n/* software implementation of image filters */\nQ5.renderers.c2d.soft_filters = ($) => {\n\tlet u = null; // uint8 temporary buffer\n\n\tfunction ensureBuf() {\n\t\tlet l = $.canvas.width * $.canvas.height * 4;\n\t\tif (!u || u.length != l) u = new Uint8ClampedArray(l);\n\t}\n\n\tfunction initSoftFilters() {\n\t\t$._filters = [];\n\t\t$._filters[Q5.THRESHOLD] = (d, thresh) => {\n\t\t\tif (thresh === undefined) thresh = 127.5;\n\t\t\telse thresh *= 255;\n\t\t\tfor (let i = 0; i < d.length; i += 4) {\n\t\t\t\tconst gray = 0.2126 * d[i] + 0.7152 * d[i + 1] + 0.0722 * d[i + 2];\n\t\t\t\td[i] = d[i + 1] = d[i + 2] = gray >= thresh ? 255 : 0;\n\t\t\t}\n\t\t};\n\t\t$._filters[Q5.GRAY] = (d) => {\n\t\t\tfor (let i = 0; i < d.length; i += 4) {\n\t\t\t\tconst gray = 0.2126 * d[i] + 0.7152 * d[i + 1] + 0.0722 * d[i + 2];\n\t\t\t\td[i] = d[i + 1] = d[i + 2] = gray;\n\t\t\t}\n\t\t};\n\t\t$._filters[Q5.OPAQUE] = (d) => {\n\t\t\tfor (let i = 0; i < d.length; i += 4) {\n\t\t\t\td[i + 3] = 255;\n\t\t\t}\n\t\t};\n\t\t$._filters[Q5.INVERT] = (d) => {\n\t\t\tfor (let i = 0; i < d.length; i += 4) {\n\t\t\t\td[i] = 255 - d[i];\n\t\t\t\td[i + 1] = 255 - d[i + 1];\n\t\t\t\td[i + 2] = 255 - d[i + 2];\n\t\t\t}\n\t\t};\n\t\t$._filters[Q5.POSTERIZE] = (d, lvl = 4) => {\n\t\t\tlet lvl1 = lvl - 1;\n\t\t\tfor (let i = 0; i < d.length; i += 4) {\n\t\t\t\td[i] = (((d[i] * lvl) >> 8) * 255) / lvl1;\n\t\t\t\td[i + 1] = (((d[i + 1] * lvl) >> 8) * 255) / lvl1;\n\t\t\t\td[i + 2] = (((d[i + 2] * lvl) >> 8) * 255) / lvl1;\n\t\t\t}\n\t\t};\n\t\t$._filters[Q5.DILATE] = (d, func) => {\n\t\t\tfunc ??= Math.max;\n\t\t\tensureBuf();\n\t\t\tu.set(d);\n\t\t\tlet [w, h] = [$.canvas.width, $.canvas.height];\n\t\t\tfor (let i = 0; i < h; i++) {\n\t\t\t\tfor (let j = 0; j < w; j++) {\n\t\t\t\t\tlet l = 4 * Math.max(j - 1, 0);\n\t\t\t\t\tlet r = 4 * Math.min(j + 1, w - 1);\n\t\t\t\t\tlet t = 4 * Math.max(i - 1, 0) * w;\n\t\t\t\t\tlet b = 4 * Math.min(i + 1, h - 1) * w;\n\t\t\t\t\tlet oi = 4 * i * w;\n\t\t\t\t\tlet oj = 4 * j;\n\t\t\t\t\tfor (let k = 0; k < 4; k++) {\n\t\t\t\t\t\tlet kt = k + t;\n\t\t\t\t\t\tlet kb = k + b;\n\t\t\t\t\t\tlet ko = k + oi;\n\t\t\t\t\t\td[oi + oj + k] = func(u[kt + oj], u[ko + l], u[ko + oj], u[ko + r], u[kb + oj]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\t$._filters[Q5.ERODE] = (d) => {\n\t\t\t$._filters[Q5.DILATE](d, Math.min);\n\t\t};\n\t\t$._filters[Q5.BLUR] = (d, r) => {\n\t\t\tr = r || 1;\n\t\t\tr = Math.floor(r * $._pixelDensity);\n\t\t\tensureBuf();\n\t\t\tu.set(d);\n\n\t\t\tlet ksize = r * 2 + 1;\n\n\t\t\tfunction gauss(ksize) {\n\t\t\t\tlet im = new Float32Array(ksize);\n\t\t\t\tlet sigma = 0.3 * r + 0.8;\n\t\t\t\tlet ss2 = sigma * sigma * 2;\n\t\t\t\tfor (let i = 0; i < ksize; i++) {\n\t\t\t\t\tlet x = i - ksize / 2;\n\t\t\t\t\tlet z = Math.exp(-(x * x) / ss2) / (2.5066282746 * sigma);\n\t\t\t\t\tim[i] = z;\n\t\t\t\t}\n\t\t\t\treturn im;\n\t\t\t}\n\n\t\t\tlet kern = gauss(ksize);\n\t\t\tlet [w, h] = [$.canvas.width, $.canvas.height];\n\t\t\tfor (let i = 0; i < h; i++) {\n\t\t\t\tfor (let j = 0; j < w; j++) {\n\t\t\t\t\tlet s0 = 0,\n\t\t\t\t\t\ts1 = 0,\n\t\t\t\t\t\ts2 = 0,\n\t\t\t\t\t\ts3 = 0;\n\t\t\t\t\tfor (let k = 0; k < ksize; k++) {\n\t\t\t\t\t\tlet jk = Math.min(Math.max(j - r + k, 0), w - 1);\n\t\t\t\t\t\tlet idx = 4 * (i * w + jk);\n\t\t\t\t\t\ts0 += u[idx] * kern[k];\n\t\t\t\t\t\ts1 += u[idx + 1] * kern[k];\n\t\t\t\t\t\ts2 += u[idx + 2] * kern[k];\n\t\t\t\t\t\ts3 += u[idx + 3] * kern[k];\n\t\t\t\t\t}\n\t\t\t\t\tlet idx = 4 * (i * w + j);\n\t\t\t\t\td[idx] = s0;\n\t\t\t\t\td[idx + 1] = s1;\n\t\t\t\t\td[idx + 2] = s2;\n\t\t\t\t\td[idx + 3] = s3;\n\t\t\t\t}\n\t\t\t}\n\t\t\tu.set(d);\n\t\t\tfor (let i = 0; i < h; i++) {\n\t\t\t\tfor (let j = 0; j < w; j++) {\n\t\t\t\t\tlet s0 = 0,\n\t\t\t\t\t\ts1 = 0,\n\t\t\t\t\t\ts2 = 0,\n\t\t\t\t\t\ts3 = 0;\n\t\t\t\t\tfor (let k = 0; k < ksize; k++) {\n\t\t\t\t\t\tlet ik = Math.min(Math.max(i - r + k, 0), h - 1);\n\t\t\t\t\t\tlet idx = 4 * (ik * w + j);\n\t\t\t\t\t\ts0 += u[idx] * kern[k];\n\t\t\t\t\t\ts1 += u[idx + 1] * kern[k];\n\t\t\t\t\t\ts2 += u[idx + 2] * kern[k];\n\t\t\t\t\t\ts3 += u[idx + 3] * kern[k];\n\t\t\t\t\t}\n\t\t\t\t\tlet idx = 4 * (i * w + j);\n\t\t\t\t\td[idx] = s0;\n\t\t\t\t\td[idx + 1] = s1;\n\t\t\t\t\td[idx + 2] = s2;\n\t\t\t\t\td[idx + 3] = s3;\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n\n\t$._softFilter = (typ, x) => {\n\t\tif (!$._filters) initSoftFilters();\n\t\tlet imgData = $._getImageData(0, 0, $.canvas.width, $.canvas.height);\n\t\t$._filters[typ](imgData.data, x);\n\t\t$.ctx.putImageData(imgData, 0, 0);\n\t};\n};\nQ5.renderers.c2d.text = ($, q) => {\n\t$._textAlign = 'left';\n\t$._textBaseline = 'alphabetic';\n\t$._textSize = 12;\n\n\tlet font = 'sans-serif',\n\t\tleadingSet = false,\n\t\tleading = 15,\n\t\tleadDiff = 3,\n\t\temphasis = 'normal',\n\t\tweight = 'normal',\n\t\tfontMod = false,\n\t\tstyleHash = 0,\n\t\tstyleHashes = [],\n\t\tuseCache = false,\n\t\tgenTextImage = false,\n\t\tcacheSize = 0,\n\t\tcacheMax = 12000;\n\n\tlet cache = ($._textCache = {});\n\n\t$.loadFont = (url, cb) => {\n\t\tq._preloadCount++;\n\t\tlet name = url.split('/').pop().split('.')[0].replace(' ', '');\n\n\t\tlet f = new FontFace(name, `url(${url})`);\n\t\tdocument.fonts.add(f);\n\t\tf._loader = (async () => {\n\t\t\tlet err;\n\t\t\ttry {\n\t\t\t\tawait f.load();\n\t\t\t} catch (e) {\n\t\t\t\terr = e;\n\t\t\t}\n\t\t\tq._preloadCount--;\n\t\t\tdelete f._loader;\n\t\t\tif (err) throw err;\n\t\t\tif (cb) cb(f);\n\t\t\treturn f;\n\t\t})();\n\t\t$.textFont(name);\n\t\tif ($._disablePreload) return f._loader;\n\t\treturn f;\n\t};\n\n\t$.textFont = (x) => {\n\t\tif (x && typeof x != 'string') x = x.family;\n\t\tif (!x || x == font) return font;\n\t\tfont = x;\n\t\tfontMod = true;\n\t\tstyleHash = -1;\n\t};\n\n\t$.textSize = (x) => {\n\t\tif (x == undefined) return $._textSize;\n\t\tif ($._da) x *= $._da;\n\t\t$._textSize = x;\n\t\tfontMod = true;\n\t\tstyleHash = -1;\n\t\tif (!leadingSet) {\n\t\t\tleading = x * 1.25;\n\t\t\tleadDiff = leading - x;\n\t\t}\n\t};\n\n\t$.textStyle = (x) => {\n\t\tif (!x) return emphasis;\n\t\temphasis = x;\n\t\tfontMod = true;\n\t\tstyleHash = -1;\n\t};\n\n\t$.textWeight = (x) => {\n\t\tif (!x) return weight;\n\t\tweight = x;\n\t\tfontMod = true;\n\t\tstyleHash = -1;\n\t};\n\n\t$.textLeading = (x) => {\n\t\tif (x == undefined) return leading || $._textSize * 1.25;\n\t\tleadingSet = true;\n\t\tif (x == leading) return leading;\n\t\tif ($._da) x *= $._da;\n\t\tleading = x;\n\t\tleadDiff = x - $._textSize;\n\t\tstyleHash = -1;\n\t};\n\n\t$.textAlign = (horiz, vert) => {\n\t\t$.ctx.textAlign = $._textAlign = horiz;\n\t\tif (vert) {\n\t\t\t$.ctx.textBaseline = $._textBaseline = vert == $.CENTER ? 'middle' : vert;\n\t\t}\n\t};\n\n\tconst updateFont = () => {\n\t\t$.ctx.font = `${emphasis} ${weight} ${$._textSize}px ${font}`;\n\t\tfontMod = false;\n\t};\n\n\t$.textWidth = (str) => {\n\t\tif (fontMod) updateFont();\n\t\treturn $.ctx.measureText(str).width;\n\t};\n\t$.textAscent = (str) => {\n\t\tif (fontMod) updateFont();\n\t\treturn $.ctx.measureText(str).actualBoundingBoxAscent;\n\t};\n\t$.textDescent = (str) => {\n\t\tif (fontMod) updateFont();\n\t\treturn $.ctx.measureText(str).actualBoundingBoxDescent;\n\t};\n\n\t$.textFill = $.fill;\n\t$.textStroke = $.stroke;\n\n\tlet updateStyleHash = () => {\n\t\tlet styleString = font + $._textSize + emphasis + leading;\n\n\t\tlet hash = 5381;\n\t\tfor (let i = 0; i < styleString.length; i++) {\n\t\t\thash = (hash * 33) ^ styleString.charCodeAt(i);\n\t\t}\n\t\tstyleHash = hash >>> 0;\n\t};\n\n\t$.textCache = (enable, maxSize) => {\n\t\tif (maxSize) cacheMax = maxSize;\n\t\tif (enable !== undefined) useCache = enable;\n\t\treturn useCache;\n\t};\n\n\t$.createTextImage = (str, w, h) => {\n\t\tgenTextImage = true;\n\t\tlet img = $.text(str, 0, 0, w, h);\n\t\tgenTextImage = false;\n\t\treturn img;\n\t};\n\n\tlet lines = [];\n\n\t$.text = (str, x, y, w, h) => {\n\t\tif (str === undefined || (!$._doFill && !$._doStroke)) return;\n\t\tstr = str.toString();\n\t\tif ($._da) {\n\t\t\tx *= $._da;\n\t\t\ty *= $._da;\n\t\t}\n\t\tlet ctx = $.ctx;\n\t\tlet img, tX, tY;\n\n\t\tif (fontMod) updateFont();\n\n\t\tif (useCache || genTextImage) {\n\t\t\tif (styleHash == -1) updateStyleHash();\n\n\t\t\timg = cache[str];\n\t\t\tif (img) img = img[styleHash];\n\n\t\t\tif (img) {\n\t\t\t\tif (img._fill == $._fill && img._stroke == $._stroke && img._strokeWeight == $._strokeWeight) {\n\t\t\t\t\tif (genTextImage) return img;\n\t\t\t\t\treturn $.textImage(img, x, y);\n\t\t\t\t} else img.clear();\n\t\t\t}\n\t\t}\n\n\t\tif (str.indexOf('\\n') == -1) lines[0] = str;\n\t\telse lines = str.split('\\n');\n\n\t\tif (str.length > w) {\n\t\t\tlet wrapped = [];\n\t\t\tfor (let line of lines) {\n\t\t\t\tlet i = 0;\n\n\t\t\t\twhile (i < line.length) {\n\t\t\t\t\tlet max = i + w;\n\t\t\t\t\tif (max >= line.length) {\n\t\t\t\t\t\twrapped.push(line.slice(i));\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tlet end = line.lastIndexOf(' ', max);\n\t\t\t\t\tif (end === -1 || end < i) end = max;\n\t\t\t\t\twrapped.push(line.slice(i, end));\n\t\t\t\t\ti = end + 1;\n\t\t\t\t}\n\t\t\t}\n\t\t\tlines = wrapped;\n\t\t}\n\n\t\tif (!useCache && !genTextImage) {\n\t\t\ttX = x;\n\t\t\ttY = y;\n\t\t} else {\n\t\t\ttX = 0;\n\t\t\ttY = leading * lines.length;\n\n\t\t\tif (!img) {\n\t\t\t\tlet ogBaseline = $.ctx.textBaseline;\n\t\t\t\t$.ctx.textBaseline = 'alphabetic';\n\n\t\t\t\tlet measure = ctx.measureText(' ');\n\t\t\t\tlet ascent = measure.fontBoundingBoxAscent;\n\t\t\t\tlet descent = measure.fontBoundingBoxDescent;\n\n\t\t\t\t$.ctx.textBaseline = ogBaseline;\n\n\t\t\t\timg = $.createImage.call($, Math.ceil(ctx.measureText(str).width), Math.ceil(tY + descent), {\n\t\t\t\t\tpixelDensity: $._pixelDensity\n\t\t\t\t});\n\n\t\t\t\timg._ascent = ascent;\n\t\t\t\timg._descent = descent;\n\t\t\t\timg._top = descent + leadDiff;\n\t\t\t\timg._middle = img._top + ascent * 0.5;\n\t\t\t\timg._bottom = img._top + ascent;\n\t\t\t\timg._leading = leading;\n\t\t\t} else {\n\t\t\t\timg.modified = true;\n\t\t\t}\n\n\t\t\timg._fill = $._fill;\n\t\t\timg._stroke = $._stroke;\n\t\t\timg._strokeWeight = $._strokeWeight;\n\n\t\t\tctx = img.ctx;\n\n\t\t\tctx.font = $.ctx.font;\n\t\t\tctx.fillStyle = $._fill;\n\t\t\tctx.strokeStyle = $._stroke;\n\t\t\tctx.lineWidth = $.ctx.lineWidth;\n\t\t}\n\n\t\tlet ogFill;\n\t\tif (!$._fillSet) {\n\t\t\togFill = ctx.fillStyle;\n\t\t\tctx.fillStyle = 'black';\n\t\t}\n\n\t\tlet lineAmount = 0;\n\t\tfor (let line of lines) {\n\t\t\tif ($._doStroke && $._strokeSet) ctx.strokeText(line, tX, tY);\n\t\t\tif ($._doFill) ctx.fillText(line, tX, tY);\n\t\t\ttY += leading;\n\t\t\tlineAmount++;\n\t\t\tif (lineAmount >= h) break;\n\t\t}\n\t\tlines = [];\n\n\t\tif (!$._fillSet) ctx.fillStyle = ogFill;\n\n\t\tif (useCache || genTextImage) {\n\t\t\tstyleHashes.push(styleHash);\n\t\t\t(cache[str] ??= {})[styleHash] = img;\n\n\t\t\tcacheSize++;\n\t\t\tif (cacheSize > cacheMax) {\n\t\t\t\tlet half = Math.ceil(cacheSize / 2);\n\t\t\t\tlet hashes = styleHashes.splice(0, half);\n\t\t\t\tfor (let s in cache) {\n\t\t\t\t\ts = cache[s];\n\t\t\t\t\tfor (let h of hashes) delete s[h];\n\t\t\t\t}\n\t\t\t\tcacheSize -= half;\n\t\t\t}\n\n\t\t\tif (genTextImage) return img;\n\t\t\t$.textImage(img, x, y);\n\t\t}\n\t};\n\n\t$.textImage = (img, x, y) => {\n\t\tif (typeof img == 'string') img = $.createTextImage(img);\n\n\t\tlet og = $._imageMode;\n\t\t$._imageMode = 'corner';\n\n\t\tlet ta = $._textAlign;\n\t\tif (ta == 'center') x -= img.canvas.hw;\n\t\telse if (ta == 'right') x -= img.width;\n\n\t\tlet bl = $._textBaseline;\n\t\tif (bl == 'alphabetic') y -= img._leading;\n\t\telse if (bl == 'middle') y -= img._middle;\n\t\telse if (bl == 'bottom') y -= img._bottom;\n\t\telse if (bl == 'top') y -= img._top;\n\n\t\t$.image(img, x, y);\n\t\t$._imageMode = og;\n\t};\n};\n\nQ5.fonts = [];\nQ5.modules.color = ($, q) => {\n\t$.RGB = $.RGBA = $.RGBHDR = $._colorMode = 'rgb';\n\t$.HSL = 'hsl';\n\t$.HSB = 'hsb';\n\t$.OKLCH = 'oklch';\n\n\t$.SRGB = 'srgb';\n\t$.DISPLAY_P3 = 'display-p3';\n\n\t$.colorMode = (mode, format, gamut) => {\n\t\t$._colorMode = mode;\n\t\tlet srgb = $.canvas.colorSpace == 'srgb' || gamut == 'srgb';\n\t\tformat ??= mode == 'rgb' ? ($.canvas.renderer == 'c2d' || srgb ? 255 : 1) : 1;\n\t\t$._colorFormat = format == 'integer' || format == 255 ? 255 : 1;\n\t\tif (mode == 'oklch') {\n\t\t\tq.Color = Q5.ColorOKLCH;\n\t\t} else if (mode == 'hsl') {\n\t\t\tq.Color = srgb ? Q5.ColorHSL : Q5.ColorHSL_P3;\n\t\t} else if (mode == 'hsb') {\n\t\t\tq.Color = srgb ? Q5.ColorHSB : Q5.ColorHSB_P3;\n\t\t} else {\n\t\t\tif ($._colorFormat == 255) {\n\t\t\t\tq.Color = srgb ? Q5.ColorRGB_8 : Q5.ColorRGB_P3_8;\n\t\t\t} else {\n\t\t\t\tq.Color = srgb ? Q5.ColorRGB : Q5.ColorRGB_P3;\n\t\t\t}\n\t\t\t$._colorMode = 'rgb';\n\t\t}\n\t};\n\n\t$._namedColors = {\n\t\taqua: [0, 255, 255],\n\t\tblack: [0, 0, 0],\n\t\tblue: [0, 0, 255],\n\t\tbrown: [165, 42, 42],\n\t\tcrimson: [220, 20, 60],\n\t\tcyan: [0, 255, 255],\n\t\tdarkviolet: [148, 0, 211],\n\t\tgold: [255, 215, 0],\n\t\tgreen: [0, 128, 0],\n\t\tgray: [128, 128, 128],\n\t\tgrey: [128, 128, 128],\n\t\thotpink: [255, 105, 180],\n\t\tindigo: [75, 0, 130],\n\t\tkhaki: [240, 230, 140],\n\t\tlightgreen: [144, 238, 144],\n\t\tlime: [0, 255, 0],\n\t\tmagenta: [255, 0, 255],\n\t\tnavy: [0, 0, 128],\n\t\torange: [255, 165, 0],\n\t\tolive: [128, 128, 0],\n\t\tpeachpuff: [255, 218, 185],\n\t\tpink: [255, 192, 203],\n\t\tpurple: [128, 0, 128],\n\t\tred: [255, 0, 0],\n\t\tskyblue: [135, 206, 235],\n\t\ttan: [210, 180, 140],\n\t\tturquoise: [64, 224, 208],\n\t\ttransparent: [0, 0, 0, 0],\n\t\twhite: [255, 255, 255],\n\t\tviolet: [238, 130, 238],\n\t\tyellow: [255, 255, 0]\n\t};\n\n\t$.color = (c0, c1, c2, c3) => {\n\t\tlet C = $.Color;\n\t\tif (c0._q5Color) return new C(...c0.levels);\n\t\tif (c1 == undefined) {\n\t\t\tif (typeof c0 == 'string') {\n\t\t\t\tif (c0[0] == '#') {\n\t\t\t\t\tif (c0.length <= 5) {\n\t\t\t\t\t\tif (c0.length > 4) c3 = parseInt(c0[4] + c0[4], 16);\n\t\t\t\t\t\tc2 = parseInt(c0[3] + c0[3], 16);\n\t\t\t\t\t\tc1 = parseInt(c0[2] + c0[2], 16);\n\t\t\t\t\t\tc0 = parseInt(c0[1] + c0[1], 16);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (c0.length > 7) c3 = parseInt(c0.slice(7, 9), 16);\n\t\t\t\t\t\tc2 = parseInt(c0.slice(5, 7), 16);\n\t\t\t\t\t\tc1 = parseInt(c0.slice(3, 5), 16);\n\t\t\t\t\t\tc0 = parseInt(c0.slice(1, 3), 16);\n\t\t\t\t\t}\n\t\t\t\t} else if ($._namedColors[c0]) {\n\t\t\t\t\t[c0, c1, c2, c3] = $._namedColors[c0];\n\t\t\t\t} else {\n\t\t\t\t\t// css color string not parsed\n\t\t\t\t\tlet c = new C(0, 0, 0);\n\t\t\t\t\tc._css = c0;\n\t\t\t\t\tc.toString = function() {\n\t\t\t\t\t\treturn this._css;\n\t\t\t\t\t};\n\t\t\t\t\treturn c;\n\t\t\t\t}\n\n\t\t\t\tif ($._colorFormat == 1) {\n\t\t\t\t\tc0 /= 255;\n\t\t\t\t\tif (c1) c1 /= 255;\n\t\t\t\t\tif (c2) c2 /= 255;\n\t\t\t\t\tif (c3) c3 /= 255;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (Array.isArray(c0) || c0.constructor == Float32Array) {\n\t\t\t\t[c0, c1, c2, c3] = c0;\n\t\t\t}\n\t\t}\n\n\t\tif (c2 == undefined) {\n\t\t\tif ($._colorMode == Q5.OKLCH) return new C(c0, 0, 0, c1);\n\t\t\treturn new C(c0, c0, c0, c1);\n\t\t}\n\t\treturn new C(c0, c1, c2, c3);\n\t};\n\n\t// deprecated\n\t$.red = (c) => c.r;\n\t$.green = (c) => c.g;\n\t$.blue = (c) => c.b;\n\t$.alpha = (c) => c.a;\n\n\t$.lightness = (c) => {\n\t\tif (c.l) return c.l;\n\t\tlet l = (0.2126 * c.r + 0.7152 * c.g + 0.0722 * c.b) * 100;\n\t\treturn $._colorFormat == 255 ? l / 255 : l;\n\t};\n\t$.hue = (c) => {\n\t\tif (c.h) return c.h;\n\t\tlet r = c.r;\n\t\tlet g = c.g;\n\t\tlet b = c.b;\n\t\tif ($._colorFormat == 255) {\n\t\t\tr /= 255;\n\t\t\tg /= 255;\n\t\t\tb /= 255;\n\t\t}\n\t\tlet max = Math.max(r, g, b);\n\t\tlet min = Math.min(r, g, b);\n\t\tlet h;\n\t\tif (max == min) h = 0;\n\t\telse if (max == r) h = (60 * (g - b)) / (max - min);\n\t\telse if (max == g) h = (60 * (b - r)) / (max - min) + 120;\n\t\telse h = (60 * (r - g)) / (max - min) + 240;\n\t\tif (h < 0) h += 360;\n\t\treturn h;\n\t};\n\n\t$.lerpColor = (a, b, t) => {\n\t\tt = Math.max(0, Math.min(1, t));\n\t\tif ($._colorMode == 'rgb') {\n\t\t\treturn new $.Color($.lerp(a.r, b.r, t), $.lerp(a.g, b.g, t), $.lerp(a.b, b.b, t), $.lerp(a.a, b.a, t));\n\t\t} else {\n\t\t\tlet deltaH = b.h - a.h;\n\t\t\tif (deltaH > 180) deltaH -= 360;\n\t\t\tif (deltaH < -180) deltaH += 360;\n\t\t\tlet h = a.h + t * deltaH;\n\t\t\tif (h < 0) h += 360;\n\t\t\tif (h > 360) h -= 360;\n\t\t\treturn new $.Color($.lerp(a.l, b.l, t), $.lerp(a.c, b.c, t), h, $.lerp(a.a, b.a, t));\n\t\t}\n\t};\n};\n\n// COLOR CLASSES\n\nQ5.Color = class {\n\tconstructor() {\n\t\tthis._q5Color = true;\n\t}\n\tget alpha() {\n\t\treturn this.a;\n\t}\n\tset alpha(v) {\n\t\tthis.a = v;\n\t}\n};\n\nQ5.ColorOKLCH = class extends Q5.Color {\n\tconstructor(l, c, h, a) {\n\t\tsuper();\n\t\tthis.l = l;\n\t\tthis.c = c;\n\t\tthis.h = h;\n\t\tthis.a = a ?? 1;\n\t}\n\tget levels() {\n\t\treturn [this.l, this.c, this.h, this.a];\n\t}\n\tequals(c) {\n\t\treturn c && this.l == c.l && this.c == c.c && this.h == c.h && this.a == c.a;\n\t}\n\tisSameColor(c) {\n\t\treturn c && this.l == c.l && this.c == c.c && this.h == c.h;\n\t}\n\ttoString() {\n\t\treturn `oklch(${this.l} ${this.c} ${this.h} / ${this.a})`;\n\t}\n\n\tget lightness() {\n\t\treturn this.l;\n\t}\n\tset lightness(v) {\n\t\tthis.l = v;\n\t}\n\tget chroma() {\n\t\treturn this.c;\n\t}\n\tset chroma(v) {\n\t\tthis.c = v;\n\t}\n\tget hue() {\n\t\treturn this.h;\n\t}\n\tset hue(v) {\n\t\tthis.h = v;\n\t}\n};\n\nQ5.ColorRGB = class extends Q5.Color {\n\tconstructor(r, g, b, a) {\n\t\tsuper();\n\t\tthis.r = r;\n\t\tthis.g = g;\n\t\tthis.b = b;\n\t\tthis.a = a ?? 1;\n\t}\n\tget levels() {\n\t\treturn [this.r, this.g, this.b, this.a];\n\t}\n\tequals(c) {\n\t\treturn c && this.r == c.r && this.g == c.g && this.b == c.b && this.a == c.a;\n\t}\n\tisSameColor(c) {\n\t\treturn c && this.r == c.r && this.g == c.g && this.b == c.b;\n\t}\n\ttoString() {\n\t\treturn `color(srgb ${this.r} ${this.g} ${this.b} / ${this.a})`;\n\t}\n\n\tget red() {\n\t\treturn this.r;\n\t}\n\tset red(v) {\n\t\tthis.r = v;\n\t}\n\tget green() {\n\t\treturn this.g;\n\t}\n\tset green(v) {\n\t\tthis.g = v;\n\t}\n\tget blue() {\n\t\treturn this.b;\n\t}\n\tset blue(v) {\n\t\tthis.b = v;\n\t}\n};\n\nQ5.ColorRGB_P3 = class extends Q5.ColorRGB {\n\ttoString() {\n\t\treturn `color(display-p3 ${this.r} ${this.g} ${this.b} / ${this.a})`;\n\t}\n};\n\n// legacy 8-bit (0-255) integer color format, srgb color space\nQ5.ColorRGB_8 = class extends Q5.ColorRGB {\n\tconstructor(r, g, b, a) {\n\t\tsuper(r, g, b, a ?? 255);\n\t}\n\t// deprecated set functions for backwards compatibility\n\tsetRed(v) {\n\t\tthis.r = v;\n\t}\n\tsetGreen(v) {\n\t\tthis.g = v;\n\t}\n\tsetBlue(v) {\n\t\tthis.b = v;\n\t}\n\tsetAlpha(v) {\n\t\tthis.a = v;\n\t}\n\ttoString() {\n\t\treturn `rgb(${this.r} ${this.g} ${this.b} / ${this.a / 255})`;\n\t}\n};\n\n// p3 10-bit color in integer color format, for backwards compatibility\nQ5.ColorRGB_P3_8 = class extends Q5.ColorRGB_8 {\n\tconstructor(r, g, b, a) {\n\t\tsuper(r, g, b, a ?? 255);\n\t\tthis._edited = true;\n\t}\n\tget r() {\n\t\treturn this._r;\n\t}\n\tset r(v) {\n\t\tthis._r = v;\n\t\tthis._edited = true;\n\t}\n\tget g() {\n\t\treturn this._g;\n\t}\n\tset g(v) {\n\t\tthis._g = v;\n\t\tthis._edited = true;\n\t}\n\tget b() {\n\t\treturn this._b;\n\t}\n\tset b(v) {\n\t\tthis._b = v;\n\t\tthis._edited = true;\n\t}\n\tget a() {\n\t\treturn this._a;\n\t}\n\tset a(v) {\n\t\tthis._a = v;\n\t\tthis._edited = true;\n\t}\n\ttoString() {\n\t\tif (this._edited) {\n\t\t\tlet r = (this._r / 255).toFixed(3);\n\t\t\tlet g = (this._g / 255).toFixed(3);\n\t\t\tlet b = (this._b / 255).toFixed(3);\n\t\t\tlet a = (this._a / 255).toFixed(3);\n\t\t\tthis._css = `color(display-p3 ${r} ${g} ${b} / ${a})`;\n\t\t\tthis._edited = false;\n\t\t}\n\t\treturn this._css;\n\t}\n};\n\nQ5.ColorHSL = class extends Q5.Color {\n\tconstructor(h, s, l, a) {\n\t\tsuper();\n\t\tthis.h = h;\n\t\tthis.s = s;\n\t\tthis.l = l;\n\t\tthis.a = a ?? 1;\n\t}\n\tget levels() {\n\t\treturn [this.h, this.s, this.l, this.a];\n\t}\n\tequals(c) {\n\t\treturn c && this.h == c.h && this.s == c.s && this.l == c.l && this.a == c.a;\n\t}\n\tisSameColor(c) {\n\t\treturn c && this.h == c.h && this.s == c.s && this.l == c.l;\n\t}\n\ttoString() {\n\t\treturn `hsl(${this.h} ${this.s} ${this.l} / ${this.a})`;\n\t}\n\n\tget hue() {\n\t\treturn this.h;\n\t}\n\tset hue(v) {\n\t\tthis.h = v;\n\t}\n\tget saturation() {\n\t\treturn this.s;\n\t}\n\tset saturation(v) {\n\t\tthis.s = v;\n\t}\n\tget lightness() {\n\t\treturn this.l;\n\t}\n\tset lightness(v) {\n\t\tthis.l = v;\n\t}\n};\n\nQ5.ColorHSL_P3 = class extends Q5.ColorHSL {\n\ttoString() {\n\t\tlet o = Q5.HSLtoRGB(this.h, this.s, this.l);\n\t\treturn `color(display-p3 ${o.join(' ')} / ${this.a})`;\n\t}\n};\n\nQ5.ColorHSB = class extends Q5.ColorHSL {\n\tconstructor(h, s, b, a) {\n\t\tsuper(h, s, b, a);\n\t\tdelete this.l;\n\t\tthis.b = b;\n\t}\n\tget levels() {\n\t\treturn [this.h, this.s, this.b, this.a];\n\t}\n\tequals(c) {\n\t\treturn c && this.h == c.h && this.s == c.s && this.b == c.b && this.a == c.a;\n\t}\n\tisSameColor(c) {\n\t\treturn c && this.h == c.h && this.s == c.s && this.b == c.b;\n\t}\n\ttoString() {\n\t\tlet o = Q5.HSBtoHSL(this.h, this.s, this.b);\n\t\treturn `hsl(${o.join(' ')} / ${this.a})`;\n\t}\n\n\tget v() {\n\t\treturn this.b;\n\t}\n\tset v(v) {\n\t\tthis.b = v;\n\t}\n\tget brightness() {\n\t\treturn this.b;\n\t}\n\tset brightness(v) {\n\t\tthis.b = v;\n\t}\n\tget value() {\n\t\treturn this.b;\n\t}\n\tset value(v) {\n\t\tthis.b = v;\n\t}\n};\n\nQ5.ColorHSB_P3 = class extends Q5.ColorHSB {\n\ttoString() {\n\t\tlet o = Q5.HSLtoRGB(...Q5.HSBtoHSL(this.h, this.s, this.b));\n\t\treturn `color(display-p3 ${o.join(' ')} / ${this.a})`;\n\t}\n};\n\nQ5.HSLtoRGB = (h, s, l) => {\n\tl /= 100;\n\tlet m = (s / 100) * Math.min(l, 1 - l);\n\tlet f = (n, k = (n + h / 30) % 12) => l - m * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n\treturn [f(0), f(8), f(4)];\n};\n\nQ5.HSBtoHSL = (h, s, v, l = v * (1 - s / 200)) => [h, !l || l == 100 ? 0 : ((v - l) / Math.min(l, 100 - l)) * 100, l];\n\n{\n\tconst multiplyMatrices = (A, B) => [\n\t\tA[0] * B[0] + A[1] * B[1] + A[2] * B[2],\n\t\tA[3] * B[0] + A[4] * B[1] + A[5] * B[2],\n\t\tA[6] * B[0] + A[7] * B[1] + A[8] * B[2]\n\t];\n\n\tconst oklch2oklab = (l, c, h) => [\n\t\tl,\n\t\tisNaN(h) ? 0 : c * Math.cos((h * Math.PI) / 180),\n\t\tisNaN(h) ? 0 : c * Math.sin((h * Math.PI) / 180)\n\t];\n\n\tconst srgbLinear2rgb = (rgb) =>\n\t\trgb.map((c) =>\n\t\t\tMath.max(\n\t\t\t\t0,\n\t\t\t\tMath.min(1, Math.abs(c) > 0.0031308 ? (c < 0 ? -1 : 1) * (1.055 * Math.abs(c) ** (1 / 2.4) - 0.055) : 12.92 * c)\n\t\t\t)\n\t\t);\n\n\tconst oklab2xyz = (lab) => {\n\t\tconst LMSg = multiplyMatrices(\n\t\t\t[\n\t\t\t\t1, 0.3963377773761749, 0.2158037573099136, 1, -0.1055613458156586, -0.0638541728258133, 1, -0.0894841775298119,\n\t\t\t\t-1.2914855480194092\n\t\t\t],\n\t\t\tlab\n\t\t);\n\t\treturn multiplyMatrices(\n\t\t\t[\n\t\t\t\t1.2268798758459243, -0.5578149944602171, 0.2813910456659647, -0.0405757452148008, 1.112286803280317,\n\t\t\t\t-0.0717110580655164, -0.0763729366746601, -0.4214933324022432, 1.5869240198367816\n\t\t\t],\n\t\t\tLMSg.map((val) => val ** 3)\n\t\t);\n\t};\n\tconst xyz2rgbLinear = (xyz) =>\n\t\tmultiplyMatrices(\n\t\t\t[\n\t\t\t\t3.2409699419045226, -1.537383177570094, -0.4986107602930034, -0.9692436362808796, 1.8759675015077202,\n\t\t\t\t0.04155505740717559, 0.05563007969699366, -0.20397695888897652, 1.0569715142428786\n\t\t\t],\n\t\t\txyz\n\t\t);\n\n\tQ5.OKLCHtoRGB = (l, c, h) => srgbLinear2rgb(xyz2rgbLinear(oklab2xyz(oklch2oklab(l, c, h))));\n}\nQ5.modules.display = ($) => {\n\tif (!$.canvas || $._scope == 'graphics') return;\n\n\tlet c = $.canvas;\n\n\t$.CENTERED = 'centered';\n\t$.FULLSCREEN = 'fullscreen';\n\t$.MAXED = 'maxed';\n\n\t$.PIXELATED = 'pixelated';\n\n\tif (Q5._instanceCount == 0 && !Q5._server) {\n\t\tdocument.head.insertAdjacentHTML(\n\t\t\t'beforeend',\n\t\t\t`<style>\nhtml, body {\n\tmargin: 0;\n\tpadding: 0;\n}\n.q5Canvas {\n\toutline: none;\n\t-webkit-touch-callout: none;\n\t-webkit-text-size-adjust: none;\n\t-webkit-user-select: none;\n\toverscroll-behavior: none;\n}\n.q5-pixelated {\n\timage-rendering: pixelated;\n\tfont-smooth: never;\n\t-webkit-font-smoothing: none;\n}\n.q5-centered,\n.q5-maxed,\n.q5-fullscreen {\n  display: flex;\n\talign-items: center;\n\tjustify-content: center;\n}\nmain.q5-centered,\nmain.q5-maxed,\n.q5-fullscreen {\n\theight: 100vh;\n}\nmain {\n\toverscroll-behavior: none;\n}\n</style>`\n\t\t);\n\t}\n\n\t$._adjustDisplay = () => {\n\t\tlet s = c.style;\n\t\tlet p = c.parentElement;\n\t\tif (!s || !p || !c.displayMode) return;\n\t\tif (c.renderQuality == 'pixelated') {\n\t\t\tc.classList.add('q5-pixelated');\n\t\t\t$.pixelDensity(1);\n\t\t\t$.defaultImageScale(1);\n\t\t\tif ($.noSmooth) $.noSmooth();\n\t\t\tif ($.textFont) $.textFont('monospace');\n\t\t}\n\t\tif (c.displayMode == 'default' || c.displayMode == 'normal') {\n\t\t\tp.classList.remove('q5-centered', 'q5-maxed', 'q5-fullscreen');\n\t\t\ts.width = c.w * c.displayScale + 'px';\n\t\t\ts.height = c.h * c.displayScale + 'px';\n\t\t} else {\n\t\t\tp.classList.add('q5-' + c.displayMode);\n\t\t\tp = p.getBoundingClientRect();\n\t\t\tif (c.w / c.h > p.width / p.height) {\n\t\t\t\tif (c.displayMode == 'centered') {\n\t\t\t\t\ts.width = c.w * c.displayScale + 'px';\n\t\t\t\t\ts.maxWidth = '100%';\n\t\t\t\t} else s.width = '100%';\n\t\t\t\ts.height = 'auto';\n\t\t\t\ts.maxHeight = '';\n\t\t\t} else {\n\t\t\t\ts.width = 'auto';\n\t\t\t\ts.maxWidth = '';\n\t\t\t\tif (c.displayMode == 'centered') {\n\t\t\t\t\ts.height = c.h * c.displayScale + 'px';\n\t\t\t\t\ts.maxHeight = '100%';\n\t\t\t\t} else s.height = '100%';\n\t\t\t}\n\t\t}\n\t};\n\n\t$.displayMode = (displayMode = 'normal', renderQuality = 'smooth', displayScale = 1) => {\n\t\tif (typeof displayScale == 'string') {\n\t\t\tdisplayScale = parseFloat(displayScale.slice(1));\n\t\t}\n\t\tif (displayMode == 'center') displayMode = 'centered';\n\t\tObject.assign(c, { displayMode, renderQuality, displayScale });\n\t\tif ($.ctx) $.pushStyles();\n\t\t$._adjustDisplay();\n\t\tif ($.ctx) $.popStyles();\n\t};\n\n\t$.fullscreen = (v) => {\n\t\tif (v === undefined) return document.fullscreenElement;\n\t\tif (v) document.body.requestFullscreen();\n\t\telse document.body.exitFullscreen();\n\t};\n};\nQ5.modules.dom = ($, q) => {\n\t$.elementMode = (mode) => ($._elementMode = mode);\n\n\t$.createElement = (tag, content) => {\n\t\tlet el = document.createElement(tag);\n\n\t\tif ($._elementMode == 'center') {\n\t\t\tel.style.transform = 'translate(-50%, -50%)';\n\t\t}\n\n\t\tif (content) el.innerHTML = content;\n\n\t\tObject.defineProperty(el, 'x', {\n\t\t\tget: () => el._x,\n\t\t\tset: (v) => {\n\t\t\t\tlet pos = el.style.position;\n\t\t\t\tif (!pos || pos == 'relative') {\n\t\t\t\t\tel.style.position = 'absolute';\n\t\t\t\t}\n\t\t\t\tlet x = $.canvas.offsetLeft + v;\n\t\t\t\tel.style.left = x + 'px';\n\t\t\t\tel._x = x;\n\t\t\t}\n\t\t});\n\n\t\tObject.defineProperty(el, 'y', {\n\t\t\tget: () => el._y,\n\t\t\tset: (v) => {\n\t\t\t\tlet pos = el.style.position;\n\t\t\t\tif (!pos || pos == 'relative') {\n\t\t\t\t\tel.style.position = 'absolute';\n\t\t\t\t}\n\t\t\t\tlet y = $.canvas.offsetTop + v;\n\t\t\t\tel.style.top = y + 'px';\n\t\t\t\tel._y = y;\n\t\t\t}\n\t\t});\n\n\t\tObject.defineProperty(el, 'width', {\n\t\t\tget: () => parseFloat(el.style.width || 0),\n\t\t\tset: (v) => (el.style.width = v + 'px')\n\t\t});\n\n\t\tObject.defineProperty(el, 'height', {\n\t\t\tget: () => parseFloat(el.style.height || 0),\n\t\t\tset: (v) => (el.style.height = v + 'px')\n\t\t});\n\n\t\tel.position = (x, y, scheme) => {\n\t\t\tif (scheme) el.style.position = scheme;\n\t\t\tel.x = x;\n\t\t\tel.y = y;\n\t\t\treturn el;\n\t\t};\n\n\t\t// the existing size property of input elements must be overwritten\n\t\tObject.defineProperty(el, 'size', {\n\t\t\twritable: true\n\t\t});\n\n\t\tel.size = (w, h) => {\n\t\t\tel.width = w;\n\t\t\tel.height = h;\n\t\t\treturn el;\n\t\t};\n\n\t\tel.center = () => {\n\t\t\tel.style.position = 'absolute';\n\t\t\tel.x = $.canvas.hw;\n\t\t\tel.y = $.canvas.hh;\n\t\t\treturn el;\n\t\t};\n\n\t\tel.show = () => {\n\t\t\tel.style.display = '';\n\t\t\treturn el;\n\t\t};\n\n\t\tel.hide = () => {\n\t\t\tel.style.display = 'none';\n\t\t\treturn el;\n\t\t};\n\n\t\tel.parent = (parent) => {\n\t\t\tparent.append(el);\n\t\t\treturn el;\n\t\t};\n\n\t\t$._addEventMethods(el);\n\n\t\t$._elements.push(el);\n\t\tif ($.canvas) $.canvas.parentElement.append(el);\n\t\telse document.body.append(el);\n\n\t\treturn el;\n\t};\n\t$.createEl = $.createElement;\n\n\t$._addEventMethods = (el) => {\n\t\tlet l = el.addEventListener;\n\t\tel.mousePressed = (cb) => l('mousedown', cb);\n\t\tel.mouseReleased = (cb) => l('mouseup', cb);\n\t\tel.mouseClicked = (cb) => l('click', cb);\n\t\tel.mouseMoved = (cb) => l('mousemove', cb);\n\t\tel.mouseWheel = (cb) => l('wheel', cb);\n\t};\n\n\t$.createA = (href, content, newTab) => {\n\t\tlet el = $.createEl('a', content);\n\t\tel.href = href;\n\t\tel.target = newTab ? '_blank' : '_self';\n\t\treturn el;\n\t};\n\n\t$.createButton = (content) => $.createEl('button', content);\n\n\t$.createCheckbox = (label = '', checked = false) => {\n\t\tlet el = $.createEl('input');\n\t\tel.type = 'checkbox';\n\t\tel.checked = checked;\n\t\tlet lbl = $.createEl('label', label);\n\t\tlbl.addEventListener('click', () => {\n\t\t\tel.checked = !el.checked;\n\t\t\tel.dispatchEvent(new Event('input', { bubbles: true }));\n\t\t\tel.dispatchEvent(new Event('change', { bubbles: true }));\n\t\t});\n\t\tel.insertAdjacentElement('afterend', lbl);\n\t\tel.label = lbl;\n\t\treturn el;\n\t};\n\n\t$.createColorPicker = (value = '#ffffff') => {\n\t\tlet el = $.createEl('input');\n\t\tel.type = 'color';\n\t\tel.value = value.toString();\n\t\treturn el;\n\t};\n\n\t$.createDiv = (content) => $.createEl('div', content);\n\n\t$.createImg = (src) => {\n\t\tlet el = $.createEl('img');\n\t\tel.crossOrigin = 'anonymous';\n\t\tel.src = src;\n\t\treturn el;\n\t};\n\n\t$.createInput = (value = '', type = 'text') => {\n\t\tlet el = $.createEl('input');\n\t\tel.value = value;\n\t\tel.type = type;\n\t\tel.style.boxSizing = 'border-box';\n\t\treturn el;\n\t};\n\n\t$.createP = (content) => $.createEl('p', content);\n\n\tlet radioCount = 0;\n\t$.createRadio = (name) => {\n\t\tlet el = $.createEl('div');\n\t\tel.name = name || 'radio' + radioCount++;\n\t\tel.buttons = [];\n\t\tObject.defineProperty(el, 'value', {\n\t\t\tget: () => el.selected?.value,\n\t\t\tset: (v) => {\n\t\t\t\tlet btn = el.buttons.find((b) => b.value == v);\n\t\t\t\tif (btn) {\n\t\t\t\t\tbtn.checked = true;\n\t\t\t\t\tel.selected = btn;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\tel.option = (label, value) => {\n\t\t\tlet btn = $.createEl('input');\n\t\t\tbtn.type = 'radio';\n\t\t\tbtn.name = el.name;\n\t\t\tbtn.value = value || label;\n\t\t\tbtn.addEventListener('input', () => (el.selected = btn));\n\n\t\t\tlet lbl = $.createEl('label', label);\n\t\t\tlbl.addEventListener('click', () => {\n\t\t\t\tbtn.checked = true;\n\t\t\t\tel.selected = btn;\n\t\t\t\tbtn.dispatchEvent(new Event('input', { bubbles: true }));\n\t\t\t\tbtn.dispatchEvent(new Event('change', { bubbles: true }));\n\t\t\t});\n\n\t\t\tbtn.label = lbl;\n\t\t\tel.append(btn);\n\t\t\tel.append(lbl);\n\t\t\tel.buttons.push(btn);\n\t\t\treturn el;\n\t\t};\n\n\t\treturn el;\n\t};\n\n\t$.createSelect = (placeholder) => {\n\t\tlet el = $.createEl('select');\n\t\tif (placeholder) {\n\t\t\tlet opt = $.createEl('option', placeholder);\n\t\t\topt.disabled = true;\n\t\t\topt.selected = true;\n\t\t\tel.append(opt);\n\t\t}\n\t\tObject.defineProperty(el, 'selected', {\n\t\t\tget: () => {\n\t\t\t\tif (el.multiple) {\n\t\t\t\t\treturn Array.from(el.selectedOptions).map((opt) => opt.textContent);\n\t\t\t\t}\n\t\t\t\treturn el.selectedOptions[0]?.textContent;\n\t\t\t},\n\t\t\tset: (v) => {\n\t\t\t\tif (el.multiple) {\n\t\t\t\t\tArray.from(el.options).forEach((opt) => {\n\t\t\t\t\t\topt.selected = v.includes(opt.textContent);\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tconst option = Array.from(el.options).find((opt) => opt.textContent === v);\n\t\t\t\t\tif (option) option.selected = true;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(el, 'value', {\n\t\t\tget: () => {\n\t\t\t\tif (el.multiple) {\n\t\t\t\t\treturn Array.from(el.selectedOptions).map((o) => o.value);\n\t\t\t\t}\n\t\t\t\treturn el.selectedOptions[0]?.value;\n\t\t\t},\n\t\t\tset: (v) => {\n\t\t\t\tif (el.multiple) {\n\t\t\t\t\tel.options.forEach((o) => (o.selected = v.includes(o.value)));\n\t\t\t\t} else {\n\t\t\t\t\tlet opt;\n\t\t\t\t\tfor (let i = 0; i < el.options.length; i++) {\n\t\t\t\t\t\tif (el.options[i].value == v) {\n\t\t\t\t\t\t\topt = el.options[i];\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (opt) opt.selected = true;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\tel.option = (label, value) => {\n\t\t\tlet opt = $.createEl('option', label);\n\t\t\topt.value = value || label;\n\t\t\tel.append(opt);\n\t\t\treturn el;\n\t\t};\n\t\treturn el;\n\t};\n\n\t$.createSlider = (min, max, value, step) => {\n\t\tlet el = $.createEl('input');\n\t\tel.type = 'range';\n\t\tel.min = min;\n\t\tel.max = max;\n\t\tel.value = value;\n\t\tel.step = step;\n\t\tel.val = () => parseFloat(el.value);\n\t\treturn el;\n\t};\n\n\t$.createSpan = (content) => $.createEl('span', content);\n\n\t$.createVideo = (src) => {\n\t\tlet el = $.createEl('video');\n\t\tel.crossOrigin = 'anonymous';\n\n\t\tel._load = () => {\n\t\t\tel.width ||= el.videoWidth;\n\t\t\tel.height ||= el.videoHeight;\n\t\t\tel.defaultWidth = el.width * $._defaultImageScale;\n\t\t\tel.defaultHeight = el.height * $._defaultImageScale;\n\t\t\tel.ready = true;\n\t\t};\n\n\t\tif (src) {\n\t\t\tq._preloadCount++;\n\t\t\tel._loader = new Promise((resolve) => {\n\t\t\t\tel.addEventListener('loadeddata', () => {\n\t\t\t\t\tel._load();\n\t\t\t\t\tq._preloadCount--;\n\t\t\t\t\tresolve(el);\n\t\t\t\t});\n\t\t\t\tel.src = src;\n\t\t\t});\n\n\t\t\tif ($._disablePreload) return el._loader;\n\t\t}\n\t\treturn el;\n\t};\n\n\t$.createCapture = function(type, flipped = true, cb) {\n\t\tq._preloadCount++;\n\n\t\tlet constraints = typeof type == 'string' ? { [type]: true } : type || { video: true, audio: true };\n\n\t\tif (constraints.video === true) {\n\t\t\t// basically request the highest resolution possible\n\t\t\tconstraints.video = { width: 3840, height: 2160 };\n\t\t}\n\t\tconstraints.video.facingMode ??= 'user';\n\n\t\tlet vid = $.createVideo();\n\t\tvid.playsinline = vid.autoplay = true;\n\t\tif (flipped) {\n\t\t\tvid.flipped = true;\n\t\t\tvid.style.transform = 'scale(-1, 1)';\n\t\t}\n\t\tvid.loadPixels = () => {\n\t\t\tlet g = $.createGraphics(vid.videoWidth, vid.videoHeight, { renderer: 'c2d' });\n\t\t\tg.image(vid, 0, 0);\n\t\t\tg.loadPixels();\n\t\t\tvid.pixels = g.pixels;\n\t\t\tg.remove();\n\t\t};\n\t\tvid._loader = (async () => {\n\t\t\tlet stream;\n\t\t\ttry {\n\t\t\t\tstream = await navigator.mediaDevices.getUserMedia(constraints);\n\t\t\t} catch (e) {\n\t\t\t\tq._preloadCount--;\n\t\t\t\tthrow e;\n\t\t\t}\n\n\t\t\tvid.srcObject = stream;\n\t\t\tawait new Promise((resolve) => vid.addEventListener('loadeddata', resolve));\n\n\t\t\tvid._load();\n\t\t\tif (cb) cb(vid);\n\t\t\tq._preloadCount--;\n\t\t\treturn vid;\n\t\t})();\n\n\t\tif ($._disablePreload) return vid._loader;\n\t\treturn vid;\n\t};\n\n\t$.findElement = (selector) => document.querySelector(selector);\n\t$.findElements = (selector) => document.querySelectorAll(selector);\n};\nQ5.modules.input = ($, q) => {\n\tif ($._scope == 'graphics') return;\n\n\t$.mouseX = 0;\n\t$.mouseY = 0;\n\t$.pmouseX = 0;\n\t$.pmouseY = 0;\n\t$.touches = [];\n\t$.mouseButton = '';\n\t$.keyIsPressed = false;\n\t$.mouseIsPressed = false;\n\t$.key = '';\n\t$.keyCode = 0;\n\n\t$.UP_ARROW = 38;\n\t$.DOWN_ARROW = 40;\n\t$.LEFT_ARROW = 37;\n\t$.RIGHT_ARROW = 39;\n\t$.SHIFT = 16;\n\t$.TAB = 9;\n\t$.BACKSPACE = 8;\n\t$.ENTER = $.RETURN = 13;\n\t$.ALT = $.OPTION = 18;\n\t$.CONTROL = 17;\n\t$.DELETE = 46;\n\t$.ESCAPE = 27;\n\n\t$.ARROW = 'default';\n\t$.CROSS = 'crosshair';\n\t$.HAND = 'pointer';\n\t$.MOVE = 'move';\n\t$.TEXT = 'text';\n\n\tlet keysHeld = {};\n\tlet mouseBtns = [Q5.LEFT, Q5.CENTER, Q5.RIGHT];\n\n\tlet c = $.canvas;\n\n\t$._startAudio = () => {\n\t\tif (!Q5.aud || Q5.aud?.state != 'running') $.userStartAudio();\n\t};\n\n\t$._updateMouse = (e) => {\n\t\tif (e.changedTouches) return;\n\t\tif (c) {\n\t\t\tlet rect = c.getBoundingClientRect();\n\t\t\tlet sx = c.scrollWidth / $.width || 1;\n\t\t\tlet sy = c.scrollHeight / $.height || 1;\n\t\t\tq.mouseX = (e.clientX - rect.left) / sx;\n\t\t\tq.mouseY = (e.clientY - rect.top) / sy;\n\t\t\tif (c.renderer == 'webgpu') {\n\t\t\t\tq.mouseX -= c.hw;\n\t\t\t\tq.mouseY -= c.hh;\n\t\t\t}\n\t\t} else {\n\t\t\tq.mouseX = e.clientX;\n\t\t\tq.mouseY = e.clientY;\n\t\t}\n\t\tq.moveX = e.movementX;\n\t\tq.moveY = e.movementY;\n\t};\n\n\tlet pressedInCanvas = 0;\n\n\t$._onmousedown = (e) => {\n\t\tpressedInCanvas++;\n\t\t$._startAudio();\n\t\t$._updateMouse(e);\n\t\tq.mouseIsPressed = true;\n\t\tq.mouseButton = mouseBtns[e.button];\n\t\t$.mousePressed(e);\n\t};\n\n\t$._onmousemove = (e) => {\n\t\t$._updateMouse(e);\n\t\tif ($.mouseIsPressed) $.mouseDragged(e);\n\t\telse $.mouseMoved(e);\n\t};\n\n\t$._onmouseup = (e) => {\n\t\t$._updateMouse(e);\n\t\tq.mouseIsPressed = false;\n\t\t$.mouseReleased(e);\n\t};\n\n\t$._onclick = (e) => {\n\t\t$._updateMouse(e);\n\t\tq.mouseIsPressed = true;\n\t\t$.mouseClicked(e);\n\t\tq.mouseIsPressed = false;\n\t};\n\n\t$._onwheel = (e) => {\n\t\t$._updateMouse(e);\n\t\te.delta = e.deltaY;\n\t\tif ($.mouseWheel(e) == false || $._noScroll) e.preventDefault();\n\t};\n\n\t$.cursor = (name, x, y) => {\n\t\tlet pfx = '';\n\t\tif (name.includes('.')) {\n\t\t\tname = `url(\"${name}\")`;\n\t\t\tpfx = ', auto';\n\t\t}\n\t\tif (x !== undefined) {\n\t\t\tname += ' ' + x + ' ' + y;\n\t\t}\n\t\t$.canvas.style.cursor = name + pfx;\n\t};\n\n\t$.noCursor = () => ($.canvas.style.cursor = 'none');\n\t$.noScroll = () => ($._noScroll = true);\n\n\tif (window) {\n\t\t$.lockMouse = document.body?.requestPointerLock;\n\t\t$.unlockMouse = document.exitPointerLock;\n\t}\n\n\t$._onkeydown = (e) => {\n\t\tif (e.repeat) return;\n\t\t$._startAudio();\n\t\tq.keyIsPressed = true;\n\t\tq.key = e.key;\n\t\tq.keyCode = e.keyCode;\n\t\tkeysHeld[$.keyCode] = keysHeld[$.key.toLowerCase()] = true;\n\t\t$.keyPressed(e);\n\t\tif (e.key.length == 1) $.keyTyped(e);\n\t};\n\n\t$._onkeyup = (e) => {\n\t\tq.keyIsPressed = false;\n\t\tq.key = e.key;\n\t\tq.keyCode = e.keyCode;\n\t\tkeysHeld[$.keyCode] = keysHeld[$.key.toLowerCase()] = false;\n\t\t$.keyReleased(e);\n\t};\n\n\t$.keyIsDown = (v) => !!keysHeld[typeof v == 'string' ? v.toLowerCase() : v];\n\n\tfunction getTouchInfo(touch) {\n\t\tconst rect = $.canvas.getBoundingClientRect();\n\t\tconst sx = $.canvas.scrollWidth / $.width || 1;\n\t\tconst sy = $.canvas.scrollHeight / $.height || 1;\n\t\treturn {\n\t\t\tx: (touch.clientX - rect.left) / sx,\n\t\t\ty: (touch.clientY - rect.top) / sy,\n\t\t\tid: touch.identifier\n\t\t};\n\t}\n\n\t$._ontouchstart = (e) => {\n\t\t$._startAudio();\n\t\tq.touches = [...e.touches].map(getTouchInfo);\n\t\tif (!$._isTouchAware) {\n\t\t\tq.mouseX = $.touches[0].x;\n\t\t\tq.mouseY = $.touches[0].y;\n\t\t\tq.mouseIsPressed = true;\n\t\t\tq.mouseButton = $.LEFT;\n\t\t\t$.mousePressed(e);\n\t\t}\n\t\t$.touchStarted(e);\n\t};\n\n\t$._ontouchmove = (e) => {\n\t\tq.touches = [...e.touches].map(getTouchInfo);\n\t\tif (!$._isTouchAware) {\n\t\t\tq.mouseX = $.touches[0].x;\n\t\t\tq.mouseY = $.touches[0].y;\n\t\t\tif (!$.mouseDragged(e)) e.preventDefault();\n\t\t}\n\t\tif (!$.touchMoved(e)) e.preventDefault();\n\t};\n\n\t$._ontouchend = (e) => {\n\t\tq.touches = [...e.touches].map(getTouchInfo);\n\t\tif (!$._isTouchAware && !$.touches.length) {\n\t\t\tq.mouseIsPressed = false;\n\t\t\tif (!$.mouseReleased(e)) e.preventDefault();\n\t\t}\n\t\tif (!$.touchEnded(e)) e.preventDefault();\n\t};\n\n\tif (c) {\n\t\tlet l = c.addEventListener.bind(c);\n\t\tl('mousedown', (e) => $._onmousedown(e));\n\t\tl('wheel', (e) => $._onwheel(e));\n\t\tl('click', (e) => $._onclick(e));\n\n\t\tl('touchstart', (e) => $._ontouchstart(e));\n\t\tl('touchmove', (e) => $._ontouchmove(e));\n\t\tl('touchend', (e) => $._ontouchend(e));\n\t\tl('touchcancel', (e) => $._ontouchend(e));\n\t}\n\n\tif (window) {\n\t\tlet l = window.addEventListener;\n\t\tl('keydown', (e) => $._onkeydown(e), false);\n\t\tl('keyup', (e) => $._onkeyup(e), false);\n\n\t\tif (!c) {\n\t\t\tl('mousedown', (e) => $._onmousedown(e));\n\t\t\tl('wheel', (e) => $._onwheel(e));\n\t\t\tl('click', (e) => $._onclick(e));\n\t\t}\n\n\t\tl('mousemove', (e) => $._onmousemove(e), false);\n\t\tl('mouseup', (e) => {\n\t\t\tif (pressedInCanvas > 0) {\n\t\t\t\tpressedInCanvas--;\n\t\t\t\t$._onmouseup(e);\n\t\t\t}\n\t\t});\n\t}\n};\nQ5.modules.math = ($, q) => {\n\t$.RADIANS = 0;\n\t$.DEGREES = 1;\n\n\t$.PI = Math.PI;\n\t$.HALF_PI = Math.PI / 2;\n\t$.QUARTER_PI = Math.PI / 4;\n\t$.TWO_PI = $.TAU = Math.PI * 2;\n\n\t$.abs = Math.abs;\n\t$.ceil = Math.ceil;\n\t$.exp = Math.exp;\n\t$.floor = $.int = Math.floor;\n\t$.loge = Math.log;\n\t$.mag = Math.hypot;\n\t$.max = Math.max;\n\t$.min = Math.min;\n\t$.pow = Math.pow;\n\t$.sqrt = Math.sqrt;\n\n\t$.SHR3 = 1;\n\t$.LCG = 2;\n\n\t$.round = (x, d = 0) => {\n\t\tlet p = 10 ** d;\n\t\treturn Math.round(x * p) / p;\n\t};\n\n\tlet angleMode = ($._angleMode = 0);\n\n\t$.angleMode = (mode) => {\n\t\tangleMode = $._angleMode = mode == 0 || mode == 'radians' ? 0 : 1;\n\t\treturn !angleMode ? 'radians' : 'degrees';\n\t};\n\tlet DEGTORAD = ($._DEGTORAD = Math.PI / 180);\n\tlet RADTODEG = ($._RADTODEG = 180 / Math.PI);\n\t$.degrees = (x) => x * $._RADTODEG;\n\t$.radians = (x) => x * $._DEGTORAD;\n\n\t$.map = Q5.prototype.map = (value, istart, istop, ostart, ostop, clamp) => {\n\t\tlet val = ostart + (ostop - ostart) * (((value - istart) * 1.0) / (istop - istart));\n\t\tif (!clamp) {\n\t\t\treturn val;\n\t\t}\n\t\tif (ostart < ostop) {\n\t\t\treturn Math.min(Math.max(val, ostart), ostop);\n\t\t} else {\n\t\t\treturn Math.min(Math.max(val, ostop), ostart);\n\t\t}\n\t};\n\n\t$.dist = function() {\n\t\tlet a = arguments;\n\t\tif (a.length == 2) return Math.hypot(a[0].x - a[1].x, a[0].y - a[1].y);\n\t\tif (a.length == 4) return Math.hypot(a[0] - a[2], a[1] - a[3]);\n\t\treturn Math.hypot(a[0] - a[3], a[1] - a[4], a[2] - a[5]);\n\t};\n\n\t$.lerp = (a, b, t) => a * (1 - t) + b * t;\n\t$.constrain = (x, lo, hi) => Math.min(Math.max(x, lo), hi);\n\t$.norm = (value, start, stop) => $.map(value, start, stop, 0, 1);\n\t$.sq = (x) => x * x;\n\t$.fract = (x) => x - Math.floor(x);\n\n\t$.sin = (a) => Math.sin(!angleMode ? a : a * DEGTORAD);\n\t$.cos = (a) => Math.cos(!angleMode ? a : a * DEGTORAD);\n\t$.tan = (a) => Math.tan(!angleMode ? a : a * DEGTORAD);\n\n\t$.asin = (x) => {\n\t\tlet a = Math.asin(x);\n\t\treturn !angleMode ? a : a * RADTODEG;\n\t};\n\t$.acos = (x) => {\n\t\tlet a = Math.acos(x);\n\t\treturn !angleMode ? a : a * RADTODEG;\n\t};\n\t$.atan = (x) => {\n\t\tlet a = Math.atan(x);\n\t\treturn !angleMode ? a : a * RADTODEG;\n\t};\n\t$.atan2 = (y, x) => {\n\t\tlet a = Math.atan2(y, x);\n\t\treturn !angleMode ? a : a * RADTODEG;\n\t};\n\n\tfunction lcg() {\n\t\tconst m = 4294967296;\n\t\tconst a = 1664525;\n\t\tconst c = 1013904223;\n\t\tlet seed, z;\n\t\treturn {\n\t\t\tsetSeed(val) {\n\t\t\t\tz = seed = (val == null ? Math.random() * m : val) >>> 0;\n\t\t\t},\n\t\t\tgetSeed() {\n\t\t\t\treturn seed;\n\t\t\t},\n\t\t\trand() {\n\t\t\t\tz = (a * z + c) % m;\n\t\t\t\treturn z / m;\n\t\t\t}\n\t\t};\n\t}\n\n\tfunction shr3() {\n\t\tlet jsr, seed;\n\t\tlet m = 4294967295;\n\t\treturn {\n\t\t\tsetSeed(val) {\n\t\t\t\tjsr = seed = (val == null ? Math.random() * m : val) >>> 0;\n\t\t\t},\n\t\t\tgetSeed() {\n\t\t\t\treturn seed;\n\t\t\t},\n\t\t\trand() {\n\t\t\t\tjsr ^= jsr << 17;\n\t\t\t\tjsr ^= jsr >> 13;\n\t\t\t\tjsr ^= jsr << 5;\n\t\t\t\treturn (jsr >>> 0) / m;\n\t\t\t}\n\t\t};\n\t}\n\n\tlet rng1 = shr3();\n\trng1.setSeed();\n\n\t$.randomSeed = (seed) => rng1.setSeed(seed);\n\t$.random = (a, b) => {\n\t\tif (a === undefined) return rng1.rand();\n\t\tif (typeof a == 'number') {\n\t\t\tif (b !== undefined) {\n\t\t\t\treturn rng1.rand() * (b - a) + a;\n\t\t\t} else {\n\t\t\t\treturn rng1.rand() * a;\n\t\t\t}\n\t\t} else {\n\t\t\treturn a[Math.trunc(a.length * rng1.rand())];\n\t\t}\n\t};\n\n\tif ($._renderer == 'c2d' && !$._webgpuFallback) {\n\t\t$.randomX = (v = 0) => $.random(-v, $.canvas.w + v);\n\t\t$.randomY = (v = 0) => $.random(-v, $.canvas.h + v);\n\t} else {\n\t\t$.randomX = (v = 0) => $.random(-$.canvas.hw - v, $.canvas.hw + v);\n\t\t$.randomY = (v = 0) => $.random(-$.canvas.hh - v, $.canvas.hh + v);\n\t}\n\n\t$.randomGenerator = (method) => {\n\t\tif (method == $.LCG) rng1 = lcg();\n\t\telse if (method == $.SHR3) rng1 = shr3();\n\t\trng1.setSeed();\n\t};\n\n\tvar ziggurat = new (function() {\n\t\tvar iz;\n\t\tvar jz;\n\t\tvar kn = new Array(128);\n\t\tvar ke = new Array(256);\n\t\tvar hz;\n\t\tvar wn = new Array(128);\n\t\tvar fn = new Array(128);\n\t\tvar we = new Array(256);\n\t\tvar fe = new Array(256);\n\t\tvar SHR3 = () => {\n\t\t\treturn rng1.rand() * 4294967296 - 2147483648;\n\t\t};\n\t\tvar UNI = () => {\n\t\t\treturn 0.5 + (SHR3() << 0) * 0.2328306e-9;\n\t\t};\n\n\t\tvar RNOR = () => {\n\t\t\thz = SHR3();\n\t\t\tiz = hz & 127;\n\t\t\treturn Math.abs(hz) < kn[iz] ? hz * wn[iz] : nfix();\n\t\t};\n\t\tvar REXP = () => {\n\t\t\tjz = SHR3() >>> 0;\n\t\t\tiz = jz & 255;\n\t\t\treturn jz < kn[iz] ? jz * we[iz] : efix();\n\t\t};\n\t\tvar nfix = () => {\n\t\t\tvar r = 3.44262;\n\t\t\tvar x, y;\n\t\t\tvar u1, u2;\n\t\t\tfor (; ;) {\n\t\t\t\tx = hz * wn[iz];\n\t\t\t\tif (iz == 0) {\n\t\t\t\t\tdo {\n\t\t\t\t\t\tu1 = UNI();\n\t\t\t\t\t\tu2 = UNI();\n\t\t\t\t\t\tx = -Math.log(u1) * 0.2904764;\n\t\t\t\t\t\ty = -Math.log(u2);\n\t\t\t\t\t} while (y + y < x * x);\n\t\t\t\t\treturn hz > 0 ? r + x : -r - x;\n\t\t\t\t}\n\n\t\t\t\tif (fn[iz] + UNI() * (fn[iz - 1] - fn[iz]) < Math.exp(-0.5 * x * x)) {\n\t\t\t\t\treturn x;\n\t\t\t\t}\n\t\t\t\thz = SHR3();\n\t\t\t\tiz = hz & 127;\n\t\t\t\tif (Math.abs(hz) < kn[iz]) {\n\t\t\t\t\treturn hz * wn[iz];\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\tvar efix = () => {\n\t\t\tvar x;\n\t\t\tfor (; ;) {\n\t\t\t\tif (iz == 0) {\n\t\t\t\t\treturn 7.69711 - Math.log(UNI());\n\t\t\t\t}\n\t\t\t\tx = jz * we[iz];\n\t\t\t\tif (fe[iz] + UNI() * (fe[iz - 1] - fe[iz]) < Math.exp(-x)) {\n\t\t\t\t\treturn x;\n\t\t\t\t}\n\t\t\t\tjz = SHR3();\n\t\t\t\tiz = jz & 255;\n\t\t\t\tif (jz < ke[iz]) {\n\t\t\t\t\treturn jz * we[iz];\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tvar zigset = () => {\n\t\t\tvar m1 = 2147483648;\n\t\t\tvar m2 = 4294967296;\n\t\t\tvar dn = 3.442619855899;\n\t\t\tvar tn = dn;\n\t\t\tvar vn = 9.91256303526217e-3;\n\t\t\tvar q;\n\t\t\tvar de = 7.697117470131487;\n\t\t\tvar te = de;\n\t\t\tvar ve = 3.949659822581572e-3;\n\t\t\tvar i;\n\n\t\t\t/* Tables for RNOR */\n\t\t\tq = vn / Math.exp(-0.5 * dn * dn);\n\t\t\tkn[0] = Math.floor((dn / q) * m1);\n\t\t\tkn[1] = 0;\n\t\t\twn[0] = q / m1;\n\t\t\twn[127] = dn / m1;\n\t\t\tfn[0] = 1;\n\t\t\tfn[127] = Math.exp(-0.5 * dn * dn);\n\t\t\tfor (i = 126; i >= 1; i--) {\n\t\t\t\tdn = Math.sqrt(-2 * Math.log(vn / dn + Math.exp(-0.5 * dn * dn)));\n\t\t\t\tkn[i + 1] = Math.floor((dn / tn) * m1);\n\t\t\t\ttn = dn;\n\t\t\t\tfn[i] = Math.exp(-0.5 * dn * dn);\n\t\t\t\twn[i] = dn / m1;\n\t\t\t}\n\t\t\t/*Tables for REXP */\n\t\t\tq = ve / Math.exp(-de);\n\t\t\tke[0] = Math.floor((de / q) * m2);\n\t\t\tke[1] = 0;\n\t\t\twe[0] = q / m2;\n\t\t\twe[255] = de / m2;\n\t\t\tfe[0] = 1;\n\t\t\tfe[255] = Math.exp(-de);\n\t\t\tfor (i = 254; i >= 1; i--) {\n\t\t\t\tde = -Math.log(ve / de + Math.exp(-de));\n\t\t\t\tke[i + 1] = Math.floor((de / te) * m2);\n\t\t\t\tte = de;\n\t\t\t\tfe[i] = Math.exp(-de);\n\t\t\t\twe[i] = de / m2;\n\t\t\t}\n\t\t};\n\t\tthis.SHR3 = SHR3;\n\t\tthis.UNI = UNI;\n\t\tthis.RNOR = RNOR;\n\t\tthis.REXP = REXP;\n\t\tthis.zigset = zigset;\n\t})();\n\tziggurat.hasInit = false;\n\n\t$.randomGaussian = (mean, std) => {\n\t\tif (!ziggurat.hasInit) {\n\t\t\tziggurat.zigset();\n\t\t\tziggurat.hasInit = true;\n\t\t}\n\t\treturn ziggurat.RNOR() * std + mean;\n\t};\n\n\t$.randomExponential = () => {\n\t\tif (!ziggurat.hasInit) {\n\t\t\tziggurat.zigset();\n\t\t\tziggurat.hasInit = true;\n\t\t}\n\t\treturn ziggurat.REXP();\n\t};\n\n\t$.PERLIN = 'perlin';\n\t$.SIMPLEX = 'simplex';\n\t$.BLOCKY = 'blocky';\n\n\t$.NoiseGenerator = Q5.PerlinNoise;\n\tlet _noise;\n\n\t$.noiseMode = (mode) => {\n\t\tq.NoiseGenerator = Q5[mode[0].toUpperCase() + mode.slice(1) + 'Noise'];\n\t\t_noise = null;\n\t};\n\n\t$.noiseSeed = (seed) => {\n\t\t_noise = new $.NoiseGenerator(seed);\n\t};\n\n\t$.noise = (x = 0, y = 0, z = 0) => {\n\t\t_noise ??= new $.NoiseGenerator();\n\t\treturn _noise.noise(x, y, z);\n\t};\n\n\t$.noiseDetail = (lod, falloff) => {\n\t\t_noise ??= new $.NoiseGenerator();\n\t\tif (lod > 0) _noise.octaves = lod;\n\t\tif (falloff > 0) _noise.falloff = falloff;\n\t};\n};\n\nQ5.NoiseGenerator = class { };\n\nQ5.PerlinNoise = class extends Q5.NoiseGenerator {\n\tconstructor(seed) {\n\t\tsuper();\n\t\tthis.grad3 = [\n\t\t\t[1, 1, 0],\n\t\t\t[-1, 1, 0],\n\t\t\t[1, -1, 0],\n\t\t\t[-1, -1, 0],\n\t\t\t[1, 0, 1],\n\t\t\t[-1, 0, 1],\n\t\t\t[1, 0, -1],\n\t\t\t[-1, 0, -1],\n\t\t\t[0, 1, 1],\n\t\t\t[0, -1, 1],\n\t\t\t[0, 1, -1],\n\t\t\t[0, -1, -1]\n\t\t];\n\t\tthis.octaves = 1;\n\t\tthis.falloff = 0.5;\n\t\tif (seed == undefined) {\n\t\t\tthis.p = Array.from({ length: 256 }, () => Math.floor(Math.random() * 256));\n\t\t} else {\n\t\t\tthis.p = this.seedPermutation(seed);\n\t\t}\n\t\tthis.p = this.p.concat(this.p);\n\t}\n\n\tseedPermutation(seed) {\n\t\tlet p = [];\n\t\tfor (let i = 0; i < 256; i++) {\n\t\t\tp[i] = i;\n\t\t}\n\n\t\tlet n, q;\n\t\tfor (let i = 255; i > 0; i--) {\n\t\t\tseed = (seed * 16807) % 2147483647;\n\t\t\tn = seed % (i + 1);\n\t\t\tq = p[i];\n\t\t\tp[i] = p[n];\n\t\t\tp[n] = q;\n\t\t}\n\n\t\treturn p;\n\t}\n\n\tdot(g, x, y, z) {\n\t\treturn g[0] * x + g[1] * y + g[2] * z;\n\t}\n\n\tmix(a, b, t) {\n\t\treturn (1 - t) * a + t * b;\n\t}\n\n\tfade(t) {\n\t\treturn t * t * t * (t * (t * 6 - 15) + 10);\n\t}\n\n\tnoise(x, y, z) {\n\t\tlet t = this;\n\t\tlet total = 0;\n\t\tlet freq = 1;\n\t\tlet amp = 1;\n\t\tlet maxAmp = 0;\n\n\t\tfor (let i = 0; i < t.octaves; i++) {\n\t\t\tconst X = Math.floor(x * freq) & 255;\n\t\t\tconst Y = Math.floor(y * freq) & 255;\n\t\t\tconst Z = Math.floor(z * freq) & 255;\n\n\t\t\tconst xf = x * freq - Math.floor(x * freq);\n\t\t\tconst yf = y * freq - Math.floor(y * freq);\n\t\t\tconst zf = z * freq - Math.floor(z * freq);\n\n\t\t\tconst u = t.fade(xf);\n\t\t\tconst v = t.fade(yf);\n\t\t\tconst w = t.fade(zf);\n\n\t\t\tconst A = t.p[X] + Y;\n\t\t\tconst AA = t.p[A] + Z;\n\t\t\tconst AB = t.p[A + 1] + Z;\n\t\t\tconst B = t.p[X + 1] + Y;\n\t\t\tconst BA = t.p[B] + Z;\n\t\t\tconst BB = t.p[B + 1] + Z;\n\n\t\t\tconst lerp1 = t.mix(t.dot(t.grad3[t.p[AA] % 12], xf, yf, zf), t.dot(t.grad3[t.p[BA] % 12], xf - 1, yf, zf), u);\n\t\t\tconst lerp2 = t.mix(\n\t\t\t\tt.dot(t.grad3[t.p[AB] % 12], xf, yf - 1, zf),\n\t\t\t\tt.dot(t.grad3[t.p[BB] % 12], xf - 1, yf - 1, zf),\n\t\t\t\tu\n\t\t\t);\n\t\t\tconst lerp3 = t.mix(\n\t\t\t\tt.dot(t.grad3[t.p[AA + 1] % 12], xf, yf, zf - 1),\n\t\t\t\tt.dot(t.grad3[t.p[BA + 1] % 12], xf - 1, yf, zf - 1),\n\t\t\t\tu\n\t\t\t);\n\t\t\tconst lerp4 = t.mix(\n\t\t\t\tt.dot(t.grad3[t.p[AB + 1] % 12], xf, yf - 1, zf - 1),\n\t\t\t\tt.dot(t.grad3[t.p[BB + 1] % 12], xf - 1, yf - 1, zf - 1),\n\t\t\t\tu\n\t\t\t);\n\n\t\t\tconst mix1 = t.mix(lerp1, lerp2, v);\n\t\t\tconst mix2 = t.mix(lerp3, lerp4, v);\n\n\t\t\ttotal += t.mix(mix1, mix2, w) * amp;\n\n\t\t\tmaxAmp += amp;\n\t\t\tamp *= t.falloff;\n\t\t\tfreq *= 2;\n\t\t}\n\n\t\treturn (total / maxAmp + 1) / 2;\n\t}\n};\nQ5.modules.record = ($, q) => {\n\tlet rec, btn0, btn1, timer, formatSelect, bitrateInput, audioToggle;\n\n\t$.recording = false;\n\n\tfunction initRecorder(opt = {}) {\n\t\tdocument.head.insertAdjacentHTML(\n\t\t\t'beforeend',\n\t\t\t`<style>\n.rec {\n\tdisplay: flex;\n\tz-index: 1000;\n\tgap: 6px;\n\tbackground: #1a1b1d;\n\tpadding: 6px 8px;\n\tborder-radius: 21px;\n\tbox-shadow: #0000001a 0px 4px 12px;\n\tborder: 2px solid transparent; \n\topacity: 0.6;\n\ttransition: all 0.3s;\n\twidth: 134px;\n\toverflow: hidden;\n}\n\n.rec:hover {\n\twidth: unset;\n\topacity: 0.96;\n}\n\n.rec.recording { border-color: #cc3e44; }\n\n.rec button,\n.rec select { cursor: pointer; }\n\n.rec button,\n.rec select,\n.rec input,\n.rec span {\n\tfont-family: sans-serif;\n\tfont-size: 14px;\n\tpadding: 2px 10px;\n\tborder-radius: 18px;\n\toutline: none;\n\tbackground: #232529;\n\tcolor: #d4dae6;\n\tbox-shadow: #0000001a 0px 4px 12px;\n\tborder: 1px solid #46494e;\n\tvertical-align: middle;\n\tline-height: 18px;\n\ttransition: all 0.3s;\n}\n\n.rec .audio-toggle {\n\tfont-size: 16px;\n\tpadding: 2px 10px;\n}\n\n.rec .bitrate input {\n\tborder-radius: 18px 0 0 18px;\n\tborder-right: 0;\n\twidth: 40px;\n\tpadding: 2px 5px 2px 10px;\n\ttext-align: right;\n}\n\n.rec .bitrate span {\n\tborder-radius: 0 18px 18px 0;\n\tborder-left: 0;\n\tpadding: 2px 10px 2px 5px;\n\tbackground: #333;\n}\n\n.rec .record-button { \n\tcolor: #cc3e44;\n\tfont-size: 18px;\n}\n\n.rec select:hover,\n.rec button:hover { background: #32343b; }\n\n.rec button:disabled {\n\topacity: 0.5;\n\tcolor: #969ba5;\n\tcursor: not-allowed;\n}\n</style>`\n\t\t);\n\n\t\trec = $.createEl('div');\n\t\trec.className = 'rec';\n\t\trec.innerHTML = `\n<button class=\"record-button\"></button>\n<span class=\"record-timer\"></span>\n<button></button>\n`;\n\n\t\t[btn0, timer, btn1] = rec.children;\n\n\t\trec.x = rec.y = 8;\n\n\t\trec.resetTimer = () => (rec.time = { hours: 0, minutes: 0, seconds: 0, frames: 0 });\n\t\trec.resetTimer();\n\n\t\tlet f = 'video/mp4; codecs=';\n\t\trec.formats = {\n\t\t\t'H.264': f + '\"avc1.42E01E\"',\n\t\t\tVP9: f + 'vp9'\n\t\t};\n\t\tlet highProfile = f + '\"avc1.640034\"';\n\n\t\tlet pixelCount = $.canvas.width * $.canvas.height;\n\t\tif (pixelCount > 3200000 && MediaRecorder.isTypeSupported(highProfile)) {\n\t\t\trec.formats['H.264'] = highProfile;\n\t\t}\n\n\t\tObject.assign(rec.formats, opt.formats);\n\n\t\tformatSelect = $.createSelect('format');\n\t\tfor (const name in rec.formats) {\n\t\t\tformatSelect.option(name, rec.formats[name]);\n\t\t}\n\t\tformatSelect.title = 'Video Format';\n\t\trec.append(formatSelect);\n\n\t\tlet div = $.createEl('div');\n\t\tdiv.className = 'bitrate';\n\t\tdiv.style.display = 'flex';\n\t\trec.append(div);\n\n\t\tbitrateInput = $.createInput();\n\t\tlet span = document.createElement('span');\n\t\tspan.textContent = 'mbps';\n\t\tbitrateInput.title = span.title = 'Video Bitrate';\n\t\tdiv.append(bitrateInput);\n\t\tdiv.append(span);\n\n\t\taudioToggle = $.createEl('button');\n\t\taudioToggle.className = 'audio-toggle active';\n\t\taudioToggle.textContent = '\uD83D\uDD0A';\n\t\taudioToggle.title = 'Toggle Audio Recording';\n\t\trec.append(audioToggle);\n\n\t\trec.captureAudio = true;\n\n\t\taudioToggle.addEventListener('click', () => {\n\t\t\trec.captureAudio = !rec.captureAudio;\n\t\t\taudioToggle.textContent = rec.captureAudio ? '\uD83D\uDD0A' : '\uD83D\uDD07';\n\t\t\taudioToggle.classList.toggle('active', rec.captureAudio);\n\t\t});\n\n\t\trec.encoderSettings = {};\n\n\t\tfunction changeFormat() {\n\t\t\trec.encoderSettings.mimeType = formatSelect.value;\n\t\t}\n\n\t\tfunction changeBitrate() {\n\t\t\trec.encoderSettings.videoBitsPerSecond = 1000000 * bitrateInput.value;\n\t\t}\n\n\t\tformatSelect.addEventListener('change', changeFormat);\n\t\tbitrateInput.addEventListener('change', changeBitrate);\n\n\t\tObject.defineProperty(rec, 'bitrate', {\n\t\t\tget: () => bitrateInput.value,\n\t\t\tset: (v) => {\n\t\t\t\tbitrateInput.value = v;\n\t\t\t\tchangeBitrate();\n\t\t\t}\n\t\t});\n\n\t\tObject.defineProperty(rec, 'format', {\n\t\t\tget: () => formatSelect.selected,\n\t\t\tset: (v) => {\n\t\t\t\tv = v.toUpperCase();\n\t\t\t\tif (rec.formats[v]) {\n\t\t\t\t\tformatSelect.selected = v;\n\t\t\t\t\tchangeFormat();\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\trec.format = 'H.264';\n\n\t\tlet h = $.canvas.height;\n\t\trec.bitrate = h >= 4320 ? 96 : h >= 2160 ? 64 : h >= 1440 ? 48 : h >= 1080 ? 32 : h >= 720 ? 26 : 16;\n\n\t\tbtn0.addEventListener('click', () => {\n\t\t\tif (!$.recording) start();\n\t\t\telse if (!rec.paused) $.pauseRecording();\n\t\t\telse resumeRecording();\n\t\t});\n\n\t\tbtn1.addEventListener('click', () => {\n\t\t\tif (rec.paused) $.saveRecording();\n\t\t\telse $.deleteRecording();\n\t\t});\n\n\t\tresetUI();\n\n\t\t$.registerMethod('post', updateTimer);\n\t}\n\n\tfunction start() {\n\t\tif ($.recording) return;\n\n\t\t$.userStartAudio();\n\n\t\tif (!rec.stream) {\n\t\t\trec.frameRate ??= $.getTargetFrameRate();\n\t\t\tlet canvasStream = $.canvas.captureStream(rec.frameRate);\n\n\t\t\trec.videoTrack = canvasStream.getVideoTracks()[0];\n\n\t\t\tif (rec.captureAudio && $.getAudioContext) {\n\t\t\t\tlet aud = $.getAudioContext();\n\t\t\t\tlet dest = aud.createMediaStreamDestination();\n\n\t\t\t\t// if using p5.sound\n\t\t\t\tif (aud.destination.input) aud.destination.input.connect(dest);\n\t\t\t\telse Q5.soundOut.connect(dest);\n\n\t\t\t\trec.audioTrack = dest.stream.getAudioTracks()[0];\n\n\t\t\t\trec.stream = new MediaStream([rec.videoTrack, rec.audioTrack]);\n\t\t\t} else rec.stream = canvasStream;\n\t\t}\n\n\t\trec.mediaRecorder = new MediaRecorder(rec.stream, rec.encoderSettings);\n\n\t\trec.chunks = [];\n\t\trec.mediaRecorder.addEventListener('dataavailable', (e) => {\n\t\t\tif (e.data.size > 0) rec.chunks.push(e.data);\n\t\t});\n\n\t\trec.mediaRecorder.start();\n\t\tq.recording = true;\n\t\trec.paused = false;\n\t\trec.classList.add('recording');\n\n\t\trec.resetTimer();\n\t\tresetUI(true);\n\t}\n\n\tfunction resumeRecording() {\n\t\tif (!$.recording || !rec.paused) return;\n\n\t\trec.mediaRecorder.resume();\n\t\trec.paused = false;\n\t\tresetUI(true);\n\t}\n\n\tfunction stop() {\n\t\tif (!$.recording) return;\n\n\t\trec.resetTimer();\n\t\trec.mediaRecorder.stop();\n\t\tq.recording = false;\n\t\trec.paused = false;\n\t\trec.classList.remove('recording');\n\t}\n\n\tfunction resetUI(r) {\n\t\tbtn0.textContent = r ? '\u23F8' : '\u23FA';\n\t\tbtn0.title = (r ? 'Pause' : 'Start') + ' Recording';\n\t\tbtn1.textContent = r ? '\uD83D\uDDD1\uFE0F' : '\uD83D\uDCBE';\n\t\tbtn1.title = (r ? 'Delete' : 'Save') + ' Recording';\n\t\tbtn1.disabled = !r;\n\t}\n\n\tfunction updateTimer() {\n\t\tif ($.recording && !rec.paused) {\n\t\t\trec.time.frames++;\n\t\t\tlet fr = $.getTargetFrameRate();\n\n\t\t\tif (rec.time.frames >= fr) {\n\t\t\t\trec.time.seconds += Math.floor(rec.time.frames / fr);\n\t\t\t\trec.time.frames %= fr;\n\n\t\t\t\tif (rec.time.seconds >= 60) {\n\t\t\t\t\trec.time.minutes += Math.floor(rec.time.seconds / 60);\n\t\t\t\t\trec.time.seconds %= 60;\n\n\t\t\t\t\tif (rec.time.minutes >= 60) {\n\t\t\t\t\t\trec.time.hours += Math.floor(rec.time.minutes / 60);\n\t\t\t\t\t\trec.time.minutes %= 60;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\ttimer.textContent = formatTime();\n\t}\n\n\tfunction formatTime() {\n\t\tlet { hours, minutes, seconds, frames } = rec.time;\n\t\treturn `${String(hours).padStart(2, '0')}:${String(minutes).padStart(2, '0')}:${String(seconds).padStart(\n\t\t\t2,\n\t\t\t'0'\n\t\t)}:${String(frames).padStart(2, '0')}`;\n\t}\n\n\t$.createRecorder = (opt) => {\n\t\tif (!rec) initRecorder(opt);\n\t\treturn rec;\n\t};\n\n\t$.record = (opt) => {\n\t\tif (!rec) {\n\t\t\tinitRecorder(opt);\n\t\t\trec.hide();\n\t\t}\n\t\tif (!$.recording) start();\n\t\telse if (rec.paused) resumeRecording();\n\t};\n\n\t$.pauseRecording = () => {\n\t\tif (!$.recording || rec.paused) return;\n\n\t\trec.mediaRecorder.pause();\n\t\trec.paused = true;\n\n\t\tresetUI();\n\t\tbtn0.title = 'Resume Recording';\n\t\tbtn1.disabled = false;\n\t};\n\n\t$.deleteRecording = () => {\n\t\tstop();\n\t\tresetUI();\n\t\tq.recording = false;\n\t};\n\n\t$.saveRecording = async (fileName) => {\n\t\tif (!$.recording) return;\n\n\t\tawait new Promise((resolve) => {\n\t\t\trec.mediaRecorder.onstop = resolve;\n\t\t\tstop();\n\t\t});\n\n\t\tlet type = rec.encoderSettings.mimeType,\n\t\t\textension = type.slice(6, type.indexOf(';')),\n\t\t\tdataUrl = URL.createObjectURL(new Blob(rec.chunks, { type })),\n\t\t\tiframe = document.createElement('iframe'),\n\t\t\ta = document.createElement('a');\n\n\t\t// Create an invisible iframe to detect load completion\n\t\tiframe.style.display = 'none';\n\t\tiframe.name = 'download_' + Date.now();\n\t\tdocument.body.append(iframe);\n\n\t\ta.target = iframe.name;\n\t\ta.href = dataUrl;\n\t\tfileName ??=\n\t\t\tdocument.title +\n\t\t\t' ' +\n\t\t\tnew Date()\n\t\t\t\t.toLocaleString(undefined, { hour12: false })\n\t\t\t\t.replace(',', ' at')\n\t\t\t\t.replaceAll('/', '-')\n\t\t\t\t.replaceAll(':', '_');\n\t\ta.download = `${fileName}.${extension}`;\n\n\t\tawait new Promise((resolve) => {\n\t\t\tiframe.onload = () => {\n\t\t\t\tdocument.body.removeChild(iframe);\n\t\t\t\tresolve();\n\t\t\t};\n\t\t\ta.click();\n\t\t});\n\n\t\tsetTimeout(() => URL.revokeObjectURL(dataUrl), 1000);\n\t\tresetUI();\n\t\tq.recording = false;\n\t};\n};\nQ5.modules.sound = ($, q) => {\n\t$.Sound = Q5.Sound;\n\tlet sounds = [];\n\n\t$.loadSound = (url, cb) => {\n\t\tq._preloadCount++;\n\n\t\tlet s = new Q5.Sound();\n\t\tsounds.push(s);\n\n\t\ts._loader = (async () => {\n\t\t\tlet err;\n\t\t\ttry {\n\t\t\t\tawait s.load(url);\n\t\t\t} catch (e) {\n\t\t\t\terr = e;\n\t\t\t}\n\t\t\tq._preloadCount--;\n\t\t\tdelete s._loader;\n\t\t\tif (err) throw err;\n\t\t\tif (cb) cb(s);\n\t\t\treturn s;\n\t\t})();\n\n\t\tif ($._disablePreload) return s._loader;\n\t\treturn s;\n\t};\n\n\t$.loadAudio = (url, cb) => {\n\t\tq._preloadCount++;\n\t\tlet a = new Audio(url);\n\t\ta.crossOrigin = 'Anonymous';\n\t\ta.addEventListener('canplaythrough', () => {\n\t\t\tif (!a.loaded) {\n\t\t\t\tq._preloadCount--;\n\t\t\t\ta.loaded = true;\n\t\t\t\tif (cb) cb(a);\n\t\t\t}\n\t\t});\n\t\tlet preloadSkip = () => {\n\t\t\ta._preloadSkip = true;\n\t\t\tq._preloadCount--;\n\t\t};\n\t\ta.addEventListener('suspend', preloadSkip);\n\t\ta.addEventListener('error', (e) => {\n\t\t\tpreloadSkip();\n\t\t\tthrow e;\n\t\t});\n\t\treturn a;\n\t};\n\n\t$.getAudioContext = () => Q5.aud;\n\n\t$.userStartAudio = () => {\n\t\tif (window.AudioContext) {\n\t\t\tif (Q5._offlineAudio) {\n\t\t\t\tQ5._offlineAudio = false;\n\t\t\t\tQ5.aud = new window.AudioContext();\n\t\t\t\tQ5.soundOut = Q5.aud.createGain();\n\t\t\t\tQ5.soundOut.connect(Q5.aud.destination);\n\n\t\t\t\tfor (let s of sounds) s.init();\n\t\t\t}\n\t\t\treturn Q5.aud.resume();\n\t\t}\n\t};\n};\n\nif (window.OfflineAudioContext) {\n\tQ5.aud = new window.OfflineAudioContext(2, 1, 44100);\n\tQ5._offlineAudio = true;\n\tQ5.soundOut = Q5.aud.createGain();\n\tQ5.soundOut.connect(Q5.aud.destination);\n}\n\nQ5.Sound = class {\n\tconstructor() {\n\t\tthis.sources = new Set();\n\t\tthis.loaded = this.paused = false;\n\t}\n\n\tasync load(url) {\n\t\tthis.url = url;\n\t\tlet res = await fetch(url);\n\t\tthis.buffer = await res.arrayBuffer();\n\t\tthis.buffer = await Q5.aud.decodeAudioData(this.buffer);\n\t}\n\n\tinit() {\n\t\tthis.gainNode = Q5.aud.createGain();\n\t\tthis.pannerNode = Q5.aud.createStereoPanner();\n\t\tthis.gainNode.connect(this.pannerNode);\n\t\tthis.pannerNode.connect(Q5.soundOut);\n\n\t\tthis.loaded = true;\n\t\tif (this._volume) this.volume = this._volume;\n\t\tif (this._pan) this.pan = this._pan;\n\t}\n\n\t_newSource(offset, duration) {\n\t\tlet source = Q5.aud.createBufferSource();\n\t\tsource.buffer = this.buffer;\n\t\tsource.connect(this.gainNode);\n\t\tsource.loop = this._loop;\n\n\t\tsource._startedAt = Q5.aud.currentTime;\n\t\tsource._offset = offset;\n\t\tsource._duration = duration;\n\n\t\tsource.start(0, source._offset, source._duration);\n\n\t\tthis.sources.add(source);\n\t\tsource.onended = () => {\n\t\t\tif (!this.paused) {\n\t\t\t\tthis.ended = true;\n\t\t\t\tthis.sources.delete(source);\n\t\t\t}\n\t\t};\n\t}\n\n\tplay(time = 0, duration) {\n\t\tif (!this.loaded) return;\n\n\t\tif (!this.paused) {\n\t\t\tthis._newSource(time, duration);\n\t\t} else {\n\t\t\tlet timings = [];\n\t\t\tfor (let source of this.sources) {\n\t\t\t\ttimings.push(source._offset, source._duration);\n\t\t\t\tthis.sources.delete(source);\n\t\t\t}\n\t\t\tfor (let i = 0; i < timings.length; i += 2) {\n\t\t\t\tthis._newSource(timings[i], timings[i + 1]);\n\t\t\t}\n\t\t}\n\n\t\tthis.paused = this.ended = false;\n\t}\n\n\tpause() {\n\t\tif (!this.isPlaying()) return;\n\n\t\tfor (let source of this.sources) {\n\t\t\tsource.stop();\n\t\t\tlet timePassed = Q5.aud.currentTime - source._startedAt;\n\t\t\tsource._offset += timePassed;\n\t\t\tif (source._duration) source._duration -= timePassed;\n\t\t}\n\t\tthis.paused = true;\n\t}\n\n\tstop() {\n\t\tfor (let source of this.sources) {\n\t\t\tsource.stop();\n\t\t\tthis.sources.delete(source);\n\t\t}\n\t\tthis.paused = false;\n\t\tthis.ended = true;\n\t}\n\n\tget volume() {\n\t\treturn this._volume;\n\t}\n\tset volume(level) {\n\t\tif (this.loaded) this.gainNode.gain.value = level;\n\t\tthis._volume = level;\n\t}\n\n\tget pan() {\n\t\treturn this._pan;\n\t}\n\tset pan(value) {\n\t\tif (this.loaded) this.pannerNode.pan.value = value;\n\t\tthis._pan = value;\n\t}\n\n\tget loop() {\n\t\treturn this._loop;\n\t}\n\tset loop(value) {\n\t\tthis.sources.forEach((source) => (source.loop = value));\n\t\tthis._loop = value;\n\t}\n\n\tget playing() {\n\t\treturn !this.paused && this.sources.size > 0;\n\t}\n\n\t// backwards compatibility\n\tsetVolume(level) {\n\t\tthis.volume = level;\n\t}\n\tsetPan(value) {\n\t\tthis.pan = value;\n\t}\n\tsetLoop(loop) {\n\t\tthis.loop = loop;\n\t}\n\tisLoaded() {\n\t\treturn this.loaded;\n\t}\n\tisPlaying() {\n\t\treturn this.playing;\n\t}\n\tisPaused() {\n\t\treturn this.paused;\n\t}\n\tisLooping() {\n\t\treturn this._loop;\n\t}\n};\nQ5.modules.util = ($, q) => {\n\t$._loadFile = (url, cb, type) => {\n\t\tq._preloadCount++;\n\t\tlet ret = {};\n\t\tret._loader = new Promise((resolve, reject) => {\n\t\t\tfetch(url)\n\t\t\t\t.then((res) => {\n\t\t\t\t\tif (!res.ok) {\n\t\t\t\t\t\treject('error loading file');\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}\n\t\t\t\t\tif (type == 'json') return res.json();\n\t\t\t\t\treturn res.text();\n\t\t\t\t})\n\t\t\t\t.then((f) => {\n\t\t\t\t\tif (type == 'csv') f = $.CSV.parse(f);\n\t\t\t\t\tif (typeof f == 'string') ret.text = f;\n\t\t\t\t\telse Object.assign(ret, f);\n\t\t\t\t\tdelete ret._loader;\n\t\t\t\t\tif (cb) cb(f);\n\t\t\t\t\tq._preloadCount--;\n\t\t\t\t\tresolve(f);\n\t\t\t\t});\n\t\t});\n\t\treturn ret;\n\t};\n\n\t$.loadText = (url, cb) => $._loadFile(url, cb, 'text');\n\t$.loadJSON = (url, cb) => $._loadFile(url, cb, 'json');\n\t$.loadCSV = (url, cb) => $._loadFile(url, cb, 'csv');\n\n\tconst imgRegex = /(jpe?g|png|gif|webp|avif|svg)/,\n\t\tfontRegex = /(ttf|otf|woff2?|eot|json)/,\n\t\taudioRegex = /(wav|flac|mp3|ogg|m4a|aac|aiff|weba)/;\n\n\t$.load = function(...urls) {\n\t\tif (Array.isArray(urls[0])) urls = urls[0];\n\n\t\tlet loaders = [];\n\n\t\tfor (let url of urls) {\n\t\t\tlet ext = url.split('.').pop().toLowerCase();\n\n\t\t\tlet obj;\n\t\t\tif (ext == 'json' && !url.includes('-msdf.')) {\n\t\t\t\tobj = $.loadJSON(url);\n\t\t\t} else if (ext == 'csv') {\n\t\t\t\tobj = $.loadCSV(url);\n\t\t\t} else if (imgRegex.test(ext)) {\n\t\t\t\tobj = $.loadImage(url);\n\t\t\t} else if (fontRegex.test(ext)) {\n\t\t\t\tobj = $.loadFont(url);\n\t\t\t} else if (audioRegex.test(ext)) {\n\t\t\t\tobj = $.loadSound(url);\n\t\t\t} else {\n\t\t\t\tobj = $.loadText(url);\n\t\t\t}\n\t\t\tloaders.push(obj._loader);\n\t\t}\n\n\t\tif (urls.length == 1) return loaders[0];\n\t\treturn Promise.all(loaders);\n\t};\n\n\tasync function saveFile(data, name, ext) {\n\t\tname = name || 'untitled';\n\t\text = ext || 'png';\n\t\tif (imgRegex.test(ext)) {\n\t\t\tdata = await $._saveCanvas(data, ext);\n\t\t} else {\n\t\t\tlet type = 'text/plain';\n\t\t\tif (ext == 'json') {\n\t\t\t\tif (typeof data != 'string') data = JSON.stringify(data);\n\t\t\t\ttype = 'text/json';\n\t\t\t}\n\t\t\tdata = new Blob([data], { type });\n\t\t\tdata = URL.createObjectURL(data);\n\t\t}\n\t\tlet a = document.createElement('a');\n\t\ta.href = data;\n\t\ta.download = name + '.' + ext;\n\t\ta.click();\n\t\tsetTimeout(() => URL.revokeObjectURL(a.href), 1000);\n\t}\n\n\t$.save = (a, b, c) => {\n\t\tif (!a || (typeof a == 'string' && (!b || (!c && b.length < 5)))) {\n\t\t\tc = b;\n\t\t\tb = a;\n\t\t\ta = $.canvas;\n\t\t}\n\t\tif (c) saveFile(a, b, c);\n\t\telse if (b) {\n\t\t\tlet lastDot = b.lastIndexOf('.');\n\t\t\tsaveFile(a, b.slice(0, lastDot), b.slice(lastDot + 1));\n\t\t} else saveFile(a);\n\t};\n\n\t$.CSV = {};\n\t$.CSV.parse = (csv, sep = ',', lineSep = '\\n') => {\n\t\tif (!csv.length) return [];\n\t\tlet a = [],\n\t\t\tlns = csv.split(lineSep),\n\t\t\theaders = lns[0].split(sep).map((h) => h.replaceAll('\"', ''));\n\t\tfor (let i = 1; i < lns.length; i++) {\n\t\t\tlet o = {},\n\t\t\t\tln = lns[i].split(sep);\n\t\t\theaders.forEach((h, i) => (o[h] = JSON.parse(ln[i])));\n\t\t\ta.push(o);\n\t\t}\n\t\treturn a;\n\t};\n\n\tif ($.canvas && !Q5._createServerCanvas) {\n\t\t$.canvas.save = $.saveCanvas = $.save;\n\t}\n\n\tif (typeof localStorage == 'object') {\n\t\t$.storeItem = localStorage.setItem;\n\t\t$.getItem = localStorage.getItem;\n\t\t$.removeItem = localStorage.removeItem;\n\t\t$.clearStorage = localStorage.clear;\n\t}\n\n\t$.year = () => new Date().getFullYear();\n\t$.day = () => new Date().getDay();\n\t$.hour = () => new Date().getHours();\n\t$.minute = () => new Date().getMinutes();\n\t$.second = () => new Date().getSeconds();\n\n\t$.nf = (n, l, r) => {\n\t\tlet neg = n < 0;\n\t\tn = Math.abs(n);\n\t\tlet parts = n.toFixed(r).split('.');\n\t\tparts[0] = parts[0].padStart(l, '0');\n\t\tlet s = parts.join('.');\n\t\tif (neg) s = '-' + s;\n\t\treturn s;\n\t};\n};\nQ5.modules.vector = ($) => {\n\t$.Vector = Q5.Vector;\n\t$.createVector = (x, y, z) => new $.Vector(x, y, z, $);\n};\n\nQ5.Vector = class {\n\tconstructor(x, y, z, $) {\n\t\tthis.x = x || 0;\n\t\tthis.y = y || 0;\n\t\tthis.z = z || 0;\n\t\tthis._$ = $ || window;\n\t\tthis._cn = null;\n\t\tthis._cnsq = null;\n\t}\n\n\tset(x, y, z) {\n\t\tthis.x = x?.x || x || 0;\n\t\tthis.y = x?.y || y || 0;\n\t\tthis.z = x?.z || z || 0;\n\t\treturn this;\n\t}\n\n\tcopy() {\n\t\treturn new Q5.Vector(this.x, this.y, this.z);\n\t}\n\n\t_arg2v(x, y, z) {\n\t\tif (x?.x !== undefined) return x;\n\t\tif (y !== undefined) {\n\t\t\treturn { x, y, z: z || 0 };\n\t\t}\n\t\treturn { x: x, y: x, z: x };\n\t}\n\n\t_calcNorm() {\n\t\tthis._cnsq = this.x * this.x + this.y * this.y + this.z * this.z;\n\t\tthis._cn = Math.sqrt(this._cnsq);\n\t}\n\n\tadd() {\n\t\tlet u = this._arg2v(...arguments);\n\t\tthis.x += u.x;\n\t\tthis.y += u.y;\n\t\tthis.z += u.z;\n\t\treturn this;\n\t}\n\n\trem() {\n\t\tlet u = this._arg2v(...arguments);\n\t\tthis.x %= u.x;\n\t\tthis.y %= u.y;\n\t\tthis.z %= u.z;\n\t\treturn this;\n\t}\n\n\tsub() {\n\t\tlet u = this._arg2v(...arguments);\n\t\tthis.x -= u.x;\n\t\tthis.y -= u.y;\n\t\tthis.z -= u.z;\n\t\treturn this;\n\t}\n\n\tmult() {\n\t\tlet u = this._arg2v(...arguments);\n\t\tthis.x *= u.x;\n\t\tthis.y *= u.y;\n\t\tthis.z *= u.z;\n\t\treturn this;\n\t}\n\n\tdiv() {\n\t\tlet u = this._arg2v(...arguments);\n\t\tif (u.x) this.x /= u.x;\n\t\telse this.x = 0;\n\t\tif (u.y) this.y /= u.y;\n\t\telse this.y = 0;\n\t\tif (u.z) this.z /= u.z;\n\t\telse this.z = 0;\n\t\treturn this;\n\t}\n\n\tmag() {\n\t\tthis._calcNorm();\n\t\treturn this._cn;\n\t}\n\n\tmagSq() {\n\t\tthis._calcNorm();\n\t\treturn this._cnsq;\n\t}\n\n\tdot() {\n\t\tlet u = this._arg2v(...arguments);\n\t\treturn this.x * u.x + this.y * u.y + this.z * u.z;\n\t}\n\n\tdist() {\n\t\tlet u = this._arg2v(...arguments);\n\t\tlet x = this.x - u.x;\n\t\tlet y = this.y - u.y;\n\t\tlet z = this.z - u.z;\n\t\treturn Math.sqrt(x * x + y * y + z * z);\n\t}\n\n\tcross() {\n\t\tlet u = this._arg2v(...arguments);\n\t\tlet x = this.y * u.z - this.z * u.y;\n\t\tlet y = this.z * u.x - this.x * u.z;\n\t\tlet z = this.x * u.y - this.y * u.x;\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t\treturn this;\n\t}\n\n\tnormalize() {\n\t\tthis._calcNorm();\n\t\tlet n = this._cn;\n\t\tif (n != 0) {\n\t\t\tthis.x /= n;\n\t\t\tthis.y /= n;\n\t\t\tthis.z /= n;\n\t\t}\n\t\tthis._cn = 1;\n\t\tthis._cnsq = 1;\n\t\treturn this;\n\t}\n\n\tlimit(m) {\n\t\tthis._calcNorm();\n\t\tlet n = this._cn;\n\t\tif (n > m) {\n\t\t\tlet t = m / n;\n\t\t\tthis.x *= t;\n\t\t\tthis.y *= t;\n\t\t\tthis.z *= t;\n\t\t\tthis._cn = m;\n\t\t\tthis._cnsq = m * m;\n\t\t}\n\t\treturn this;\n\t}\n\n\tsetMag(m) {\n\t\tthis._calcNorm();\n\t\tlet n = this._cn;\n\t\tlet t = m / n;\n\t\tthis.x *= t;\n\t\tthis.y *= t;\n\t\tthis.z *= t;\n\t\tthis._cn = m;\n\t\tthis._cnsq = m * m;\n\t\treturn this;\n\t}\n\n\theading() {\n\t\treturn this._$.atan2(this.y, this.x);\n\t}\n\n\tsetHeading(ang) {\n\t\tlet mag = this.mag();\n\t\tthis.x = mag * this._$.cos(ang);\n\t\tthis.y = mag * this._$.sin(ang);\n\t\treturn this;\n\t}\n\n\trotate(ang) {\n\t\tlet costh = this._$.cos(ang);\n\t\tlet sinth = this._$.sin(ang);\n\t\tlet vx = this.x * costh - this.y * sinth;\n\t\tlet vy = this.x * sinth + this.y * costh;\n\t\tthis.x = vx;\n\t\tthis.y = vy;\n\t\treturn this;\n\t}\n\n\tangleBetween() {\n\t\tlet u = this._arg2v(...arguments);\n\t\tlet o = Q5.Vector.cross(this, u);\n\t\tlet ang = this._$.atan2(o.mag(), this.dot(u));\n\t\treturn ang * Math.sign(o.z || 1);\n\t}\n\n\tlerp() {\n\t\tlet args = [...arguments];\n\t\tlet amt = args.at(-1);\n\t\tif (amt == 0) return this;\n\t\tlet u = this._arg2v(...args.slice(0, -1));\n\t\tthis.x += (u.x - this.x) * amt;\n\t\tthis.y += (u.y - this.y) * amt;\n\t\tthis.z += (u.z - this.z) * amt;\n\t\treturn this;\n\t}\n\n\tslerp() {\n\t\tlet args = [...arguments];\n\t\tlet amt = args.at(-1);\n\t\tif (amt == 0) return this;\n\t\tlet u = this._arg2v(...args.slice(0, -1));\n\t\tif (amt == 1) return this.set(u);\n\n\t\tlet v0Mag = this.mag();\n\t\tlet v1Mag = u.mag();\n\n\t\tif (v0Mag == 0 || v1Mag == 0) {\n\t\t\treturn this.mult(1 - amt).add(u.mult(amt));\n\t\t}\n\n\t\tlet axis = Q5.Vector.cross(this, u);\n\t\tlet axisMag = axis.mag();\n\t\tlet theta = Math.atan2(axisMag, this.dot(u));\n\n\t\tif (axisMag > 0) {\n\t\t\taxis.div(axisMag);\n\t\t} else if (theta < this._$.HALF_PI) {\n\t\t\treturn this.mult(1 - amt).add(u.mult(amt));\n\t\t} else {\n\t\t\tif (this.z == 0 && u.z == 0) axis.set(0, 0, 1);\n\t\t\telse if (this.x != 0) axis.set(this.y, -this.x, 0).normalize();\n\t\t\telse axis.set(1, 0, 0);\n\t\t}\n\n\t\tlet ey = axis.cross(this);\n\t\tlet lerpedMagFactor = 1 - amt + (amt * v1Mag) / v0Mag;\n\t\tlet cosMultiplier = lerpedMagFactor * Math.cos(amt * theta);\n\t\tlet sinMultiplier = lerpedMagFactor * Math.sin(amt * theta);\n\n\t\tthis.x = this.x * cosMultiplier + ey.x * sinMultiplier;\n\t\tthis.y = this.y * cosMultiplier + ey.y * sinMultiplier;\n\t\tthis.z = this.z * cosMultiplier + ey.z * sinMultiplier;\n\t\treturn this;\n\t}\n\n\treflect(n) {\n\t\tn.normalize();\n\t\treturn this.sub(n.mult(2 * this.dot(n)));\n\t}\n\n\tarray() {\n\t\treturn [this.x, this.y, this.z];\n\t}\n\n\tequals(u, epsilon) {\n\t\tepsilon ??= Number.EPSILON || 0;\n\t\treturn Math.abs(u.x - this.x) < epsilon && Math.abs(u.y - this.y) < epsilon && Math.abs(u.z - this.z) < epsilon;\n\t}\n\n\tfromAngle(th, l) {\n\t\tif (l === undefined) l = 1;\n\t\tthis._cn = l;\n\t\tthis._cnsq = l * l;\n\t\tthis.x = l * this._$.cos(th);\n\t\tthis.y = l * this._$.sin(th);\n\t\tthis.z = 0;\n\t\treturn this;\n\t}\n\n\tfromAngles(th, ph, l) {\n\t\tif (l === undefined) l = 1;\n\t\tthis._cn = l;\n\t\tthis._cnsq = l * l;\n\t\tconst cosph = this._$.cos(ph);\n\t\tconst sinph = this._$.sin(ph);\n\t\tconst costh = this._$.cos(th);\n\t\tconst sinth = this._$.sin(th);\n\t\tthis.x = l * sinth * sinph;\n\t\tthis.y = -l * costh;\n\t\tthis.z = l * sinth * cosph;\n\t\treturn this;\n\t}\n\n\trandom2D() {\n\t\tthis._cn = this._cnsq = 1;\n\t\treturn this.fromAngle(Math.random() * Math.PI * 2);\n\t}\n\n\trandom3D() {\n\t\tthis._cn = this._cnsq = 1;\n\t\treturn this.fromAngles(Math.random() * Math.PI * 2, Math.random() * Math.PI * 2);\n\t}\n\n\ttoString() {\n\t\treturn `[${this.x}, ${this.y}, ${this.z}]`;\n\t}\n};\n\nQ5.Vector.add = (v, u) => v.copy().add(u);\nQ5.Vector.cross = (v, u) => v.copy().cross(u);\nQ5.Vector.dist = (v, u) => Math.hypot(v.x - u.x, v.y - u.y, v.z - u.z);\nQ5.Vector.div = (v, u) => v.copy().div(u);\nQ5.Vector.dot = (v, u) => v.copy().dot(u);\nQ5.Vector.equals = (v, u, epsilon) => v.equals(u, epsilon);\nQ5.Vector.lerp = (v, u, amt) => v.copy().lerp(u, amt);\nQ5.Vector.slerp = (v, u, amt) => v.copy().slerp(u, amt);\nQ5.Vector.limit = (v, m) => v.copy().limit(m);\nQ5.Vector.heading = (v) => this._$.atan2(v.y, v.x);\nQ5.Vector.magSq = (v) => v.x * v.x + v.y * v.y + v.z * v.z;\nQ5.Vector.mag = (v) => Math.sqrt(Q5.Vector.magSq(v));\nQ5.Vector.mult = (v, u) => v.copy().mult(u);\nQ5.Vector.normalize = (v) => v.copy().normalize();\nQ5.Vector.rem = (v, u) => v.copy().rem(u);\nQ5.Vector.sub = (v, u) => v.copy().sub(u);\n\nfor (let k of ['fromAngle', 'fromAngles', 'random2D', 'random3D']) {\n\tQ5.Vector[k] = (u, v, t) => new Q5.Vector()[k](u, v, t);\n}\nQ5.renderers.webgpu = {};\n\nQ5.renderers.webgpu.canvas = ($, q) => {\n\t$._baseShaderCode = /* wgsl */ `\nstruct Q5 {\n\twidth: f32,\n\theight: f32,\n\thalfWidth: f32,\n\thalfHeight: f32,\n\tpixelDensity: f32,\n\tframeCount: f32,\n\ttime: f32,\n\tdeltaTime: f32,\n\tmouseX: f32,\n\tmouseY: f32,\n\tmouseIsPressed: f32,\n\tkeyCode: f32,\n\tkeyIsPressed: f32\n}`;\n\n\tlet c = $.canvas;\n\n\tc.width = $.width = 500;\n\tc.height = $.height = 500;\n\n\t$._g = $.createGraphics(1, 1, { renderer: 'c2d' });\n\n\tif ($.colorMode) $.colorMode('rgb', 1);\n\n\tlet encoder,\n\t\tpass,\n\t\tmainView,\n\t\tframeA,\n\t\tframeB,\n\t\tframeLayout,\n\t\tframeSampler,\n\t\tframeBindGroup,\n\t\tcolorIndex = 1,\n\t\tcolorStackIndex = 8;\n\n\t$._pipelineConfigs = [];\n\t$._pipelines = [];\n\t$._buffers = [];\n\t$._prevFramePL = 0;\n\t$._framePL = 0;\n\n\t// local variables used for slightly better performance\n\n\t// stores pipeline shifts and vertex counts/image indices\n\tlet drawStack = ($._drawStack = []);\n\n\t// colors used for each draw call\n\tlet colorStack = ($._colorStack = new Float32Array(1e6));\n\n\t// prettier-ignore\n\tcolorStack.set([\n\t\t0, 0, 0, 1, // black\n\t\t1, 1, 1, 1 // white\n\t]);\n\n\tlet mainLayout = Q5.device.createBindGroupLayout({\n\t\tlabel: 'mainLayout',\n\t\tentries: [\n\t\t\t{\n\t\t\t\tbinding: 0,\n\t\t\t\tvisibility: GPUShaderStage.VERTEX | GPUShaderStage.FRAGMENT,\n\t\t\t\tbuffer: { type: 'uniform' }\n\t\t\t},\n\t\t\t{\n\t\t\t\tbinding: 1,\n\t\t\t\tvisibility: GPUShaderStage.VERTEX,\n\t\t\t\tbuffer: { type: 'read-only-storage' }\n\t\t\t},\n\t\t\t{\n\t\t\t\tbinding: 2,\n\t\t\t\tvisibility: GPUShaderStage.VERTEX | GPUShaderStage.FRAGMENT,\n\t\t\t\tbuffer: { type: 'read-only-storage' }\n\t\t\t}\n\t\t]\n\t});\n\n\t$._bindGroupLayouts = [mainLayout];\n\n\tlet uniformBuffer = Q5.device.createBuffer({\n\t\tsize: 64,\n\t\tusage: GPUBufferUsage.UNIFORM | GPUBufferUsage.COPY_DST\n\t});\n\n\tlet createMainView = () => {\n\t\tlet w = $.canvas.width,\n\t\t\th = $.canvas.height,\n\t\t\tsize = [w, h],\n\t\t\tformat = 'bgra8unorm';\n\n\t\tmainView = Q5.device\n\t\t\t.createTexture({\n\t\t\t\tsize,\n\t\t\t\tsampleCount: 4,\n\t\t\t\tformat,\n\t\t\t\tusage: GPUTextureUsage.RENDER_ATTACHMENT\n\t\t\t})\n\t\t\t.createView();\n\n\t\tlet usage =\n\t\t\tGPUTextureUsage.COPY_SRC |\n\t\t\tGPUTextureUsage.COPY_DST |\n\t\t\tGPUTextureUsage.TEXTURE_BINDING |\n\t\t\tGPUTextureUsage.RENDER_ATTACHMENT;\n\n\t\t$._frameA = frameA = Q5.device.createTexture({ size, format, usage });\n\t\t$._frameB = frameB = Q5.device.createTexture({ size, format, usage });\n\n\t\t$._frameShaderCode =\n\t\t\t$._baseShaderCode +\n\t\t\t/* wgsl */ `\nstruct VertexParams {\n\t@builtin(vertex_index) vertexIndex: u32\n}\nstruct FragParams {\n\t@builtin(position) position: vec4f,\n\t@location(0) texCoord: vec2f\n}\n\nconst ndc = array(vec2f(-1,-1), vec2f(1,-1), vec2f(-1,1), vec2f(1,1));\nconst quad = array(vec2f(0,1), vec2f(1,1), vec2f(0,0), vec2f(1,0));\n\n@group(0) @binding(0) var<uniform> q: Q5;\n@group(0) @binding(1) var samp: sampler;\n@group(0) @binding(2) var tex: texture_2d<f32>;\n\n@vertex\nfn vertexMain(v: VertexParams) -> FragParams {\n\tvar f: FragParams;\n\tf.position = vec4f(ndc[v.vertexIndex], 0.0, 1.0);\n\tf.texCoord = quad[v.vertexIndex];\n\treturn f;\n}\n\n@fragment\nfn fragMain(f: FragParams ) -> @location(0) vec4f {\n\treturn textureSample(tex, samp, f.texCoord);\n}`;\n\n\t\tlet frameShader = Q5.device.createShaderModule({\n\t\t\tlabel: 'frameShader',\n\t\t\tcode: $._frameShaderCode\n\t\t});\n\n\t\tframeSampler = Q5.device.createSampler({\n\t\t\tmagFilter: 'linear',\n\t\t\tminFilter: 'linear'\n\t\t});\n\n\t\tframeLayout = Q5.device.createBindGroupLayout({\n\t\t\tlabel: 'frameLayout',\n\t\t\tentries: [\n\t\t\t\t{\n\t\t\t\t\tbinding: 0,\n\t\t\t\t\tvisibility: GPUShaderStage.VERTEX | GPUShaderStage.FRAGMENT,\n\t\t\t\t\tbuffer: { type: 'uniform' }\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tbinding: 1,\n\t\t\t\t\tvisibility: GPUShaderStage.FRAGMENT,\n\t\t\t\t\tsampler: { type: 'filtering' }\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tbinding: 2,\n\t\t\t\t\tvisibility: GPUShaderStage.FRAGMENT,\n\t\t\t\t\ttexture: { viewDimension: '2d', sampleType: 'float' }\n\t\t\t\t}\n\t\t\t]\n\t\t});\n\n\t\tlet framePipelineLayout = Q5.device.createPipelineLayout({\n\t\t\tbindGroupLayouts: [frameLayout]\n\t\t});\n\n\t\t$._pipelineConfigs[0] = {\n\t\t\tlayout: framePipelineLayout,\n\t\t\tvertex: { module: frameShader, entryPoint: 'vertexMain' },\n\t\t\tfragment: {\n\t\t\t\tmodule: frameShader,\n\t\t\t\tentryPoint: 'fragMain',\n\t\t\t\ttargets: [{ format }]\n\t\t\t},\n\t\t\tprimitive: { topology: 'triangle-strip' },\n\t\t\tmultisample: { count: 4 }\n\t\t};\n\n\t\t// Create a pipeline for rendering frames\n\t\t$._pipelines[0] = Q5.device.createRenderPipeline($._pipelineConfigs[0]);\n\t};\n\n\t$._createCanvas = (w, h, opt) => {\n\t\tq.ctx = q.drawingContext = c.getContext('webgpu');\n\n\t\topt.format ??= navigator.gpu.getPreferredCanvasFormat();\n\t\topt.device ??= Q5.device;\n\t\tif (opt.alpha) opt.alphaMode = 'premultiplied';\n\n\t\t$.ctx.configure(opt);\n\n\t\tcreateMainView();\n\t\treturn c;\n\t};\n\n\t$._resizeCanvas = (w, h) => {\n\t\t$._setCanvasSize(w, h);\n\t\tcreateMainView();\n\t};\n\n\tlet addColor = (r, g, b, a) => {\n\t\tlet cf = $._colorFormat;\n\t\tif (typeof r == 'string' || $._colorMode != 'rgb') {\n\t\t\tr = $.color(r, g, b, a);\n\t\t} else if (b == undefined) {\n\t\t\t// grayscale mode `fill(1, 0.5)`\n\t\t\ta = g ?? cf;\n\t\t\tg = b = r;\n\t\t}\n\t\ta ??= cf;\n\t\tif (r._q5Color) {\n\t\t\tlet c = r;\n\t\t\tif (c.r != undefined) ({ r, g, b, a } = c);\n\t\t\telse {\n\t\t\t\ta = c.a;\n\t\t\t\tif (c.c != undefined) c = Q5.OKLCHtoRGB(c.l, c.c, c.h);\n\t\t\t\telse if (c.l != undefined) c = Q5.HSLtoRGB(c.h, c.s, c.l);\n\t\t\t\telse c = Q5.HSLtoRGB(...Q5.HSBtoHSL(c.h, c.s, c.b));\n\t\t\t\t[r, g, b] = c;\n\t\t\t}\n\t\t}\n\n\t\tif (cf == 255) {\n\t\t\tr /= 255;\n\t\t\tg /= 255;\n\t\t\tb /= 255;\n\t\t\ta /= 255;\n\t\t}\n\n\t\tlet cs = colorStack,\n\t\t\ti = colorStackIndex;\n\t\tcs[i++] = r;\n\t\tcs[i++] = g;\n\t\tcs[i++] = b;\n\t\tcs[i++] = a;\n\t\tcolorStackIndex = i;\n\n\t\tcolorIndex++;\n\t};\n\n\t$._stroke = 0;\n\t$._fill = $._tint = $._globalAlpha = 1;\n\t$._doFill = $._doStroke = true;\n\n\t$.fill = (r, g, b, a) => {\n\t\taddColor(r, g, b, a);\n\t\t$._doFill = $._fillSet = true;\n\t\t$._fill = colorIndex;\n\t};\n\t$.stroke = (r, g, b, a) => {\n\t\taddColor(r, g, b, a);\n\t\t$._doStroke = $._strokeSet = true;\n\t\t$._stroke = colorIndex;\n\t};\n\t$.tint = (r, g, b, a) => {\n\t\taddColor(r, g, b, a);\n\t\t$._tint = colorIndex;\n\t};\n\t$.opacity = (a) => ($._globalAlpha = a);\n\t$.noFill = () => ($._doFill = false);\n\t$.noStroke = () => ($._doStroke = false);\n\t$.noTint = () => ($._tint = 1);\n\n\t$._strokeWeight = 1;\n\t$._hsw = 0.5;\n\t$._scaledSW = 1;\n\n\t$.strokeWeight = (v) => {\n\t\tv = Math.abs(v);\n\t\t$._strokeWeight = v;\n\t\t$._scaledSW = v * $._scale;\n\t\t$._hsw = v / 2;\n\t};\n\n\tconst MAX_TRANSFORMS = $._graphics ? 1000 : 1e7,\n\t\tMATRIX_SIZE = 16, // 4x4 matrix\n\t\ttransforms = new Float32Array(MAX_TRANSFORMS * MATRIX_SIZE);\n\n\tlet matrix,\n\t\tmatrices = [],\n\t\tmatricesIndexStack = [];\n\n\t// tracks if the matrix has been modified\n\t$._matrixDirty = false;\n\n\t// initialize with a 4x4 identity matrix\n\t// prettier-ignore\n\tmatrices.push([\n\t\t1, 0, 0, 0,\n\t\t0, 1, 0, 0,\n\t\t0, 0, 1, 0,\n\t\t0, 0, 0, 1\n\t]);\n\n\ttransforms.set(matrices[0]);\n\n\t$.resetMatrix = () => {\n\t\tmatrix = matrices[0].slice();\n\t\t$._matrixIndex = 0;\n\t};\n\t$.resetMatrix();\n\n\t$.translate = (x, y, z) => {\n\t\tif (!x && !y && !z) return;\n\t\t// update the translation values\n\t\tmatrix[12] += x;\n\t\tmatrix[13] -= y;\n\t\tmatrix[14] += z || 0;\n\t\t$._matrixDirty = true;\n\t};\n\n\t$.rotate = (a) => {\n\t\tif (!a) return;\n\t\tif ($._angleMode) a *= $._DEGTORAD;\n\n\t\tlet cosR = Math.cos(a),\n\t\t\tsinR = Math.sin(a),\n\t\t\tm = matrix,\n\t\t\tm0 = m[0],\n\t\t\tm1 = m[1],\n\t\t\tm4 = m[4],\n\t\t\tm5 = m[5];\n\n\t\t// if identity matrix, just set the rotation values\n\t\tif (m0 == 1 && !m1 && !m4 && m5 == 1) {\n\t\t\tm[0] = cosR;\n\t\t\tm[1] = -sinR;\n\t\t\tm[4] = sinR;\n\t\t\tm[5] = cosR;\n\t\t} else {\n\t\t\t// combine the current rotation with the new rotation\n\t\t\tm[0] = m0 * cosR + m1 * sinR;\n\t\t\tm[1] = m1 * cosR - m0 * sinR;\n\t\t\tm[4] = m4 * cosR + m5 * sinR;\n\t\t\tm[5] = m5 * cosR - m4 * sinR;\n\t\t}\n\n\t\t$._matrixDirty = true;\n\t};\n\n\t$._scale = 1;\n\n\t$.scale = (x = 1, y, z = 1) => {\n\t\ty ??= x;\n\n\t\t$._scale = Math.max(Math.abs(x), Math.abs(y));\n\t\t$._scaledSW = $._strokeWeight * $._scale;\n\n\t\tlet m = matrix;\n\n\t\tm[0] *= x;\n\t\tm[1] *= x;\n\t\tm[2] *= x;\n\t\tm[3] *= x;\n\t\tm[4] *= y;\n\t\tm[5] *= y;\n\t\tm[6] *= y;\n\t\tm[7] *= y;\n\t\tm[8] *= z;\n\t\tm[9] *= z;\n\t\tm[10] *= z;\n\t\tm[11] *= z;\n\n\t\t$._matrixDirty = true;\n\t};\n\n\t$.shearX = (ang) => {\n\t\tif (!ang) return;\n\t\tif ($._angleMode) ang *= $._DEGTORAD;\n\n\t\tlet tanAng = Math.tan(ang),\n\t\t\tm = matrix,\n\t\t\tm0 = m[0],\n\t\t\tm1 = m[1],\n\t\t\tm4 = m[4],\n\t\t\tm5 = m[5];\n\n\t\tm[0] = m0 + m4 * tanAng;\n\t\tm[1] = m1 + m5 * tanAng;\n\n\t\t$._matrixDirty = true;\n\t};\n\n\t$.shearY = (ang) => {\n\t\tif (!ang) return;\n\t\tif ($._angleMode) ang *= $._DEGTORAD;\n\n\t\tlet tanAng = Math.tan(ang),\n\t\t\tm = matrix,\n\t\t\tm0 = m[0],\n\t\t\tm1 = m[1],\n\t\t\tm4 = m[4],\n\t\t\tm5 = m[5];\n\n\t\tm[4] = m4 + m0 * tanAng;\n\t\tm[5] = m5 + m1 * tanAng;\n\n\t\t$._matrixDirty = true;\n\t};\n\n\t$.applyMatrix = (...args) => {\n\t\tlet m;\n\t\tif (args.length == 1) m = args[0];\n\t\telse m = args;\n\n\t\tif (m.length == 9) {\n\t\t\t// convert 3x3 matrix to 4x4 matrix\n\t\t\tm = [m[0], m[1], 0, m[2], m[3], m[4], 0, m[5], 0, 0, 1, 0, m[6], m[7], 0, m[8]];\n\t\t} else if (m.length != 16) {\n\t\t\tthrow new Error('Matrix must be a 3x3 or 4x4 array.');\n\t\t}\n\n\t\t// overwrite the current transformation matrix\n\t\tmatrix = m.slice();\n\t\t$._matrixDirty = true;\n\t};\n\n\t// saves the current matrix state\n\t$._saveMatrix = () => {\n\t\ttransforms.set(matrix, matrices.length * MATRIX_SIZE);\n\t\t$._matrixIndex = matrices.length;\n\t\tmatrices.push(matrix.slice());\n\t\t$._matrixDirty = false;\n\t};\n\n\t// push the current matrix index onto the stack\n\t$.pushMatrix = () => {\n\t\tif ($._matrixDirty) $._saveMatrix();\n\t\tmatricesIndexStack.push($._matrixIndex);\n\t};\n\n\t$.popMatrix = () => {\n\t\tif (!matricesIndexStack.length) {\n\t\t\treturn console.warn('Matrix index stack is empty!');\n\t\t}\n\t\t// pop the last matrix index and set it as the current matrix index\n\t\tlet idx = matricesIndexStack.pop();\n\t\tmatrix = matrices[idx].slice();\n\t\t$._matrixIndex = idx;\n\t\t$._matrixDirty = false;\n\t};\n\n\tlet _pushStyles = $.pushStyles;\n\t$.pushStyles = () => {\n\t\t_pushStyles();\n\t\t$.strokeWeight($._strokeWeight);\n\t};\n\n\t$.push = () => {\n\t\t$.pushMatrix();\n\t\t$.pushStyles();\n\t};\n\n\t$.pop = () => {\n\t\t$.popMatrix();\n\t\t$.popStyles();\n\t};\n\n\t$._calcBox = (x, y, w, h, mode) => {\n\t\t// left, right, top, bottom\n\t\tlet l, r, t, b;\n\t\tif (!mode || mode == 'corner') {\n\t\t\tl = x;\n\t\t\tr = x + w;\n\t\t\tt = -y;\n\t\t\tb = -(y + h);\n\t\t} else if (mode == 'center') {\n\t\t\tlet hw = w / 2,\n\t\t\t\thh = h / 2;\n\t\t\tl = x - hw;\n\t\t\tr = x + hw;\n\t\t\tt = -(y - hh);\n\t\t\tb = -(y + hh);\n\t\t} else {\n\t\t\t// CORNERS\n\t\t\tl = x;\n\t\t\tr = w;\n\t\t\tt = -y;\n\t\t\tb = -h;\n\t\t}\n\n\t\treturn [l, r, t, b];\n\t};\n\n\t// prettier-ignore\n\tlet blendFactors = [\n\t\t'zero',                // 0\n\t\t'one',                 // 1\n\t\t'src-alpha',           // 2\n\t\t'one-minus-src-alpha', // 3\n\t\t'dst',                 // 4\n\t\t'dst-alpha',           // 5\n\t\t'one-minus-dst-alpha', // 6\n\t\t'one-minus-src'        // 7\n\t];\n\tlet blendOps = [\n\t\t'add', // 0\n\t\t'subtract', // 1\n\t\t'reverse-subtract', // 2\n\t\t'min', // 3\n\t\t'max' // 4\n\t];\n\n\t// other blend modes are not supported yet\n\tconst blendModes = {\n\t\tnormal: [2, 3, 0, 2, 3, 0],\n\t\t// destination_over: [6, 1, 0, 6, 1, 0],\n\t\tadditive: [1, 1, 0, 1, 1, 0]\n\t\t// source_in: [5, 0, 0, 5, 0, 0],\n\t\t// destination_in: [0, 2, 0, 0, 2, 0],\n\t\t// source_out: [6, 0, 0, 6, 0, 0],\n\t\t// destination_out: [0, 3, 0, 0, 3, 0],\n\t\t// source_atop: [5, 3, 0, 5, 3, 0],\n\t\t// destination_atop: [6, 2, 0, 6, 2, 0]\n\t};\n\n\t$.blendConfigs = {};\n\n\tfor (const [name, mode] of Object.entries(blendModes)) {\n\t\t$.blendConfigs[name] = {\n\t\t\tcolor: {\n\t\t\t\tsrcFactor: blendFactors[mode[0]],\n\t\t\t\tdstFactor: blendFactors[mode[1]],\n\t\t\t\toperation: blendOps[mode[2]]\n\t\t\t},\n\t\t\talpha: {\n\t\t\t\tsrcFactor: blendFactors[mode[3]],\n\t\t\t\tdstFactor: blendFactors[mode[4]],\n\t\t\t\toperation: blendOps[mode[5]]\n\t\t\t}\n\t\t};\n\t}\n\n\t$._blendMode = 'normal';\n\n\t$.blendMode = (mode) => {\n\t\tif (mode == $._blendMode) return;\n\t\tif (mode == 'source-over') mode = 'normal';\n\t\tif (mode == 'lighter') mode = 'additive';\n\t\tmode = mode.toLowerCase().replace(/[ -]/g, '_');\n\t\t$._blendMode = mode;\n\n\t\tfor (let i = 0; i < $._pipelines.length; i++) {\n\t\t\t$._pipelineConfigs[i].fragment.targets[0].blend = $.blendConfigs[mode];\n\t\t\t$._pipelines[i] = Q5.device.createRenderPipeline($._pipelineConfigs[i]);\n\t\t}\n\t};\n\n\tlet shouldClear;\n\n\t$.clear = () => {\n\t\tshouldClear = true;\n\t};\n\n\t$.background = (r, g, b, a) => {\n\t\t$.push();\n\t\t$.resetMatrix();\n\t\tif (r.canvas) {\n\t\t\tlet img = r;\n\t\t\t$._imageMode = 'corner';\n\t\t\t$.image(img, -c.hw, -c.hh, c.w, c.h);\n\t\t} else {\n\t\t\t$._rectMode = 'corner';\n\t\t\t$.fill(r, g, b, a);\n\t\t\t$._doStroke = false;\n\t\t\t$.rect(-c.hw, -c.hh, c.w, c.h);\n\t\t}\n\t\t$.pop();\n\t};\n\n\t$._beginRender = () => {\n\t\t// swap the frame textures\n\t\tconst temp = frameA;\n\t\tframeA = frameB;\n\t\tframeB = temp;\n\n\t\tencoder = Q5.device.createCommandEncoder();\n\n\t\t$._pass = pass = encoder.beginRenderPass({\n\t\t\tlabel: 'q5-webgpu',\n\t\t\tcolorAttachments: [\n\t\t\t\t{\n\t\t\t\t\tview: mainView,\n\t\t\t\t\tresolveTarget: frameA.createView(),\n\t\t\t\t\tloadOp: 'clear',\n\t\t\t\t\tstoreOp: 'store',\n\t\t\t\t\tclearValue: [0, 0, 0, 0]\n\t\t\t\t}\n\t\t\t]\n\t\t});\n\n\t\tframeBindGroup = Q5.device.createBindGroup({\n\t\t\tlayout: frameLayout,\n\t\t\tentries: [\n\t\t\t\t{ binding: 0, resource: { buffer: uniformBuffer } },\n\t\t\t\t{ binding: 1, resource: frameSampler },\n\t\t\t\t{ binding: 2, resource: frameB.createView() }\n\t\t\t]\n\t\t});\n\n\t\tif (!shouldClear) {\n\t\t\tpass.setPipeline($._pipelines[$._prevFramePL]);\n\t\t\tpass.setBindGroup(0, frameBindGroup);\n\t\t\tpass.draw(4);\n\t\t}\n\t\tshouldClear = false;\n\t};\n\n\t$._render = () => {\n\t\tlet transformBuffer = Q5.device.createBuffer({\n\t\t\tsize: matrices.length * MATRIX_SIZE * 4, // 4 bytes per float\n\t\t\tusage: GPUBufferUsage.STORAGE,\n\t\t\tmappedAtCreation: true\n\t\t});\n\n\t\tnew Float32Array(transformBuffer.getMappedRange()).set(transforms.slice(0, matrices.length * MATRIX_SIZE));\n\t\ttransformBuffer.unmap();\n\n\t\t$._buffers.push(transformBuffer);\n\n\t\tlet colorsBuffer = Q5.device.createBuffer({\n\t\t\tsize: colorStackIndex * 4,\n\t\t\tusage: GPUBufferUsage.STORAGE,\n\t\t\tmappedAtCreation: true\n\t\t});\n\n\t\tnew Float32Array(colorsBuffer.getMappedRange()).set(colorStack.slice(0, colorStackIndex));\n\t\tcolorsBuffer.unmap();\n\n\t\t$._buffers.push(colorsBuffer);\n\n\t\t$._uniforms = [\n\t\t\t$.width,\n\t\t\t$.height,\n\t\t\t$.halfWidth,\n\t\t\t$.halfHeight,\n\t\t\t$._pixelDensity,\n\t\t\t$.frameCount,\n\t\t\tperformance.now(),\n\t\t\t$.deltaTime,\n\t\t\t$.mouseX,\n\t\t\t$.mouseY,\n\t\t\t$.mouseIsPressed ? 1 : 0,\n\t\t\t$.keyCode,\n\t\t\t$.keyIsPressed ? 1 : 0\n\t\t];\n\n\t\tQ5.device.queue.writeBuffer(uniformBuffer, 0, new Float32Array($._uniforms));\n\n\t\tlet mainBindGroup = Q5.device.createBindGroup({\n\t\t\tlayout: mainLayout,\n\t\t\tentries: [\n\t\t\t\t{ binding: 0, resource: { buffer: uniformBuffer } },\n\t\t\t\t{ binding: 1, resource: { buffer: transformBuffer } },\n\t\t\t\t{ binding: 2, resource: { buffer: colorsBuffer } }\n\t\t\t]\n\t\t});\n\n\t\tpass.setBindGroup(0, mainBindGroup);\n\n\t\tfor (let m of $._hooks.preRender) m();\n\n\t\tlet drawVertOffset = 0,\n\t\t\timageVertOffset = 0,\n\t\t\ttextCharOffset = 0,\n\t\t\tcurPipelineIndex = -1;\n\n\t\tfor (let i = 0; i < drawStack.length; i += 2) {\n\t\t\tlet v = drawStack[i + 1];\n\n\t\t\tif (curPipelineIndex != drawStack[i]) {\n\t\t\t\tcurPipelineIndex = drawStack[i];\n\t\t\t\tpass.setPipeline($._pipelines[curPipelineIndex]);\n\t\t\t}\n\n\t\t\tif (curPipelineIndex == 4 || curPipelineIndex >= 4000) {\n\t\t\t\t// draw text\n\t\t\t\tlet o = drawStack[i + 2];\n\t\t\t\tpass.setBindGroup(1, $._fonts[o].bindGroup);\n\t\t\t\tpass.setBindGroup(2, $._textBindGroup);\n\n\t\t\t\t// v is the number of characters in the text\n\t\t\t\tpass.draw(4, v, 0, textCharOffset);\n\t\t\t\ttextCharOffset += v;\n\t\t\t\ti++;\n\t\t\t} else if (curPipelineIndex == 2 || curPipelineIndex == 3 || curPipelineIndex >= 2000) {\n\t\t\t\t// draw an image or video frame\n\t\t\t\t// v is the texture index\n\t\t\t\tpass.setBindGroup(1, $._textureBindGroups[v]);\n\t\t\t\tpass.draw(4, 1, imageVertOffset);\n\t\t\t\timageVertOffset += 4;\n\t\t\t} else {\n\t\t\t\t// draw a shape\n\t\t\t\t// v is the number of vertices\n\t\t\t\tpass.draw(v, 1, drawVertOffset);\n\t\t\t\tdrawVertOffset += v;\n\t\t\t}\n\t\t}\n\t};\n\n\t$._finishRender = async () => {\n\t\tpass.end();\n\n\t\tpass = encoder.beginRenderPass({\n\t\t\tcolorAttachments: [\n\t\t\t\t{\n\t\t\t\t\tview: mainView,\n\t\t\t\t\tresolveTarget: $.ctx.getCurrentTexture().createView(),\n\t\t\t\t\tloadOp: 'clear',\n\t\t\t\t\tstoreOp: 'store',\n\t\t\t\t\tclearValue: [0, 0, 0, 0]\n\t\t\t\t}\n\t\t\t]\n\t\t});\n\n\t\tframeBindGroup = Q5.device.createBindGroup({\n\t\t\tlayout: frameLayout,\n\t\t\tentries: [\n\t\t\t\t{ binding: 0, resource: { buffer: uniformBuffer } },\n\t\t\t\t{ binding: 1, resource: frameSampler },\n\t\t\t\t{ binding: 2, resource: frameA.createView() }\n\t\t\t]\n\t\t});\n\n\t\tpass.setPipeline($._pipelines[$._framePL]);\n\t\tpass.setBindGroup(0, frameBindGroup);\n\t\tpass.draw(4);\n\t\tpass.end();\n\n\t\tQ5.device.queue.submit([encoder.finish()]);\n\t\t$._pass = pass = encoder = null;\n\n\t\t// destroy buffers\n\t\tQ5.device.queue.onSubmittedWorkDone().then(() => {\n\t\t\tfor (let b of $._buffers) b.destroy();\n\t\t\t$._buffers = [];\n\t\t});\n\n\t\t// clear the stacks for the next frame\n\t\tdrawStack.splice(0, drawStack.length);\n\t\tcolorIndex = 1;\n\t\tcolorStackIndex = 8;\n\t\tmatrices = [matrices[0]];\n\t\tmatricesIndexStack = [];\n\n\t\tfor (let m of $._hooks.postRender) m();\n\t};\n};\n\nQ5.initWebGPU = async () => {\n\tif (!navigator.gpu) {\n\t\tconsole.warn('q5 WebGPU not supported on this browser! Use Google Chrome or Edge.');\n\t\treturn false;\n\t}\n\tif (!Q5.requestedGPU) {\n\t\tlet adapter = await navigator.gpu.requestAdapter();\n\t\tif (!adapter) {\n\t\t\tconsole.warn('q5 WebGPU could not start! No appropriate GPUAdapter found, vulkan may need to be enabled.');\n\t\t\treturn false;\n\t\t}\n\t\tQ5.device = await adapter.requestDevice();\n\n\t\tQ5.device.lost.then((e) => {\n\t\t\tconsole.error('WebGPU crashed!');\n\t\t\tconsole.error(e);\n\t\t});\n\t}\n\treturn true;\n};\n\nQ5.WebGPU = async function(scope, parent) {\n\tif (!scope || scope == 'global') Q5._hasGlobal = true;\n\tif (!(await Q5.initWebGPU())) {\n\t\treturn new Q5(scope, parent, 'webgpu-fallback');\n\t}\n\treturn new Q5(scope, parent, 'webgpu');\n};\n\nQ5.webgpu = Q5.WebGPU;\nQ5.renderers.webgpu.shapes = ($) => {\n\t$._shapesPL = 1;\n\n\t$._shapesShaderCode =\n\t\t$._baseShaderCode +\n\t\t/* wgsl */ `\nstruct VertexParams {\n\t@builtin(vertex_index) vertexIndex : u32,\n\t@location(0) pos: vec2f,\n\t@location(1) colorIndex: f32,\n\t@location(2) matrixIndex: f32\n}\nstruct FragParams {\n\t@builtin(position) position: vec4f,\n\t@location(0) color: vec4f\n}\n\n@group(0) @binding(0) var<uniform> q: Q5;\n@group(0) @binding(1) var<storage> transforms: array<mat4x4<f32>>;\n@group(0) @binding(2) var<storage> colors : array<vec4f>;\n\nfn transformVertex(pos: vec2f, matrixIndex: f32) -> vec4f {\n\tvar vert = vec4f(pos, 0.0, 1.0);\n\tvert = transforms[i32(matrixIndex)] * vert;\n\tvert.x /= q.halfWidth;\n\tvert.y /= q.halfHeight;\n\treturn vert;\n}\n\n@vertex\nfn vertexMain(v: VertexParams) -> FragParams {\n\tvar vert = transformVertex(v.pos, v.matrixIndex);\n\n\tvar f: FragParams;\n\tf.position = vert;\n\tf.color = colors[i32(v.colorIndex)];\n\treturn f;\n}\n\n@fragment\nfn fragMain(f: FragParams) -> @location(0) vec4f {\n\treturn f.color;\n}\n`;\n\n\tlet shapesShader = Q5.device.createShaderModule({\n\t\tlabel: 'shapesShader',\n\t\tcode: $._shapesShaderCode\n\t});\n\n\tlet c = $.canvas,\n\t\tdrawStack = $._drawStack,\n\t\tvertexStack = new Float32Array($._graphics ? 1000 : 1e7),\n\t\tvertIndex = 0;\n\tconst TAU = Math.PI * 2;\n\tconst HALF_PI = Math.PI / 2;\n\n\tlet vertexBufferLayout = {\n\t\tarrayStride: 16, // 4 floats * 4 bytes\n\t\tattributes: [\n\t\t\t{ format: 'float32x2', offset: 0, shaderLocation: 0 }, // position\n\t\t\t{ format: 'float32', offset: 8, shaderLocation: 1 }, // colorIndex\n\t\t\t{ format: 'float32', offset: 12, shaderLocation: 2 } // matrixIndex\n\t\t]\n\t};\n\n\tlet pipelineLayout = Q5.device.createPipelineLayout({\n\t\tlabel: 'shapesPipelineLayout',\n\t\tbindGroupLayouts: $._bindGroupLayouts\n\t});\n\n\t$._pipelineConfigs[1] = {\n\t\tlabel: 'shapesPipeline',\n\t\tlayout: pipelineLayout,\n\t\tvertex: {\n\t\t\tmodule: shapesShader,\n\t\t\tentryPoint: 'vertexMain',\n\t\t\tbuffers: [vertexBufferLayout]\n\t\t},\n\t\tfragment: {\n\t\t\tmodule: shapesShader,\n\t\t\tentryPoint: 'fragMain',\n\t\t\ttargets: [{ format: 'bgra8unorm', blend: $.blendConfigs.normal }]\n\t\t},\n\t\tprimitive: { topology: 'triangle-strip', stripIndexFormat: 'uint32' },\n\t\tmultisample: { count: 4 }\n\t};\n\n\t$._pipelines[1] = Q5.device.createRenderPipeline($._pipelineConfigs[1]);\n\n\tconst addVert = (x, y, ci, ti) => {\n\t\tlet v = vertexStack,\n\t\t\ti = vertIndex;\n\t\tv[i++] = x;\n\t\tv[i++] = y;\n\t\tv[i++] = ci;\n\t\tv[i++] = ti;\n\t\tvertIndex = i;\n\t};\n\n\tconst addRect = (x1, y1, x2, y2, x3, y3, x4, y4, ci, ti) => {\n\t\tlet v = vertexStack,\n\t\t\ti = vertIndex;\n\n\t\tv[i++] = x1;\n\t\tv[i++] = y1;\n\t\tv[i++] = ci;\n\t\tv[i++] = ti;\n\n\t\tv[i++] = x2;\n\t\tv[i++] = y2;\n\t\tv[i++] = ci;\n\t\tv[i++] = ti;\n\n\t\tv[i++] = x4;\n\t\tv[i++] = y4;\n\t\tv[i++] = ci;\n\t\tv[i++] = ti;\n\n\t\tv[i++] = x3;\n\t\tv[i++] = y3;\n\t\tv[i++] = ci;\n\t\tv[i++] = ti;\n\n\t\tvertIndex = i;\n\t\tdrawStack.push($._shapesPL, 4);\n\t};\n\n\tconst addArc = (x, y, a, b, startAngle, endAngle, n, ci, ti) => {\n\t\tlet angleRange = endAngle - startAngle;\n\t\tlet angleIncrement = angleRange / n;\n\t\tlet t = startAngle;\n\n\t\tlet v = vertexStack,\n\t\t\ti = vertIndex;\n\n\t\tfor (let j = 0; j <= n; j++) {\n\t\t\t// add center vertex\n\t\t\tv[i++] = x;\n\t\t\tv[i++] = y;\n\t\t\tv[i++] = ci;\n\t\t\tv[i++] = ti;\n\n\t\t\t// calculate perimeter vertex\n\t\t\tlet vx = x + a * Math.cos(t);\n\t\t\tlet vy = y - b * Math.sin(t);\n\n\t\t\t// add perimeter vertex\n\t\t\tv[i++] = vx;\n\t\t\tv[i++] = vy;\n\t\t\tv[i++] = ci;\n\t\t\tv[i++] = ti;\n\n\t\t\tt += angleIncrement;\n\t\t}\n\n\t\tvertIndex = i;\n\t\tdrawStack.push($._shapesPL, (n + 1) * 2);\n\t};\n\n\tconst addArcStroke = (x, y, outerA, outerB, innerA, innerB, startAngle, endAngle, n, ci, ti) => {\n\t\tlet angleRange = endAngle - startAngle;\n\t\tlet angleIncrement = angleRange / n;\n\t\tlet t = startAngle;\n\n\t\tlet v = vertexStack,\n\t\t\ti = vertIndex;\n\n\t\tfor (let j = 0; j <= n; j++) {\n\t\t\t// Outer vertex\n\t\t\tlet vxOuter = x + outerA * Math.cos(t);\n\t\t\tlet vyOuter = y - outerB * Math.sin(t);\n\n\t\t\t// Inner vertex\n\t\t\tlet vxInner = x + innerA * Math.cos(t);\n\t\t\tlet vyInner = y - innerB * Math.sin(t);\n\n\t\t\t// Add vertices for triangle strip\n\t\t\tv[i++] = vxOuter;\n\t\t\tv[i++] = vyOuter;\n\t\t\tv[i++] = ci;\n\t\t\tv[i++] = ti;\n\n\t\t\tv[i++] = vxInner;\n\t\t\tv[i++] = vyInner;\n\t\t\tv[i++] = ci;\n\t\t\tv[i++] = ti;\n\n\t\t\tt += angleIncrement;\n\t\t}\n\n\t\tvertIndex = i;\n\t\tdrawStack.push($._shapesPL, (n + 1) * 2);\n\t};\n\n\t$.rectMode = (x) => ($._rectMode = x);\n\n\t$.rect = (x, y, w, h, rr = 0) => {\n\t\tlet [l, r, t, b] = $._calcBox(x, y, w, h, $._rectMode);\n\t\tlet ci, ti;\n\t\tif ($._matrixDirty) $._saveMatrix();\n\t\tti = $._matrixIndex;\n\n\t\tif (!rr) {\n\t\t\tif ($._doFill) {\n\t\t\t\tci = $._fill;\n\t\t\t\taddRect(l, t, r, t, r, b, l, b, ci, ti);\n\t\t\t}\n\n\t\t\tif ($._doStroke) {\n\t\t\t\tci = $._stroke;\n\t\t\t\tlet sw = $._strokeWeight / 2;\n\n\t\t\t\t// Calculate stroke positions\n\t\t\t\tlet lsw = l - sw,\n\t\t\t\t\trsw = r + sw,\n\t\t\t\t\ttsw = t + sw,\n\t\t\t\t\tbsw = b - sw,\n\t\t\t\t\tlpsw = l + sw,\n\t\t\t\t\trpsw = r - sw,\n\t\t\t\t\ttpsw = t - sw,\n\t\t\t\t\tbpsw = b + sw;\n\n\t\t\t\taddRect(lsw, tpsw, rsw, tpsw, rsw, tsw, lsw, tsw, ci, ti); // Top\n\t\t\t\taddRect(lsw, bsw, rsw, bsw, rsw, bpsw, lsw, bpsw, ci, ti); // Bottom\n\n\t\t\t\t// Adjust side strokes to avoid overlapping corners\n\t\t\t\ttsw = t - sw;\n\t\t\t\tbsw = b + sw;\n\n\t\t\t\taddRect(lsw, tsw, lpsw, tsw, lpsw, bsw, lsw, bsw, ci, ti); // Left\n\t\t\t\taddRect(rpsw, tsw, rsw, tsw, rsw, bsw, rpsw, bsw, ci, ti); // Right\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tl += rr;\n\t\tr -= rr;\n\t\tt -= rr;\n\t\tb += rr;\n\n\t\t// Clamp radius\n\t\trr = Math.min(rr, Math.min(w, h) / 2);\n\n\t\tlet n = getArcSegments(rr * $._scale);\n\n\t\tlet trr = t + rr,\n\t\t\tbrr = b - rr,\n\t\t\tlrr = l - rr,\n\t\t\trrr = r + rr;\n\n\t\tif ($._doFill) {\n\t\t\tci = $._fill;\n\t\t\t// Corner arcs\n\t\t\taddArc(r, b, rr, rr, 0, HALF_PI, n, ci, ti);\n\t\t\taddArc(l, b, rr, rr, Math.PI, HALF_PI, n, ci, ti);\n\t\t\taddArc(l, t, rr, rr, -Math.PI, -HALF_PI, n, ci, ti);\n\t\t\taddArc(r, t, rr, rr, -HALF_PI, 0, n, ci, ti);\n\n\t\t\taddRect(l, trr, r, trr, r, brr, l, brr, ci, ti); // center\n\t\t\taddRect(l, t, lrr, t, lrr, b, l, b, ci, ti); // Left\n\t\t\taddRect(rrr, t, r, t, r, b, rrr, b, ci, ti); // Right\n\t\t}\n\n\t\tif ($._doStroke) {\n\t\t\tci = $._stroke;\n\t\t\tlet hsw = $._hsw;\n\n\t\t\tlet outerA = rr + hsw,\n\t\t\t\touterB = rr + hsw,\n\t\t\t\tinnerA = rr - hsw,\n\t\t\t\tinnerB = rr - hsw;\n\t\t\t// Corner arc strokes\n\t\t\taddArcStroke(r, b, outerA, outerB, innerA, innerB, 0, HALF_PI, n, ci, ti);\n\t\t\taddArcStroke(l, b, outerA, outerB, innerA, innerB, Math.PI, HALF_PI, n, ci, ti);\n\t\t\taddArcStroke(l, t, outerA, outerB, innerA, innerB, -Math.PI, -HALF_PI, n, ci, ti);\n\t\t\taddArcStroke(r, t, outerA, outerB, innerA, innerB, -HALF_PI, 0, n, ci, ti);\n\n\t\t\tlet lrrMin = lrr - hsw,\n\t\t\t\tlrrMax = lrr + hsw,\n\t\t\t\trrrMin = rrr - hsw,\n\t\t\t\trrrMax = rrr + hsw,\n\t\t\t\ttrrMin = trr - hsw,\n\t\t\t\ttrrMax = trr + hsw,\n\t\t\t\tbrrMin = brr - hsw,\n\t\t\t\tbrrMax = brr + hsw;\n\n\t\t\t// Side strokes - positioned outside\n\t\t\taddRect(lrrMin, t, lrrMax, t, lrrMax, b, lrrMin, b, ci, ti); // Left\n\t\t\taddRect(rrrMin, t, rrrMax, t, rrrMax, b, rrrMin, b, ci, ti); // Right\n\t\t\taddRect(l, trrMin, r, trrMin, r, trrMax, l, trrMax, ci, ti); // Top\n\t\t\taddRect(l, brrMin, r, brrMin, r, brrMax, l, brrMax, ci, ti); // Bottom\n\t\t}\n\t};\n\n\t$.square = (x, y, s) => $.rect(x, y, s, s);\n\n\t$.plane = (x, y, w, h) => {\n\t\th ??= w;\n\t\tlet [l, r, t, b] = $._calcBox(x, y, w, h, 'center');\n\t\tif ($._matrixDirty) $._saveMatrix();\n\t\taddRect(l, t, r, t, r, b, l, b, $._fill, $._matrixIndex);\n\t};\n\n\t// prettier-ignore\n\tconst getArcSegments = (d) =>\n\t\td < 4 ? 6 :\n\t\t\td < 6 ? 8 :\n\t\t\t\td < 10 ? 10 :\n\t\t\t\t\td < 16 ? 12 :\n\t\t\t\t\t\td < 20 ? 14 :\n\t\t\t\t\t\t\td < 22 ? 16 :\n\t\t\t\t\t\t\t\td < 24 ? 18 :\n\t\t\t\t\t\t\t\t\td < 28 ? 20 :\n\t\t\t\t\t\t\t\t\t\td < 34 ? 22 :\n\t\t\t\t\t\t\t\t\t\t\td < 42 ? 24 :\n\t\t\t\t\t\t\t\t\t\t\t\td < 48 ? 26 :\n\t\t\t\t\t\t\t\t\t\t\t\t\td < 56 ? 28 :\n\t\t\t\t\t\t\t\t\t\t\t\t\t\td < 64 ? 30 :\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\td < 72 ? 32 :\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\td < 84 ? 34 :\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\td < 96 ? 36 :\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\td < 98 ? 38 :\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\td < 113 ? 40 :\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\td < 149 ? 44 :\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\td < 199 ? 48 :\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\td < 261 ? 52 :\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\td < 353 ? 56 :\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\td < 461 ? 60 :\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\td < 585 ? 64 :\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\td < 1200 ? 70 :\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\td < 1800 ? 80 :\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\td < 2400 ? 90 :\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t100;\n\n\t$._ellipseMode = Q5.CENTER;\n\t$.ellipseMode = (x) => ($._ellipseMode = x);\n\n\t$.ellipse = (x, y, w, h) => {\n\t\tlet n = getArcSegments(Math.max(Math.abs(w), Math.abs(h)) * $._scale);\n\t\tlet a = w / 2;\n\t\tlet b = w == h ? a : h / 2;\n\n\t\tif ($._matrixDirty) $._saveMatrix();\n\t\tlet ti = $._matrixIndex;\n\n\t\tif ($._doFill) {\n\t\t\taddArc(x, -y, a, b, 0, TAU, n, $._fill, ti);\n\t\t}\n\t\tif ($._doStroke) {\n\t\t\tlet sw = $._strokeWeight / 2;\n\t\t\t// Draw the stroke as a ring using triangle strips\n\t\t\taddArcStroke(x, -y, a + sw, b + sw, a - sw, b - sw, 0, TAU, n, $._stroke, ti);\n\t\t}\n\t};\n\n\t$.circle = (x, y, d) => $.ellipse(x, y, d, d);\n\n\t$.arc = (x, y, w, h, start, stop) => {\n\t\tif (start === stop) return $.ellipse(x, y, w, h);\n\n\t\t// Convert angles if needed\n\t\tif ($._angleMode) {\n\t\t\tstart = $.radians(start);\n\t\t\tstop = $.radians(stop);\n\t\t}\n\n\t\t// Normalize angles\n\t\tstart %= TAU;\n\t\tstop %= TAU;\n\t\tif (start < 0) start += TAU;\n\t\tif (stop < 0) stop += TAU;\n\t\tif (start > stop) stop += TAU;\n\t\tif (start == stop) return $.ellipse(x, y, w, h);\n\n\t\t// Calculate position based on ellipseMode\n\t\tlet a, b;\n\t\tif ($._ellipseMode == $.CENTER) {\n\t\t\ta = w / 2;\n\t\t\tb = h / 2;\n\t\t} else if ($._ellipseMode == $.RADIUS) {\n\t\t\ta = w;\n\t\t\tb = h;\n\t\t} else if ($._ellipseMode == $.CORNER) {\n\t\t\tx += w / 2;\n\t\t\ty += h / 2;\n\t\t\ta = w / 2;\n\t\t\tb = h / 2;\n\t\t} else if ($._ellipseMode == $.CORNERS) {\n\t\t\tx = (x + w) / 2;\n\t\t\ty = (y + h) / 2;\n\t\t\ta = (w - x) / 2;\n\t\t\tb = (h - y) / 2;\n\t\t}\n\n\t\tif ($._matrixDirty) $._saveMatrix();\n\t\tlet ti = $._matrixIndex;\n\t\tlet n = getArcSegments(Math.max(Math.abs(w), Math.abs(h)) * $._scale);\n\n\t\t// Draw fill\n\t\tif ($._doFill) {\n\t\t\taddArc(x, -y, a, b, start, stop, n, $._fill, ti);\n\t\t}\n\n\t\t// Draw stroke\n\t\tif ($._doStroke) {\n\t\t\tlet hsw = $._hsw;\n\t\t\taddArcStroke(x, -y, a + hsw, b + hsw, a - hsw, b - hsw, start, stop, n, $._stroke, ti);\n\t\t\tif ($._strokeJoin == 'round') {\n\t\t\t\taddArc(x + a * Math.cos(start), -y - b * Math.sin(start), hsw, hsw, 0, TAU, n, $._stroke, ti);\n\t\t\t\taddArc(x + a * Math.cos(stop), -y - b * Math.sin(stop), hsw, hsw, 0, TAU, n, $._stroke, ti);\n\t\t\t}\n\t\t}\n\t};\n\n\t$.point = (x, y) => {\n\t\tif ($._matrixDirty) $._saveMatrix();\n\t\tlet ti = $._matrixIndex,\n\t\t\tci = $._stroke,\n\t\t\tsw = $._strokeWeight;\n\n\t\tif ($._scaledSW < 2) {\n\t\t\tlet [l, r, t, b] = $._calcBox(x, y, sw, sw, 'corner');\n\t\t\taddRect(l, t, r, t, r, b, l, b, ci, ti);\n\t\t} else {\n\t\t\tlet n = getArcSegments($._scaledSW);\n\t\t\tsw /= 2;\n\t\t\taddArc(x, -y, sw, sw, 0, TAU, n, ci, ti);\n\t\t}\n\t};\n\n\t$._strokeJoin = 'round';\n\t$.strokeJoin = (x) => ($._strokeJoin = x);\n\t$.lineMode = () => ($._strokeJoin = 'none');\n\n\t$.line = (x1, y1, x2, y2) => {\n\t\tif ($._matrixDirty) $._saveMatrix();\n\t\tlet ti = $._matrixIndex,\n\t\t\tci = $._stroke,\n\t\t\tsw = $._strokeWeight,\n\t\t\thsw = $._hsw;\n\n\t\t// calculate the direction vector and length\n\t\tlet dx = x2 - x1,\n\t\t\tdy = y2 - y1,\n\t\t\tlength = Math.hypot(dx, dy);\n\n\t\t// calculate the perpendicular vector for line thickness\n\t\tlet px = -(dy / length) * hsw,\n\t\t\tpy = (dx / length) * hsw;\n\n\t\taddRect(x1 + px, -y1 - py, x1 - px, -y1 + py, x2 - px, -y2 + py, x2 + px, -y2 - py, ci, ti);\n\n\t\tif ($._scaledSW > 2 && $._strokeJoin != 'none') {\n\t\t\tlet n = getArcSegments($._scaledSW);\n\t\t\taddArc(x1, -y1, hsw, hsw, 0, TAU, n, ci, ti);\n\t\t\taddArc(x2, -y2, hsw, hsw, 0, TAU, n, ci, ti);\n\t\t}\n\t};\n\n\tlet curveSegments = 20;\n\t$.curveDetail = (x) => (curveSegments = x);\n\n\tlet shapeVertCount;\n\tlet sv = []; // shape vertices\n\tlet curveVertices = []; // curve vertices\n\n\t$.beginShape = () => {\n\t\tshapeVertCount = 0;\n\t\tsv = [];\n\t\tcurveVertices = [];\n\t};\n\n\t$.vertex = (x, y) => {\n\t\tif ($._matrixDirty) $._saveMatrix();\n\t\tsv.push(x, -y, $._fill, $._matrixIndex);\n\t\tshapeVertCount++;\n\t};\n\n\t$.curveVertex = (x, y) => {\n\t\tif ($._matrixDirty) $._saveMatrix();\n\t\tcurveVertices.push({ x: x, y: -y });\n\t};\n\n\t$.bezierVertex = function(cx1, cy1, cx2, cy2, x, y) {\n\t\tif (shapeVertCount === 0) throw new Error('Shape needs a vertex()');\n\t\tif ($._matrixDirty) $._saveMatrix();\n\n\t\t// Get the last vertex as the starting point (P\u2080)\n\t\tlet prevIndex = (shapeVertCount - 1) * 4;\n\t\tlet startX = sv[prevIndex];\n\t\tlet startY = sv[prevIndex + 1];\n\n\t\tlet step = 1 / curveSegments;\n\n\t\tlet vx, vy;\n\t\tlet quadratic = arguments.length == 4;\n\t\tif (quadratic) {\n\t\t\tx = cx2;\n\t\t\ty = cy2;\n\t\t}\n\n\t\tlet end = 1 + step;\n\t\tfor (let t = step; t <= end; t += step) {\n\t\t\t// Start from 0.1 to avoid duplicating the start point\n\t\t\tlet t2 = t * t;\n\n\t\t\tlet mt = 1 - t;\n\t\t\tlet mt2 = mt * mt;\n\n\t\t\tif (quadratic) {\n\t\t\t\tvx = mt2 * startX + 2 * mt * t * cx1 + t2 * x;\n\t\t\t\tvy = mt2 * startY + 2 * mt * t * -cy1 + t2 * -y;\n\t\t\t} else {\n\t\t\t\tlet t3 = t2 * t;\n\t\t\t\tlet mt3 = mt2 * mt;\n\n\t\t\t\t// Cubic Bezier formula\n\t\t\t\tvx = mt3 * startX + 3 * mt2 * t * cx1 + 3 * mt * t2 * cx2 + t3 * x;\n\t\t\t\tvy = mt3 * startY + 3 * mt2 * t * -cy1 + 3 * mt * t2 * -cy2 + t3 * -y;\n\t\t\t}\n\n\t\t\tsv.push(vx, vy, $._fill, $._matrixIndex);\n\t\t\tshapeVertCount++;\n\t\t}\n\t};\n\n\t$.quadraticVertex = (cx, cy, x, y) => $.bezierVertex(cx, cy, x, y);\n\n\t$.endShape = (close) => {\n\t\tif (curveVertices.length > 0) {\n\t\t\t// duplicate start and end points if necessary\n\t\t\tlet points = [...curveVertices];\n\t\t\tif (points.length < 4) {\n\t\t\t\t// duplicate first and last points\n\t\t\t\twhile (points.length < 4) {\n\t\t\t\t\tpoints.unshift(points[0]);\n\t\t\t\t\tpoints.push(points[points.length - 1]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// calculate catmull-rom spline curve points\n\t\t\tfor (let i = 0; i < points.length - 3; i++) {\n\t\t\t\tlet p0 = points[i];\n\t\t\t\tlet p1 = points[i + 1];\n\t\t\t\tlet p2 = points[i + 2];\n\t\t\t\tlet p3 = points[i + 3];\n\n\t\t\t\tfor (let t = 0; t <= 1; t += 0.1) {\n\t\t\t\t\tlet t2 = t * t;\n\t\t\t\t\tlet t3 = t2 * t;\n\n\t\t\t\t\tlet x =\n\t\t\t\t\t\t0.5 *\n\t\t\t\t\t\t(2 * p1.x +\n\t\t\t\t\t\t\t(-p0.x + p2.x) * t +\n\t\t\t\t\t\t\t(2 * p0.x - 5 * p1.x + 4 * p2.x - p3.x) * t2 +\n\t\t\t\t\t\t\t(-p0.x + 3 * p1.x - 3 * p2.x + p3.x) * t3);\n\n\t\t\t\t\tlet y =\n\t\t\t\t\t\t0.5 *\n\t\t\t\t\t\t(2 * p1.y +\n\t\t\t\t\t\t\t(-p0.y + p2.y) * t +\n\t\t\t\t\t\t\t(2 * p0.y - 5 * p1.y + 4 * p2.y - p3.y) * t2 +\n\t\t\t\t\t\t\t(-p0.y + 3 * p1.y - 3 * p2.y + p3.y) * t3);\n\n\t\t\t\t\tsv.push(x, y, $._fill, $._matrixIndex);\n\t\t\t\t\tshapeVertCount++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (shapeVertCount < 3) {\n\t\t\tthrow new Error('A shape must have at least 3 vertices.');\n\t\t}\n\n\t\t// close the shape if requested\n\t\tif (close) {\n\t\t\tlet firstIndex = 0;\n\t\t\tlet lastIndex = (shapeVertCount - 1) * 4;\n\n\t\t\tlet firstX = sv[firstIndex];\n\t\t\tlet firstY = sv[firstIndex + 1];\n\t\t\tlet lastX = sv[lastIndex];\n\t\t\tlet lastY = sv[lastIndex + 1];\n\n\t\t\tif (firstX !== lastX || firstY !== lastY) {\n\t\t\t\tsv.push(firstX, firstY, sv[firstIndex + 2], sv[firstIndex + 3]);\n\t\t\t\tshapeVertCount++;\n\t\t\t}\n\t\t}\n\n\t\tif ($._doFill) {\n\t\t\tif (shapeVertCount == 5) {\n\t\t\t\t// for quads, draw two triangles\n\t\t\t\taddVert(sv[0], sv[1], sv[2], sv[3]); // v0\n\t\t\t\taddVert(sv[4], sv[5], sv[6], sv[7]); // v1\n\t\t\t\taddVert(sv[12], sv[13], sv[14], sv[15]); // v3\n\t\t\t\taddVert(sv[8], sv[9], sv[10], sv[11]); // v2\n\t\t\t\tdrawStack.push($._shapesPL, 4);\n\t\t\t} else {\n\t\t\t\t// triangulate the shape\n\t\t\t\tfor (let i = 1; i < shapeVertCount - 1; i++) {\n\t\t\t\t\tlet v0 = 0;\n\t\t\t\t\tlet v1 = i * 4;\n\t\t\t\t\tlet v2 = (i + 1) * 4;\n\n\t\t\t\t\taddVert(sv[v0], sv[v0 + 1], sv[v0 + 2], sv[v0 + 3]);\n\t\t\t\t\taddVert(sv[v1], sv[v1 + 1], sv[v1 + 2], sv[v1 + 3]);\n\t\t\t\t\taddVert(sv[v2], sv[v2 + 1], sv[v2 + 2], sv[v2 + 3]);\n\t\t\t\t}\n\t\t\t\tdrawStack.push($._shapesPL, (shapeVertCount - 2) * 3);\n\t\t\t}\n\t\t}\n\n\t\tif ($._doStroke) {\n\t\t\tlet hsw = $._hsw,\n\t\t\t\tn = getArcSegments($._scaledSW),\n\t\t\t\tti = $._matrixIndex,\n\t\t\t\togStrokeJoin = $._strokeJoin;\n\t\t\t$._strokeJoin = 'none';\n\t\t\t// draw lines between vertices\n\t\t\tfor (let i = 0; i < shapeVertCount - 1; i++) {\n\t\t\t\tlet v1 = i * 4;\n\t\t\t\tlet v2 = (i + 1) * 4;\n\t\t\t\t$.line(sv[v1], -sv[v1 + 1], sv[v2], -sv[v2 + 1]);\n\n\t\t\t\taddArc(sv[v1], sv[v1 + 1], hsw, hsw, 0, TAU, n, $._stroke, ti);\n\t\t\t}\n\t\t\tlet v1 = (shapeVertCount - 1) * 4;\n\t\t\tlet v2 = 0;\n\t\t\tif (close) $.line(sv[v1], -sv[v1 + 1], sv[v2], -sv[v2 + 1]);\n\t\t\taddArc(sv[v1], sv[v1 + 1], hsw, hsw, 0, TAU, n, $._stroke, ti);\n\t\t\t$._strokeJoin = ogStrokeJoin;\n\t\t}\n\n\t\t// reset for the next shape\n\t\tshapeVertCount = 0;\n\t\tsv = [];\n\t\tcurveVertices = [];\n\t};\n\n\t$.curve = (x1, y1, x2, y2, x3, y3, x4, y4) => {\n\t\t$.beginShape();\n\t\t$.curveVertex(x1, y1);\n\t\t$.curveVertex(x2, y2);\n\t\t$.curveVertex(x3, y3);\n\t\t$.curveVertex(x4, y4);\n\t\t$.endShape();\n\t};\n\n\t$.bezier = (x1, y1, x2, y2, x3, y3, x4, y4) => {\n\t\t$.beginShape();\n\t\t$.vertex(x1, y1);\n\t\t$.bezierVertex(x2, y2, x3, y3, x4, y4);\n\t\t$.endShape();\n\t};\n\n\t$.triangle = (x1, y1, x2, y2, x3, y3) => {\n\t\t$.beginShape();\n\t\t$.vertex(x1, y1);\n\t\t$.vertex(x2, y2);\n\t\t$.vertex(x3, y3);\n\t\t$.endShape(true);\n\t};\n\n\t$.quad = (x1, y1, x2, y2, x3, y3, x4, y4) => {\n\t\t$.beginShape();\n\t\t$.vertex(x1, y1);\n\t\t$.vertex(x2, y2);\n\t\t$.vertex(x3, y3);\n\t\t$.vertex(x4, y4);\n\t\t$.endShape(true);\n\t};\n\n\t$._hooks.preRender.push(() => {\n\t\t$._pass.setPipeline($._pipelines[1]);\n\n\t\tlet vertexBuffer = Q5.device.createBuffer({\n\t\t\tsize: vertIndex * 4,\n\t\t\tusage: GPUBufferUsage.VERTEX,\n\t\t\tmappedAtCreation: true\n\t\t});\n\n\t\tnew Float32Array(vertexBuffer.getMappedRange()).set(vertexStack.slice(0, vertIndex));\n\t\tvertexBuffer.unmap();\n\n\t\t$._pass.setVertexBuffer(0, vertexBuffer);\n\n\t\t$._buffers.push(vertexBuffer);\n\t});\n\n\t$._hooks.postRender.push(() => {\n\t\tvertIndex = 0;\n\t});\n};\nQ5.renderers.webgpu.image = ($, q) => {\n\t$._imagePL = 2;\n\t$._videoPL = 3;\n\n\t$._imageShaderCode =\n\t\t$._baseShaderCode +\n\t\t/* wgsl */ `\nstruct VertexParams {\n\t@builtin(vertex_index) vertexIndex : u32,\n\t@location(0) pos: vec2f,\n\t@location(1) texCoord: vec2f,\n\t@location(2) tintIndex: f32,\n\t@location(3) matrixIndex: f32,\n\t@location(4) imageAlpha: f32\n}\nstruct FragParams {\n\t@builtin(position) position: vec4f,\n\t@location(0) texCoord: vec2f,\n\t@location(1) tintColor: vec4f,\n\t@location(2) imageAlpha: f32\n}\n\n@group(0) @binding(0) var<uniform> q: Q5;\n@group(0) @binding(1) var<storage> transforms: array<mat4x4<f32>>;\n@group(0) @binding(2) var<storage> colors : array<vec4f>;\n\n@group(1) @binding(0) var samp: sampler;\n@group(1) @binding(1) var tex: texture_2d<f32>;\n\nfn transformVertex(pos: vec2f, matrixIndex: f32) -> vec4f {\n\tvar vert = vec4f(pos, 0f, 1f);\n\tvert = transforms[i32(matrixIndex)] * vert;\n\tvert.x /= q.halfWidth;\n\tvert.y /= q.halfHeight;\n\treturn vert;\n}\n\nfn applyTint(texColor: vec4f, tintColor: vec4f) -> vec4f {\n\t// apply the tint color to the sampled texture color at full strength\n\tlet tinted = vec4f(texColor.rgb * tintColor.rgb, texColor.a);\n\t// mix in the tint using the tint alpha as the blend strength\n\treturn mix(texColor, tinted, tintColor.a);\n}\n\n@vertex\nfn vertexMain(v: VertexParams) -> FragParams {\n\tvar vert = transformVertex(v.pos, v.matrixIndex);\n\n\tvar f: FragParams;\n\tf.position = vert;\n\tf.texCoord = v.texCoord;\n\tf.tintColor = colors[i32(v.tintIndex)];\n\tf.imageAlpha = v.imageAlpha;\n\treturn f;\n}\n\n@fragment\nfn fragMain(f: FragParams) -> @location(0) vec4f {\n\tvar texColor = textureSample(tex, samp, f.texCoord);\n\ttexColor.a *= f.imageAlpha;\n\treturn applyTint(texColor, f.tintColor);\n}\n`;\n\n\tlet imageShader = Q5.device.createShaderModule({\n\t\tlabel: 'imageShader',\n\t\tcode: $._imageShaderCode\n\t});\n\n\t$._videoShaderCode = $._imageShaderCode\n\t\t.replace('texture_2d<f32>', 'texture_external')\n\t\t.replace('textureSample', 'textureSampleBaseClampToEdge');\n\n\tlet videoShader = Q5.device.createShaderModule({\n\t\tlabel: 'videoShader',\n\t\tcode: $._videoShaderCode\n\t});\n\n\tlet vertexStack = new Float32Array($._graphics ? 1000 : 1e7),\n\t\tvertIndex = 0;\n\n\tlet vertexBufferLayout = {\n\t\tarrayStride: 28,\n\t\tattributes: [\n\t\t\t{ shaderLocation: 0, offset: 0, format: 'float32x2' },\n\t\t\t{ shaderLocation: 1, offset: 8, format: 'float32x2' },\n\t\t\t{ shaderLocation: 2, offset: 16, format: 'float32' }, // tintIndex\n\t\t\t{ shaderLocation: 3, offset: 20, format: 'float32' }, // matrixIndex\n\t\t\t{ shaderLocation: 4, offset: 24, format: 'float32' } // imageAlpha\n\t\t]\n\t};\n\n\tlet textureLayout = Q5.device.createBindGroupLayout({\n\t\tlabel: 'textureLayout',\n\t\tentries: [\n\t\t\t{\n\t\t\t\tbinding: 0,\n\t\t\t\tvisibility: GPUShaderStage.FRAGMENT,\n\t\t\t\tsampler: { type: 'filtering' }\n\t\t\t},\n\t\t\t{\n\t\t\t\tbinding: 1,\n\t\t\t\tvisibility: GPUShaderStage.FRAGMENT,\n\t\t\t\ttexture: { viewDimension: '2d', sampleType: 'float' }\n\t\t\t}\n\t\t]\n\t});\n\n\tlet videoTextureLayout = Q5.device.createBindGroupLayout({\n\t\tlabel: 'videoTextureLayout',\n\t\tentries: [\n\t\t\t{\n\t\t\t\tbinding: 0,\n\t\t\t\tvisibility: GPUShaderStage.FRAGMENT,\n\t\t\t\tsampler: { type: 'filtering' }\n\t\t\t},\n\t\t\t{\n\t\t\t\tbinding: 1,\n\t\t\t\tvisibility: GPUShaderStage.FRAGMENT,\n\t\t\t\texternalTexture: {}\n\t\t\t}\n\t\t]\n\t});\n\n\tlet imagePipelineLayout = Q5.device.createPipelineLayout({\n\t\tlabel: 'imagePipelineLayout',\n\t\tbindGroupLayouts: [...$._bindGroupLayouts, textureLayout]\n\t});\n\n\tlet videoPipelineLayout = Q5.device.createPipelineLayout({\n\t\tlabel: 'videoPipelineLayout',\n\t\tbindGroupLayouts: [...$._bindGroupLayouts, videoTextureLayout]\n\t});\n\n\t$._pipelineConfigs[2] = {\n\t\tlabel: 'imagePipeline',\n\t\tlayout: imagePipelineLayout,\n\t\tvertex: {\n\t\t\tmodule: imageShader,\n\t\t\tentryPoint: 'vertexMain',\n\t\t\tbuffers: [{ arrayStride: 0, attributes: [] }, vertexBufferLayout]\n\t\t},\n\t\tfragment: {\n\t\t\tmodule: imageShader,\n\t\t\tentryPoint: 'fragMain',\n\t\t\ttargets: [{ format: 'bgra8unorm', blend: $.blendConfigs.normal }]\n\t\t},\n\t\tprimitive: { topology: 'triangle-strip', stripIndexFormat: 'uint32' },\n\t\tmultisample: { count: 4 }\n\t};\n\n\t$._pipelines[2] = Q5.device.createRenderPipeline($._pipelineConfigs[2]);\n\n\t$._pipelineConfigs[3] = {\n\t\tlabel: 'videoPipeline',\n\t\tlayout: videoPipelineLayout,\n\t\tvertex: {\n\t\t\tmodule: videoShader,\n\t\t\tentryPoint: 'vertexMain',\n\t\t\tbuffers: [{ arrayStride: 0, attributes: [] }, vertexBufferLayout]\n\t\t},\n\t\tfragment: {\n\t\t\tmodule: videoShader,\n\t\t\tentryPoint: 'fragMain',\n\t\t\ttargets: [{ format: 'bgra8unorm', blend: $.blendConfigs.normal }]\n\t\t},\n\t\tprimitive: { topology: 'triangle-strip', stripIndexFormat: 'uint32' },\n\t\tmultisample: { count: 4 }\n\t};\n\n\t$._pipelines[3] = Q5.device.createRenderPipeline($._pipelineConfigs[3]);\n\n\t$._textureBindGroups = [];\n\n\t$._saveCanvas = async (data, ext) => {\n\t\tlet texture = data.texture,\n\t\t\tw = texture.width,\n\t\t\th = texture.height,\n\t\t\tbytesPerRow = Math.ceil((w * 4) / 256) * 256;\n\n\t\tlet buffer = Q5.device.createBuffer({\n\t\t\tsize: bytesPerRow * h,\n\t\t\tusage: GPUBufferUsage.COPY_DST | GPUBufferUsage.MAP_READ\n\t\t});\n\n\t\t$._buffers.push(buffer);\n\n\t\tlet en = Q5.device.createCommandEncoder();\n\n\t\ten.copyTextureToBuffer({ texture }, { buffer, bytesPerRow, rowsPerImage: h }, { width: w, height: h });\n\n\t\tQ5.device.queue.submit([en.finish()]);\n\n\t\tawait buffer.mapAsync(GPUMapMode.READ);\n\n\t\tlet pad = new Uint8Array(buffer.getMappedRange());\n\t\tdata = new Uint8Array(w * h * 4); // unpadded data\n\n\t\t// Remove padding from each row and swap BGR to RGB\n\t\tfor (let y = 0; y < h; y++) {\n\t\t\tconst p = y * bytesPerRow; // padded row offset\n\t\t\tconst u = y * w * 4; // unpadded row offset\n\t\t\tfor (let x = 0; x < w; x++) {\n\t\t\t\tconst pp = p + x * 4; // padded pixel offset\n\t\t\t\tconst up = u + x * 4; // unpadded pixel offset\n\t\t\t\tdata[up + 0] = pad[pp + 2]; // R <- B\n\t\t\t\tdata[up + 1] = pad[pp + 1]; // G <- G\n\t\t\t\tdata[up + 2] = pad[pp + 0]; // B <- R\n\t\t\t\tdata[up + 3] = pad[pp + 3]; // A <- A\n\t\t\t}\n\t\t}\n\n\t\tbuffer.unmap();\n\n\t\tlet colorSpace = $.canvas.colorSpace;\n\t\tdata = new Uint8ClampedArray(data.buffer);\n\t\tdata = new ImageData(data, w, h, { colorSpace });\n\t\tlet cnv = new $._Canvas(w, h);\n\t\tlet ctx = cnv.getContext('2d', { colorSpace });\n\t\tctx.putImageData(data, 0, 0);\n\n\t\t// Convert to blob then data URL\n\t\tlet blob = await cnv.convertToBlob({ type: 'image/' + ext });\n\t\treturn await new Promise((resolve) => {\n\t\t\tlet r = new FileReader();\n\t\t\tr.onloadend = () => resolve(r.result);\n\t\t\tr.readAsDataURL(blob);\n\t\t});\n\t};\n\n\tlet makeSampler = (filter) => {\n\t\t$._imageSampler = Q5.device.createSampler({\n\t\t\tmagFilter: filter,\n\t\t\tminFilter: filter\n\t\t});\n\t};\n\n\t$.smooth = () => makeSampler('linear');\n\t$.noSmooth = () => makeSampler('nearest');\n\n\t$.smooth();\n\n\tlet tIdx = 0,\n\t\tvidFrames = 0;\n\n\t$._addTexture = (img, texture) => {\n\t\tlet cnv = img.canvas || img;\n\n\t\tlet textureSize = [cnv.width, cnv.height, 1];\n\n\t\tif (!texture) {\n\t\t\ttexture = Q5.device.createTexture({\n\t\t\t\tsize: textureSize,\n\t\t\t\tformat: 'bgra8unorm',\n\t\t\t\tusage:\n\t\t\t\t\tGPUTextureUsage.TEXTURE_BINDING |\n\t\t\t\t\tGPUTextureUsage.COPY_SRC |\n\t\t\t\t\tGPUTextureUsage.COPY_DST |\n\t\t\t\t\tGPUTextureUsage.RENDER_ATTACHMENT\n\t\t\t});\n\n\t\t\tQ5.device.queue.copyExternalImageToTexture(\n\t\t\t\t{ source: cnv },\n\t\t\t\t{\n\t\t\t\t\ttexture,\n\t\t\t\t\tcolorSpace: $.canvas.colorSpace\n\t\t\t\t},\n\t\t\t\ttextureSize\n\t\t\t);\n\t\t}\n\n\t\timg.texture = texture;\n\t\timg.textureIndex = tIdx + vidFrames;\n\n\t\t$._textureBindGroups[img.textureIndex] = Q5.device.createBindGroup({\n\t\t\tlabel: img.src || 'canvas',\n\t\t\tlayout: textureLayout,\n\t\t\tentries: [\n\t\t\t\t{ binding: 0, resource: $._imageSampler },\n\t\t\t\t{ binding: 1, resource: texture.createView() }\n\t\t\t]\n\t\t});\n\n\t\ttIdx++;\n\t};\n\n\tlet Q5Image = Q5.Image;\n\tQ5.Image = function(w, h) {\n\t\tlet g = new Q5Image(...arguments);\n\t\tif (w > 1 && h > 1) {\n\t\t\t$._addTexture(g);\n\t\t\tg.modified = true;\n\t\t}\n\t\treturn g;\n\t};\n\n\t$.loadImage = (src, cb) => {\n\t\tq._preloadCount++;\n\t\tlet g = $._g.loadImage(src, (img) => {\n\t\t\t$._addTexture(img);\n\t\t\tq._preloadCount--;\n\t\t\tif (cb) cb(g);\n\t\t});\n\t\treturn g;\n\t};\n\n\t$.createImage = $._g.createImage;\n\n\tlet _createGraphics = $.createGraphics;\n\n\t$.createGraphics = (w, h, opt) => {\n\t\tlet g = _createGraphics(w, h, opt);\n\t\tif (g.canvas.renderer == 'webgpu') {\n\t\t\t$._addTexture(g, g._frameA);\n\t\t\t$._addTexture(g, g._frameB);\n\t\t\tg._beginRender();\n\t\t}\n\t\treturn g;\n\t};\n\n\t$.imageMode = (x) => ($._imageMode = x);\n\n\tconst addVert = (x, y, u, v, ci, ti, ia) => {\n\t\tlet s = vertexStack,\n\t\t\ti = vertIndex;\n\t\ts[i++] = x;\n\t\ts[i++] = y;\n\t\ts[i++] = u;\n\t\ts[i++] = v;\n\t\ts[i++] = ci;\n\t\ts[i++] = ti;\n\t\ts[i++] = ia;\n\t\tvertIndex = i;\n\t};\n\n\t$.image = (img, dx = 0, dy = 0, dw, dh, sx = 0, sy = 0, sw, sh) => {\n\t\tlet isVideo;\n\t\tif (img.textureIndex == undefined) {\n\t\t\tisVideo = img.tagName == 'VIDEO';\n\t\t\tif (!isVideo || !img.width || !img.currentTime) return;\n\t\t\tif (img.flipped) $.scale(-1, 1);\n\t\t}\n\n\t\tlet cnv = img.canvas || img;\n\n\t\tif ($._matrixDirty) $._saveMatrix();\n\n\t\tlet w = cnv.width,\n\t\t\th = cnv.height,\n\t\t\tpd = img._pixelDensity || 1;\n\n\t\tif (img._graphics) {\n\t\t\tlet g = img;\n\t\t\tif (g.drawStack.length) {\n\t\t\t\tg._render();\n\t\t\t\tg._finishRender();\n\t\t\t\tg.textureIndex += g.frameCount % 2 == 0 ? -1 : 1;\n\t\t\t\tg.resetMatrix();\n\t\t\t\tg._beginRender();\n\t\t\t\tg.frameCount++;\n\t\t\t}\n\t\t}\n\n\t\tif (img.modified) {\n\t\t\tQ5.device.queue.copyExternalImageToTexture(\n\t\t\t\t{ source: cnv },\n\t\t\t\t{ texture: img.texture, colorSpace: $.canvas.colorSpace },\n\t\t\t\t[w, h, 1]\n\t\t\t);\n\t\t\timg.modified = false;\n\t\t}\n\n\t\tdw ??= img.defaultWidth || img.videoWidth;\n\t\tdh ??= img.defaultHeight || img.videoHeight;\n\t\tsw ??= w;\n\t\tsh ??= h;\n\t\tsx *= pd;\n\t\tsy *= pd;\n\n\t\tlet [l, r, t, b] = $._calcBox(dx, dy, dw, dh, $._imageMode);\n\n\t\tlet u0 = sx / w,\n\t\t\tv0 = sy / h,\n\t\t\tu1 = (sx + sw) / w,\n\t\t\tv1 = (sy + sh) / h,\n\t\t\tti = $._matrixIndex,\n\t\t\tci = $._tint,\n\t\t\tia = $._globalAlpha;\n\n\t\taddVert(l, t, u0, v0, ci, ti, ia);\n\t\taddVert(r, t, u1, v0, ci, ti, ia);\n\t\taddVert(l, b, u0, v1, ci, ti, ia);\n\t\taddVert(r, b, u1, v1, ci, ti, ia);\n\n\t\tif (!isVideo) {\n\t\t\t$._drawStack.push($._imagePL, img.textureIndex);\n\t\t} else {\n\t\t\t// render video\n\t\t\tlet externalTexture = Q5.device.importExternalTexture({ source: img });\n\n\t\t\t// Create bind group for the external texture that will\n\t\t\t// only exist for this frame\n\t\t\t$._textureBindGroups.push(\n\t\t\t\tQ5.device.createBindGroup({\n\t\t\t\t\tlayout: videoTextureLayout,\n\t\t\t\t\tentries: [\n\t\t\t\t\t\t{ binding: 0, resource: $._imageSampler },\n\t\t\t\t\t\t{ binding: 1, resource: externalTexture }\n\t\t\t\t\t]\n\t\t\t\t})\n\t\t\t);\n\n\t\t\t$._drawStack.push($._videoPL, $._textureBindGroups.length - 1);\n\n\t\t\tif (img.flipped) $.scale(-1, 1);\n\t\t}\n\t};\n\n\t$._hooks.preRender.push(() => {\n\t\tif (!vertIndex) return;\n\n\t\t// Switch to image pipeline\n\t\t$._pass.setPipeline($._pipelines[2]);\n\n\t\tlet vertexBuffer = Q5.device.createBuffer({\n\t\t\tsize: vertIndex * 5,\n\t\t\tusage: GPUBufferUsage.VERTEX,\n\t\t\tmappedAtCreation: true\n\t\t});\n\n\t\tnew Float32Array(vertexBuffer.getMappedRange()).set(vertexStack.slice(0, vertIndex));\n\t\tvertexBuffer.unmap();\n\n\t\t$._pass.setVertexBuffer(1, vertexBuffer);\n\n\t\t$._buffers.push(vertexBuffer);\n\n\t\tif (vidFrames) {\n\t\t\t// Switch to video pipeline\n\t\t\t$._pass.setPipeline($._pipelines[3]);\n\t\t\t$._pass.setVertexBuffer(1, vertexBuffer);\n\t\t}\n\t});\n\n\t$._hooks.postRender.push(() => {\n\t\tvertIndex = 0;\n\t\t$._textureBindGroups.splice(tIdx, vidFrames);\n\t\tvidFrames = 0;\n\t});\n};\n\nQ5.THRESHOLD = 1;\nQ5.GRAY = 2;\nQ5.OPAQUE = 3;\nQ5.INVERT = 4;\nQ5.POSTERIZE = 5;\nQ5.DILATE = 6;\nQ5.ERODE = 7;\nQ5.BLUR = 8;\nQ5.renderers.webgpu.text = ($, q) => {\n\t$._textPL = 4;\n\n\t$._textShaderCode =\n\t\t$._baseShaderCode +\n\t\t/* wgsl */ `\nstruct VertexParams {\n\t@builtin(vertex_index) vertexIndex : u32,\n\t@builtin(instance_index) instanceIndex : u32\n}\nstruct FragParams {\n\t@builtin(position) position : vec4f,\n\t@location(0) texCoord : vec2f,\n\t@location(1) fillColor : vec4f,\n\t@location(2) strokeColor : vec4f,\n\t@location(3) strokeWeight : f32\n}\nstruct Char {\n\ttexOffset: vec2f,\n\ttexExtent: vec2f,\n\tsize: vec2f,\n\toffset: vec2f,\n}\nstruct Text {\n\tpos: vec2f,\n\tscale: f32,\n\tmatrixIndex: f32,\n\tfillIndex: f32,\n\tstrokeIndex: f32,\n\tstrokeWeight: f32\n}\n\n@group(0) @binding(0) var<uniform> q: Q5;\n@group(0) @binding(1) var<storage> transforms: array<mat4x4<f32>>;\n@group(0) @binding(2) var<storage> colors : array<vec4f>;\n\n@group(1) @binding(0) var fontTexture: texture_2d<f32>;\n@group(1) @binding(1) var fontSampler: sampler;\n@group(1) @binding(2) var<storage> fontChars: array<Char>;\n\n@group(2) @binding(0) var<storage> textChars: array<vec4f>;\n@group(2) @binding(1) var<storage> textMetadata: array<Text>;\n\nconst quad = array(vec2f(0, -1), vec2f(1, -1), vec2f(0, 0), vec2f(1, 0));\nconst uvs = array(vec2f(0, 1), vec2f(1, 1), vec2f(0, 0), vec2f(1, 0));\n\nfn calcPos(i: u32, char: vec4f, fontChar: Char, text: Text) -> vec2f {\n\treturn ((quad[i] * fontChar.size + char.xy + fontChar.offset) *\n\t\ttext.scale) + text.pos;\n}\n\nfn calcUV(i: u32, fontChar: Char) -> vec2f {\n\treturn uvs[i] * fontChar.texExtent + fontChar.texOffset;\n}\n\nfn transformVertex(pos: vec2f, matrixIndex: f32) -> vec4f {\n\tvar vert = vec4f(pos, 0.0, 1.0);\n\tvert = transforms[i32(matrixIndex)] * vert;\n\tvert.x /= q.halfWidth;\n\tvert.y /= q.halfHeight;\n\treturn vert;\n}\n\nfn calcDist(texCoord: vec2f, edgeWidth: f32) -> f32 {\n\tlet c = textureSample(fontTexture, fontSampler, texCoord);\n\tlet sigDist = max(min(c.r, c.g), min(max(c.r, c.g), c.b)) - edgeWidth;\n\n\tlet pxRange = 4.0;\n\tlet sz = vec2f(textureDimensions(fontTexture, 0));\n\tlet dx = sz.x * length(vec2f(dpdxFine(texCoord.x), dpdyFine(texCoord.x)));\n\tlet dy = sz.y * length(vec2f(dpdxFine(texCoord.y), dpdyFine(texCoord.y)));\n\tlet toPixels = pxRange * inverseSqrt(dx * dx + dy * dy);\n\treturn sigDist * toPixels;\n}\n\n@vertex\nfn vertexMain(v : VertexParams) -> FragParams {\n\tlet char = textChars[v.instanceIndex];\n\tlet text = textMetadata[i32(char.w)];\n\tlet fontChar = fontChars[i32(char.z)];\n\tlet pos = calcPos(v.vertexIndex, char, fontChar, text);\n\n\tvar vert = transformVertex(pos, text.matrixIndex);\n\n\tvar f : FragParams;\n\tf.position = vert;\n\tf.texCoord = calcUV(v.vertexIndex, fontChar);\n\tf.fillColor = colors[i32(text.fillIndex)];\n\tf.strokeColor = colors[i32(text.strokeIndex)];\n\tf.strokeWeight = text.strokeWeight;\n\treturn f;\n}\n\n@fragment\nfn fragMain(f : FragParams) -> @location(0) vec4f {\n\tlet edge = 0.5;\n\tlet dist = calcDist(f.texCoord, edge);\n\n\tif (f.strokeWeight == 0.0) {\n\t\tlet fillAlpha = smoothstep(-edge, edge, dist);\n\t\tlet color = vec4f(f.fillColor.rgb, f.fillColor.a * fillAlpha);\n\t\tif (color.a < 0.01) {\n\t\t\tdiscard;\n\t\t}\n\t\treturn color;\n\t}\n\n\tlet halfStroke = f.strokeWeight / 2.0;\n\tlet fillAlpha = smoothstep(-edge, edge, dist - halfStroke);\n\tlet strokeAlpha = smoothstep(-edge, edge, dist + halfStroke);\n\tvar color = mix(f.strokeColor, f.fillColor, fillAlpha);\n\tcolor = vec4f(color.rgb, color.a * strokeAlpha);\n\tif (color.a < 0.01) {\n\t\tdiscard;\n\t}\n\treturn color;\n}\n`;\n\n\tlet textShader = Q5.device.createShaderModule({\n\t\tlabel: 'textShader',\n\t\tcode: $._textShaderCode\n\t});\n\n\tlet textBindGroupLayout = Q5.device.createBindGroupLayout({\n\t\tlabel: 'textBindGroupLayout',\n\t\tentries: [\n\t\t\t{\n\t\t\t\tbinding: 0,\n\t\t\t\tvisibility: GPUShaderStage.VERTEX | GPUShaderStage.FRAGMENT,\n\t\t\t\tbuffer: { type: 'read-only-storage' }\n\t\t\t},\n\t\t\t{\n\t\t\t\tbinding: 1,\n\t\t\t\tvisibility: GPUShaderStage.VERTEX | GPUShaderStage.FRAGMENT,\n\t\t\t\tbuffer: { type: 'read-only-storage' }\n\t\t\t}\n\t\t]\n\t});\n\n\tlet fontSampler = Q5.device.createSampler({\n\t\tminFilter: 'linear',\n\t\tmagFilter: 'linear',\n\t\tmipmapFilter: 'linear',\n\t\tmaxAnisotropy: 16\n\t});\n\n\tlet fontBindGroupLayout = Q5.device.createBindGroupLayout({\n\t\tlabel: 'fontBindGroupLayout',\n\t\tentries: [\n\t\t\t{\n\t\t\t\tbinding: 0,\n\t\t\t\tvisibility: GPUShaderStage.FRAGMENT,\n\t\t\t\ttexture: {}\n\t\t\t},\n\t\t\t{\n\t\t\t\tbinding: 1,\n\t\t\t\tvisibility: GPUShaderStage.FRAGMENT,\n\t\t\t\tsampler: {}\n\t\t\t},\n\t\t\t{\n\t\t\t\tbinding: 2,\n\t\t\t\tvisibility: GPUShaderStage.VERTEX,\n\t\t\t\tbuffer: { type: 'read-only-storage' }\n\t\t\t}\n\t\t]\n\t});\n\n\tlet fontPipelineLayout = Q5.device.createPipelineLayout({\n\t\tbindGroupLayouts: [...$._bindGroupLayouts, fontBindGroupLayout, textBindGroupLayout]\n\t});\n\n\t$._pipelineConfigs[4] = {\n\t\tlabel: 'textPipeline',\n\t\tlayout: fontPipelineLayout,\n\t\tvertex: { module: textShader, entryPoint: 'vertexMain' },\n\t\tfragment: {\n\t\t\tmodule: textShader,\n\t\t\tentryPoint: 'fragMain',\n\t\t\ttargets: [{ format: 'bgra8unorm', blend: $.blendConfigs.normal }]\n\t\t},\n\t\tprimitive: { topology: 'triangle-strip', stripIndexFormat: 'uint32' },\n\t\tmultisample: { count: 4 }\n\t};\n\n\t$._pipelines[4] = Q5.device.createRenderPipeline($._pipelineConfigs[4]);\n\n\tclass MsdfFont {\n\t\tconstructor(bindGroup, lineHeight, chars, kernings) {\n\t\t\tthis.bindGroup = bindGroup;\n\t\t\tthis.lineHeight = lineHeight;\n\t\t\tthis.chars = chars;\n\t\t\tthis.kernings = kernings;\n\t\t\tlet charArray = Object.values(chars);\n\t\t\tthis.charCount = charArray.length;\n\t\t\tthis.defaultChar = charArray[0];\n\t\t}\n\t\tgetChar(charCode) {\n\t\t\treturn this.chars[charCode] ?? this.defaultChar;\n\t\t}\n\t\t// Gets the distance in pixels a line should advance for a given\n\t\t// character code. If the upcoming character code is given any\n\t\t// kerning between the two characters will be taken into account.\n\t\tgetXAdvance(charCode, nextCharCode = -1) {\n\t\t\tlet char = this.getChar(charCode);\n\t\t\tif (nextCharCode >= 0) {\n\t\t\t\tlet kerning = this.kernings.get(charCode);\n\t\t\t\tif (kerning) {\n\t\t\t\t\treturn char.xadvance + (kerning.get(nextCharCode) ?? 0);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn char.xadvance;\n\t\t}\n\t}\n\n\t$._fonts = [];\n\tlet fonts = {};\n\n\tlet createFont = async (fontJsonUrl, fontName, cb) => {\n\t\tq._preloadCount++;\n\n\t\tlet res = await fetch(fontJsonUrl);\n\t\tif (res.status == 404) {\n\t\t\tq._preloadCount--;\n\t\t\treturn '';\n\t\t}\n\t\tlet atlas = await res.json();\n\n\t\tlet slashIdx = fontJsonUrl.lastIndexOf('/');\n\t\tlet baseUrl = slashIdx != -1 ? fontJsonUrl.substring(0, slashIdx + 1) : '';\n\t\t// load font image\n\t\tres = await fetch(baseUrl + atlas.pages[0]);\n\t\tlet img = await createImageBitmap(await res.blob());\n\n\t\t// convert image to texture\n\t\tlet imgSize = [img.width, img.height, 1];\n\t\tlet texture = Q5.device.createTexture({\n\t\t\tlabel: `MSDF ${fontName}`,\n\t\t\tsize: imgSize,\n\t\t\tformat: 'rgba8unorm',\n\t\t\tusage: GPUTextureUsage.TEXTURE_BINDING | GPUTextureUsage.COPY_DST | GPUTextureUsage.RENDER_ATTACHMENT\n\t\t});\n\t\tQ5.device.queue.copyExternalImageToTexture({ source: img }, { texture }, imgSize);\n\n\t\t// chars and kernings can be stored as csv strings, making the file\n\t\t// size smaller, but they need to be parsed into arrays of objects\n\t\tif (typeof atlas.chars == 'string') {\n\t\t\tatlas.chars = $.CSV.parse(atlas.chars, ' ');\n\t\t\tatlas.kernings = $.CSV.parse(atlas.kernings, ' ');\n\t\t}\n\n\t\tlet charCount = atlas.chars.length;\n\t\tlet charsBuffer = Q5.device.createBuffer({\n\t\t\tsize: charCount * 32,\n\t\t\tusage: GPUBufferUsage.STORAGE,\n\t\t\tmappedAtCreation: true\n\t\t});\n\n\t\tlet fontChars = new Float32Array(charsBuffer.getMappedRange());\n\t\tlet u = 1 / atlas.common.scaleW;\n\t\tlet v = 1 / atlas.common.scaleH;\n\t\tlet chars = {};\n\t\tlet o = 0; // offset\n\t\tfor (let [i, char] of atlas.chars.entries()) {\n\t\t\tchars[char.id] = char;\n\t\t\tchars[char.id].charIndex = i;\n\t\t\tfontChars[o] = char.x * u; // texOffset.x\n\t\t\tfontChars[o + 1] = char.y * v; // texOffset.y\n\t\t\tfontChars[o + 2] = char.width * u; // texExtent.x\n\t\t\tfontChars[o + 3] = char.height * v; // texExtent.y\n\t\t\tfontChars[o + 4] = char.width; // size.x\n\t\t\tfontChars[o + 5] = char.height; // size.y\n\t\t\tfontChars[o + 6] = char.xoffset; // offset.x\n\t\t\tfontChars[o + 7] = -char.yoffset; // offset.y\n\t\t\to += 8;\n\t\t}\n\t\tcharsBuffer.unmap();\n\n\t\tlet fontBindGroup = Q5.device.createBindGroup({\n\t\t\tlabel: 'fontBindGroup',\n\t\t\tlayout: fontBindGroupLayout,\n\t\t\tentries: [\n\t\t\t\t{ binding: 0, resource: texture.createView() },\n\t\t\t\t{ binding: 1, resource: fontSampler },\n\t\t\t\t{ binding: 2, resource: { buffer: charsBuffer } }\n\t\t\t]\n\t\t});\n\n\t\tlet kernings = new Map();\n\t\tif (atlas.kernings) {\n\t\t\tfor (let kerning of atlas.kernings) {\n\t\t\t\tlet charKerning = kernings.get(kerning.first);\n\t\t\t\tif (!charKerning) {\n\t\t\t\t\tcharKerning = new Map();\n\t\t\t\t\tkernings.set(kerning.first, charKerning);\n\t\t\t\t}\n\t\t\t\tcharKerning.set(kerning.second, kerning.amount);\n\t\t\t}\n\t\t}\n\n\t\t$._font = new MsdfFont(fontBindGroup, atlas.common.lineHeight, chars, kernings);\n\n\t\t$._font.index = $._fonts.length;\n\t\t$._fonts.push($._font);\n\t\tfonts[fontName] = $._font;\n\n\t\tq._preloadCount--;\n\n\t\tif (cb) cb(fontName);\n\t};\n\n\t$._g.colorMode($.RGB, 1);\n\n\t$.loadFont = (url, cb) => {\n\t\tlet ext = url.slice(url.lastIndexOf('.') + 1);\n\t\tif (ext != 'json') return $._g.loadFont(url, cb);\n\t\tlet fontName = url.slice(url.lastIndexOf('/') + 1, url.lastIndexOf('-'));\n\t\tlet f = { family: fontName };\n\t\tf._loader = createFont(url, fontName, () => {\n\t\t\tdelete f._loader;\n\t\t\tif (cb) cb(f);\n\t\t});\n\t\tif ($._disablePreload) return f._loader;\n\t\treturn f;\n\t};\n\n\t$._loadDefaultFont = (fontName) => {\n\t\tfonts[fontName] = null;\n\t\tif (navigator.onLine) {\n\t\t\t$.loadFont(`https://q5js.org/fonts/${fontName}-msdf.json`);\n\t\t} else {\n\t\t\t$.loadFont(`/node_modules/q5/builtinFonts/${fontName}-msdf.json`);\n\t\t}\n\t};\n\n\t$._textSize = 18;\n\t$._textAlign = 'left';\n\t$._textBaseline = 'alphabetic';\n\tlet leadingSet = false,\n\t\tleading = 22.5,\n\t\tleadDiff = 4.5,\n\t\tleadPercent = 1.25;\n\n\t$.textFont = (fontName) => {\n\t\tif (!fontName) return $._font;\n\t\tif (typeof fontName != 'string') fontName = fontName.family;\n\t\tlet font = fonts[fontName];\n\t\tif (font) $._font = font;\n\t\telse if (font === undefined) $._loadDefaultFont(fontName);\n\t};\n\n\t$.textSize = (size) => {\n\t\tif (size == undefined) return $._textSize;\n\t\t$._textSize = size;\n\t\tif (!leadingSet) {\n\t\t\tleading = size * leadPercent;\n\t\t\tleadDiff = leading - size;\n\t\t}\n\t};\n\n\t$.textLeading = (lineHeight) => {\n\t\t$._font.lineHeight = leading = lineHeight;\n\t\tleadDiff = leading - $._textSize;\n\t\tleadPercent = leading / $._textSize;\n\t\tleadingSet = true;\n\t};\n\n\t$.textAlign = (horiz, vert) => {\n\t\t$._textAlign = horiz;\n\t\tif (vert) $._textBaseline = vert;\n\t};\n\n\tlet charStack = [],\n\t\ttextStack = [];\n\n\tlet measureText = (font, text, charCallback) => {\n\t\tlet maxWidth = 0,\n\t\t\toffsetX = 0,\n\t\t\toffsetY = 0,\n\t\t\tline = 0,\n\t\t\tprintedCharCount = 0,\n\t\t\tlineWidths = [],\n\t\t\tnextCharCode = text.charCodeAt(0);\n\n\t\tfor (let i = 0; i < text.length; ++i) {\n\t\t\tlet charCode = nextCharCode;\n\t\t\tnextCharCode = i < text.length - 1 ? text.charCodeAt(i + 1) : -1;\n\t\t\tswitch (charCode) {\n\t\t\t\tcase 10: // newline\n\t\t\t\t\tlineWidths.push(offsetX);\n\t\t\t\t\tline++;\n\t\t\t\t\tmaxWidth = Math.max(maxWidth, offsetX);\n\t\t\t\t\toffsetX = 0;\n\t\t\t\t\toffsetY -= font.lineHeight * leadPercent;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 13: // CR\n\t\t\t\t\tbreak;\n\t\t\t\tcase 32: // space\n\t\t\t\t\t// advance the offset without actually adding a character\n\t\t\t\t\toffsetX += font.getXAdvance(charCode);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 9: // tab\n\t\t\t\t\toffsetX += font.getXAdvance(charCode) * 2;\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tif (charCallback) {\n\t\t\t\t\t\tcharCallback(offsetX, offsetY, line, font.getChar(charCode));\n\t\t\t\t\t}\n\t\t\t\t\toffsetX += font.getXAdvance(charCode, nextCharCode);\n\t\t\t\t\tprintedCharCount++;\n\t\t\t}\n\t\t}\n\t\tlineWidths.push(offsetX);\n\t\tmaxWidth = Math.max(maxWidth, offsetX);\n\t\treturn {\n\t\t\twidth: maxWidth,\n\t\t\theight: lineWidths.length * font.lineHeight * leadPercent,\n\t\t\tlineWidths,\n\t\t\tprintedCharCount\n\t\t};\n\t};\n\n\t$.text = (str, x, y, w, h) => {\n\t\tif (!$._font) {\n\t\t\t// if the default font hasn't been loaded yet, try to load it\n\t\t\tif ($._font !== null) $.textFont('sans-serif');\n\t\t\treturn;\n\t\t}\n\n\t\tlet type = typeof str;\n\t\tif (type != 'string') {\n\t\t\tif (type == 'object') str = str.toString();\n\t\t\telse str = str + '';\n\t\t}\n\n\t\tif (str.length > w) {\n\t\t\tlet wrapped = [];\n\t\t\tlet i = 0;\n\t\t\twhile (i < str.length && wrapped.length < h) {\n\t\t\t\tlet max = i + w;\n\t\t\t\tif (max >= str.length) {\n\t\t\t\t\twrapped.push(str.slice(i));\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tlet end = str.lastIndexOf(' ', max);\n\t\t\t\tif (end == -1 || end < i) end = max;\n\t\t\t\twrapped.push(str.slice(i, end));\n\t\t\t\ti = end + 1;\n\t\t\t}\n\t\t\tstr = wrapped.join('\\n');\n\t\t}\n\n\t\tlet spaces = 0, // whitespace char count, not literal spaces\n\t\t\thasNewline;\n\t\tfor (let i = 0; i < str.length; i++) {\n\t\t\tlet c = str[i];\n\t\t\tswitch (c) {\n\t\t\t\tcase '\\n':\n\t\t\t\t\thasNewline = true;\n\t\t\t\tcase '\\r':\n\t\t\t\tcase '\\t':\n\t\t\t\tcase ' ':\n\t\t\t\t\tspaces++;\n\t\t\t}\n\t\t}\n\n\t\tlet charsData = [];\n\n\t\tlet ta = $._textAlign,\n\t\t\ttb = $._textBaseline,\n\t\t\ttextIndex = textStack.length,\n\t\t\to = 0, // offset\n\t\t\tmeasurements;\n\n\t\tif (ta == 'left' && !hasNewline) {\n\t\t\tmeasurements = measureText($._font, str, (textX, textY, line, char) => {\n\t\t\t\tcharsData[o] = textX;\n\t\t\t\tcharsData[o + 1] = textY;\n\t\t\t\tcharsData[o + 2] = char.charIndex;\n\t\t\t\tcharsData[o + 3] = textIndex;\n\t\t\t\to += 4;\n\t\t\t});\n\n\t\t\tif (tb == 'alphabetic') y -= $._textSize;\n\t\t\telse if (tb == 'center') y -= $._textSize * 0.5;\n\t\t\telse if (tb == 'bottom') y -= leading;\n\t\t} else {\n\t\t\t// measure the text to get the line widths before setting\n\t\t\t// the x position to properly align the text\n\t\t\tmeasurements = measureText($._font, str);\n\n\t\t\tlet offsetY = 0;\n\t\t\tif (tb == 'alphabetic') y -= $._textSize;\n\t\t\telse if (tb == 'center') offsetY = measurements.height * 0.5;\n\t\t\telse if (tb == 'bottom') offsetY = measurements.height;\n\n\t\t\tmeasureText($._font, str, (textX, textY, line, char) => {\n\t\t\t\tlet offsetX = 0;\n\t\t\t\tif (ta == 'center') {\n\t\t\t\t\toffsetX = measurements.width * -0.5 - (measurements.width - measurements.lineWidths[line]) * -0.5;\n\t\t\t\t} else if (ta == 'right') {\n\t\t\t\t\toffsetX = -measurements.lineWidths[line];\n\t\t\t\t}\n\t\t\t\tcharsData[o] = textX + offsetX;\n\t\t\t\tcharsData[o + 1] = textY + offsetY;\n\t\t\t\tcharsData[o + 2] = char.charIndex;\n\t\t\t\tcharsData[o + 3] = textIndex;\n\t\t\t\to += 4;\n\t\t\t});\n\t\t}\n\t\tcharStack.push(charsData);\n\n\t\tlet txt = [];\n\n\t\tif ($._matrixDirty) $._saveMatrix();\n\n\t\ttxt[0] = x;\n\t\ttxt[1] = -y;\n\t\ttxt[2] = $._textSize / 44;\n\t\ttxt[3] = $._matrixIndex;\n\t\ttxt[4] = $._doFill && $._fillSet ? $._fill : 0;\n\t\ttxt[5] = $._stroke;\n\t\ttxt[6] = $._doStroke && $._strokeSet ? $._strokeWeight : 0;\n\t\ttxt[7] = 0; // padding\n\n\t\ttextStack.push(txt);\n\t\t$._drawStack.push($._textPL, measurements.printedCharCount, $._font.index);\n\t};\n\n\t$.textWidth = (str) => {\n\t\tif (!$._font) return 0;\n\t\treturn measureText($._font, str).width;\n\t};\n\n\t$.createTextImage = (str, w, h) => {\n\t\t$._g.textSize($._textSize);\n\n\t\tif ($._doFill && $._fillSet) {\n\t\t\tlet fi = $._fill * 4;\n\t\t\t$._g.fill($._colorStack.slice(fi, fi + 4));\n\t\t}\n\t\tif ($._doStroke && $._strokeSet) {\n\t\t\tlet si = $._stroke * 4;\n\t\t\t$._g.stroke($._colorStack.slice(si, si + 4));\n\t\t}\n\n\t\tlet img = $._g.createTextImage(str, w, h);\n\t\tif (img.textureIndex == undefined) {\n\t\t\t$._createTexture(img);\n\t\t\tlet _copy = img.copy;\n\t\t\timg.copy = function() {\n\t\t\t\tlet copy = _copy();\n\t\t\t\t$._createTexture(copy);\n\t\t\t\treturn copy;\n\t\t\t};\n\t\t}\n\t\treturn img;\n\t};\n\n\t$.textImage = (img, x, y) => {\n\t\tif (typeof img == 'string') img = $.createTextImage(img);\n\n\t\tlet og = $._imageMode;\n\t\t$._imageMode = 'corner';\n\n\t\tlet ta = $._textAlign;\n\t\tif (ta == 'center') x -= img.canvas.hw;\n\t\telse if (ta == 'right') x -= img.width;\n\n\t\tlet bl = $._textBaseline;\n\t\tif (bl == 'alphabetic') y -= img._leading;\n\t\telse if (bl == 'center') y -= img._middle;\n\t\telse if (bl == 'bottom') y -= img._bottom;\n\t\telse if (bl == 'top') y -= img._top;\n\n\t\t$.image(img, x, y);\n\t\t$._imageMode = og;\n\t};\n\n\t$._hooks.preRender.push(() => {\n\t\tif (!charStack.length) return;\n\n\t\t// calculate total buffer size for text data\n\t\tlet totalTextSize = 0;\n\t\tfor (let charsData of charStack) {\n\t\t\ttotalTextSize += charsData.length * 4;\n\t\t}\n\n\t\t// create a single buffer for all the char data\n\t\tlet charBuffer = Q5.device.createBuffer({\n\t\t\tsize: totalTextSize,\n\t\t\tusage: GPUBufferUsage.STORAGE,\n\t\t\tmappedAtCreation: true\n\t\t});\n\n\t\t// copy all the text data into the buffer\n\t\tnew Float32Array(charBuffer.getMappedRange()).set(charStack.flat());\n\t\tcharBuffer.unmap();\n\n\t\t// calculate total buffer size for metadata\n\t\tlet totalMetadataSize = textStack.length * 8 * 4;\n\n\t\t// create a single buffer for all metadata\n\t\tlet textBuffer = Q5.device.createBuffer({\n\t\t\tlabel: 'textBuffer',\n\t\t\tsize: totalMetadataSize,\n\t\t\tusage: GPUBufferUsage.STORAGE,\n\t\t\tmappedAtCreation: true\n\t\t});\n\n\t\t// copy all metadata into the buffer\n\t\tnew Float32Array(textBuffer.getMappedRange()).set(textStack.flat());\n\t\ttextBuffer.unmap();\n\n\t\t$._buffers.push(charBuffer, textBuffer);\n\n\t\t// create a single bind group for the text buffer and metadata buffer\n\t\t$._textBindGroup = Q5.device.createBindGroup({\n\t\t\tlabel: 'textBindGroup',\n\t\t\tlayout: textBindGroupLayout,\n\t\t\tentries: [\n\t\t\t\t{ binding: 0, resource: { buffer: charBuffer } },\n\t\t\t\t{ binding: 1, resource: { buffer: textBuffer } }\n\t\t\t]\n\t\t});\n\t});\n\n\t$._hooks.postRender.push(() => {\n\t\tcharStack = [];\n\t\ttextStack = [];\n\t});\n};\nQ5.renderers.webgpu.shaders = ($) => {\n\tlet pipelineTypes = ['frame', 'shapes', 'image', 'video', 'text'];\n\n\tlet plCounters = {\n\t\tframe: 10,\n\t\tshapes: 1000,\n\t\timage: 2000,\n\t\tvideo: 3000,\n\t\ttext: 4000\n\t};\n\n\t$._createShader = (code, type = 'shapes') => {\n\t\tcode = code.trim();\n\n\t\t// default shader code\n\t\tlet def = $['_' + type + 'ShaderCode'];\n\n\t\tlet defVertIdx = def.indexOf('@vertex');\n\t\tlet defFragIdx = def.indexOf('@fragment');\n\n\t\tif (!code.includes('@fragment')) {\n\t\t\t// replace @vertex section\n\t\t\tcode = def.slice(0, defVertIdx) + code + '\\n\\n' + def.slice(defFragIdx);\n\t\t} else if (!code.includes('@vertex')) {\n\t\t\t// replace @fragment section\n\t\t\tcode = def.slice(0, defFragIdx) + code;\n\t\t} else {\n\t\t\t// replace @vertex and @fragment sections\n\t\t\tcode = def.slice(0, defVertIdx) + code;\n\t\t}\n\n\t\tlet shader = Q5.device.createShaderModule({\n\t\t\tlabel: type + 'Shader',\n\t\t\tcode: code\n\t\t});\n\t\tshader.type = type;\n\n\t\tlet pipelineIndex = pipelineTypes.indexOf(type);\n\t\tlet config = Object.assign({}, $._pipelineConfigs[pipelineIndex]);\n\t\tconfig.vertex.module = config.fragment.module = shader;\n\n\t\tlet pl = plCounters[type];\n\t\t$._pipelines[pl] = Q5.device.createRenderPipeline(config);\n\t\t$._pipelines[pl].shader = shader;\n\t\tshader.pipelineIndex = pl;\n\n\t\tplCounters[type]++;\n\n\t\treturn shader;\n\t};\n\n\t$.createShader = $.createShapesShader = $._createShader;\n\t$.createFrameShader = (code) => $._createShader(code, 'frame');\n\t$.createImageShader = (code) => $._createShader(code, 'image');\n\t$.createVideoShader = (code) => $._createShader(code, 'video');\n\t$.createTextShader = (code) => $._createShader(code, 'text');\n\n\t$.shader = (shader) => {\n\t\tif (shader.applyBeforeDraw) $._prevFramePL = shader.pipelineIndex;\n\t\telse $['_' + shader.type + 'PL'] = shader.pipelineIndex;\n\t};\n\n\t$.resetShader = (type = 'shapes') => {\n\t\tif (type == 'frame') $._prevFramePL = 0;\n\t\t$['_' + type + 'PL'] = pipelineTypes.indexOf(type);\n\t};\n\n\t$.resetShaders = () => {\n\t\t$._prevFramePL = $._framePL = 0;\n\t\t$._shapesPL = 1;\n\t\t$._imagePL = 2;\n\t\t$._videoPL = 3;\n\t\t$._textPL = 4;\n\t};\n};\n", "// x---------------------x\n// -----------------------\n// Imports\n// -----------------------\n// x---------------------x\n//\nimport { eff_on, html, render, sig } from \"./solid_monke/solid_monke\"\nimport QrScanner from 'qr-scanner';\nimport { Q5 as p5 } from \"./q5/q5.js\"\nimport * as tone from \"tone\"\n\n// x---------------------x\n// -----------------------\n// Model (Data) State\n// -----------------------\n// x---------------------x\n//\nlet capture; // webcam capture\nlet capturing = false\n\n// ---------------------\n// DOM Element\n// ---------------------\nlet canvas = document.getElementById('p5')\nlet c_width = canvas?.clientWidth\nlet c_height = canvas?.clientHeight\n\nlet current = \"video_1\"\n\n// let flash_timeout = 1500\n// let flash_counter = 0\n// let flash = null\n//\n// let flash_bg = \"yellow\"\n// let flash_text = \"blue\"\n\nlet videos = {\n\t\"video_1\": \"./test.mp4\",\n\t\"video_2\": \"./test.mp4\"\n}\n\nlet randoms = Array(50).fill(0).map((_, i) => ({ x: Math.random(), y: Math.random() }))\n\nlet video_loaded = {}\n\nlet sketch = (p: p5) => {\n\tfunction qr_code_init() {\n\t\tlet options = Object.keys(videos)\n\t\tsetInterval(() => {\n\t\t\tconsole.log('truing')\n\t\t\tlet canvas = document.querySelector('canvas');\n\t\t\tif (!canvas) return;\n\t\t\tQrScanner.scanImage(canvas, { returnDetailedScanResult: true })\n\t\t\t\t.then(result => {\n\t\t\t\t\tlet text = result.data\n\t\t\t\t\tconsole.log(text)\n\n\t\t\t\t\tif (text !== current) {\n\t\t\t\t\t\tif (options.includes(text)) {\n\t\t\t\t\t\t\tcurrent = text\n\t\t\t\t\t\t\tif (video_loaded[current]) {\n\t\t\t\t\t\t\t\tvideo_loaded[current].currentTime = 0\n\t\t\t\t\t\t\t\tvideo_loaded[current].play()\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.catch(error => { });\n\t\t}, 500)\n\t}\n\n\n\tp.preload = () => {\n\t\t// p5.textFont(font)\n\t\tObject.entries(videos).forEach(([key, spread]) => {\n\t\t\tlet vid = p.createVideo(spread);\n\t\t\tvid.autoplay = vid.muted = vid.loop = true;\n\t\t\tvid.hide()\n\t\t\tvideo_loaded[key] = vid\n\t\t})\n\t}\n\n\tp.setup = () => {\n\t\tp.createCanvas(c_width, c_height);\n\t\t// p5.frameRate(3);\n\t\tp.textFont(\"monospace\")\n\n\n\t\tif (capturing) {\n\t\t\t//@ts-ignore\n\t\t\tcapture = p.createCapture(p.VIDEO);\n\t\t\tcapture.size(c_width, c_height);\n\t\t\tcapture.hide();\n\t\t\tqr_code_init()\n\t\t}\n\n\t}\n\n\tp.draw = () => {\n\t\tp.background(255, 0, 0);\n\t\tp.fill(255, 150, 0);\n\t\t// p5.ellipse(200, 200, 500, 500);\n\t\tp.textSize(12);\n\n\t\tdraw_webcam(p)\n\t\tdraw_video(p)\n\n\t\t// draw pixel grid\n\t\tp.fill(0);\n\t}\n\n}\n\ndocument.onkeydown = e => {\n\tif (e.key == \"c\") current = \"\"\n}\n\nfunction draw_flash() {\n\t// if (\"string\" == typeof flash) {\n\t// \tif (flash_counter < flash_timeout) {\n\t// \t\tp5.fill(flash_bg)\n\t// \t\tp5.rect(0, 0, p5.width, p5.height)\n\t// \t\tp5.fill(flash_text)\n\t// \t\tp5.textSize(80)\n\t// \t\tp5.textAlign(p5.CENTER, p5.CENTER)\n\t// \t\tp5.text(flash, p5.width / 2, p5.height / 2)\n\t// \t\tp5.textAlign(p5.LEFT, p5.TOP)\n\t// \t\tflash_counter += delta\n\t// \t}\n\t// \telse {\n\t// \t\tflash_counter = 0\n\t// \t\tflash = null\n\t// \t}\n\t// }\n\t//\n}\n\nfunction draw_video(p) {\n\tif (video_loaded[current]) {\n\t\tlet video = video_loaded[current]\n\t\tlet w = video.width\n\t\tlet h = video.height\n\t\tlet ratio = (p.width / video.width) * .65\n\t\tlet w_r = w * ratio\n\t\tlet h_r = h * ratio\n\t\tlet w3 = (p.width - w_r)\n\t\tlet h3 = (p.height - h_r)\n\t\tlet index = Object.values(video_loaded).findIndex(e => e == video)\n\t\tp.image(video, randoms[index].x * w3, randoms[index].y * h3, w_r, h_r);\n\t}\n}\n\nfunction draw_webcam(p5) {\n\tif (capturing) {\n\t\tp5.image(capture, 0, 0, c_width, c_height);\n\t}\n}\n\nnew p5(sketch, document.getElementById('p5')!);\n\n"],
  "mappings": "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",
  "names": []
}
